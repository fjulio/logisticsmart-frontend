{"version":3,"sources":["pages/login/Login.js","pages/menu/MenuNav.js","pages/user/User.js","pages/equipment/Equipment.js","pages/invoice/Invoice.js","pages/location/Location.js","pages/entry/Entry.js","routes/RoutesPage.js","index.js"],"names":["baseUrl","cookies","Cookies","Login","state","form","username","password","handleChange","e","a","setState","target","name","value","login","axios","post","then","response","data","set","id","path","email","roles","jwt","window","location","href","alert","catch","error","console","log","get","className","type","onChange","this","onClick","React","Component","links","settings","MenuNav","useState","anchorElNav","setAnchorElNav","anchorElUser","setAnchorElUser","handleCloseNavMenu","handleCloseUserMenu","event","currentTarget","innerText","remove","AppBar","position","Container","maxWidth","Toolbar","disableGutters","Typography","variant","noWrap","component","sx","mr","display","xs","md","Box","flexGrow","IconButton","size","color","Menu","anchorEl","anchorOrigin","vertical","horizontal","keepMounted","transformOrigin","open","Boolean","onClose","map","page","MenuItem","textAlign","rol","Button","my","Tooltip","title","p","Avatar","alt","src","mt","setting","require","dataRoles","documentTypeData","code","style","top","left","transform","width","bgcolor","border","boxShadow","m","User","handleClose","handleOpen","handleCloseUpdate","openUpdate","handleOpenUpdate","getAll","users","search","params","documentType","documentNumber","getRoles","headers","Authorization","rols","delete","dato","confirm","showAlertDelete","save","preventDefault","showAlert","update","put","showAlertUpdate","handleChangeForm","handleClick","handleClickAlertDelete","handleClickAlertUpdate","componentDidMount","firstName","lastName","birthDate","phone","handleInputChange","bind","Snackbar","Alert","icon","fontSize","severity","WarningOutlined","InfoOutlined","noValidate","autoComplete","FormControl","minWidth","InputLabel","Select","labelId","label","dt","TextField","AddCircleRounded","TableContainer","Paper","Table","TableHead","TableRow","TableCell","align","TableBody","scope","Edit","Delete","Modal","AccountCircle","InputProps","startAdornment","InputAdornment","rolName","SaveOutlined","disabled","categoryData","baseLocation","baseEntry","styleModalEntry","Equipment","setRowsPerPage","rowsPerPage","handleChangePage","newPage","handleChangeRowsPerPage","handleCloseEntryRegistry","openModalEntry","handleOpenEntryRegistry","entry","equipment","equipmentId","dataLocations","handleCloseEntryMovement","openModalMovement","handleOpenEntryMovement","undefined","entryId","Cache","invoiceId","invoice","category","searchInvoice","baseInvoice","dateInvoice","registryEntry","getOutEntry","handleChangeEntry","handleChangeEquipment","handleChangeLocation","handleChangeFormInvoice","findAlertAndSendEmail","netWeight","grossWeight","height","equipmentLong","requisition","expectedEntryDate","expectedDepartureDate","realEntryDate","realDepartureDate","overflow","slice","status","Output","TablePagination","rowsPerPageOptions","count","length","onPageChange","onRowsPerPageChange","PrecisionManufacturing","Search","InputLabelProps","shrink","locationName","dataCountries","Invoice","handleOpenEquipment","openEquipment","dataInvoice","handleCloseEquipment","getCountries","baseProviderUrl","countries","saveEquipment","baseEquipmentUrl","handleChangeEquipmentInvoice","handleChangeFormProvider","provider","price","amount","providerName","country","FileCopy","countryName","Location","latitude","longitude","localization","realArea","capacity","capacityTotal","Entry","Date","toLocaleDateString","ExpectedDepartureDate","currentVersion","RoutesPage","exact","element","rootElement","document","getElementById","ReactDOM","render"],"mappings":"ySAMMA,EAAU,iCACVC,EAAU,IAAIC,IACdC,E,4MAEFC,MAAQ,CACJC,KAAK,CACDC,SAAU,GACVC,SAAU,K,EAIlBC,a,uCAAe,WAAMC,GAAN,SAAAC,EAAA,sEACL,EAAKC,SAAS,CAChBN,KAAK,2BACE,EAAKD,MAAMC,MADd,kBAECI,EAAEG,OAAOC,KAAOJ,EAAEG,OAAOE,UAJvB,2C,wDASfC,M,sBAAQ,sBAAAL,EAAA,sEACEM,IAAMC,KAAKjB,EAAS,UAAW,EAAKI,MAAMC,MAC/Ca,MAAK,SAAAC,GACJ,OAAOA,EAASC,QAEjBF,MAAK,SAAAC,GACa,MAAZA,GACClB,EAAQoB,IAAI,KAAMF,EAASG,GAAI,CAACC,KAAM,MACtCtB,EAAQoB,IAAI,WAAYF,EAASb,SAAU,CAACiB,KAAM,MAClDtB,EAAQoB,IAAI,QAASF,EAASK,MAAO,CAACD,KAAM,MAC5CtB,EAAQoB,IAAI,QAASF,EAASM,MAAO,CAACF,KAAM,MAC5CtB,EAAQoB,IAAI,QAASF,EAASO,IAAK,CAACH,KAAM,MAC1CI,OAAOC,SAASC,KAAO,eAEvBC,MAAM,sDAGbC,OAAM,SAAAC,GACHF,MAAM,mDACNG,QAAQC,IAAIF,MAnBZ,2C,uDAuBR,WACO/B,EAAQkC,IAAI,WACXR,OAAOC,SAASC,KAAO,Y,oBAI/B,WAAS,IAAD,OACJ,OACI,qBAAKO,UAAW,qBAAhB,SACI,qBAAKA,UAAW,sBAAhB,SACI,sBAAKA,UAAY,aAAjB,UACI,0CACA,uBACA,uBAAOC,KAAK,OACLD,UAAW,eACXvB,KAAK,WACLyB,SAAUC,KAAK/B,eAEtB,uBACA,8CACA,uBACI6B,KAAM,WACND,UAAY,eACZvB,KAAK,WACLyB,SAAUC,KAAK/B,eAEnB,uBACA,wBAAQ4B,UAAU,kBAAkBI,QAAS,kBAAM,EAAKzB,SAAxD,8B,GApEJ0B,IAAMC,WA4EXvC,I,2GCrETF,EAAU,IAAIC,IAEdyC,EAAQ,CAAC,CAAC9B,KAAM,YAAaU,KAAM,cAAe,CAACV,KAAM,iBAAkBU,KAAM,gBAAiB,CAACV,KAAM,QAASU,KAAM,UAAW,CAACV,KAAK,OAAQU,KAAK,SAAU,CAACV,KAAK,WAAYU,KAAK,aAAc,CAACV,KAAM,UAAWU,KAAK,SAAU,CAACV,KAAK,QAASU,KAAK,YAC1PqB,EAAW,CAAC,UAAW,UAAW,UA2JzBC,EAxJA,WAEX,MAAsCJ,IAAMK,SAAS,MAArD,mBAAOC,EAAP,KAAoBC,EAApB,KACA,EAAwCP,IAAMK,SAAS,MAAvD,mBAAOG,EAAP,KAAqBC,EAArB,KACA,EAA4CT,IAAMK,UAAS,GAA3D,mBASMK,GATN,UAS2B,WACzBH,EAAe,QAGXI,EAAsB,SAACC,GAC3BH,EAAgB,MACoB,UAAjCG,EAAMC,cAAcC,YACjBtD,EAAQuD,OAAO,KAAM,CAACjC,KAAM,MAC5BtB,EAAQuD,OAAO,QAAS,CAACjC,KAAK,MAC9BtB,EAAQuD,OAAO,QAAS,CAACjC,KAAK,MAC9BtB,EAAQuD,OAAO,WAAY,CAACjC,KAAK,MACjCI,OAAOC,SAASC,KAAK,OAM7B,OACQ,cAAC4B,EAAA,EAAD,CAAQC,SAAS,SAAjB,SACA,cAACC,EAAA,EAAD,CAAWC,SAAS,KAApB,SACE,eAACC,EAAA,EAAD,CAASC,gBAAc,EAAvB,UACE,cAACC,EAAA,EAAD,CACEC,QAAQ,KACRC,QAAM,EACNC,UAAU,MACVC,GAAI,CAAEC,GAAI,EAAGC,QAAS,CAAEC,GAAI,OAAQC,GAAI,SAJ1C,4BASA,eAACC,EAAA,EAAD,CAAKL,GAAI,CAAEM,SAAU,EAAGJ,QAAS,CAAEC,GAAI,OAAQC,GAAI,SAAnD,UACE,cAACG,EAAA,EAAD,CACEC,KAAK,QACL,aAAW,0BACX,gBAAc,cACd,gBAAc,OACdnC,QA3CU,SAACa,GACzBL,EAAeK,EAAMC,gBA2CPsB,MAAM,YAGR,cAACC,EAAA,EAAD,CACEvD,GAAG,cACHwD,SAAU/B,EACVgC,aAAc,CACZC,SAAU,SACVC,WAAY,QAEdC,aAAW,EACXC,gBAAiB,CACfH,SAAU,MACVC,WAAY,QAEdG,KAAMC,QAAQtC,GACduC,QAASnC,EACTgB,GAAI,CACFE,QAAS,CAAEC,GAAI,QAASC,GAAI,SAfhC,SAkBG5B,EAAM4C,KAAI,SAACC,GAAD,OACT,cAACC,EAAA,EAAD,CAAqBjD,QAASW,EAA9B,SACE,cAACY,EAAA,EAAD,CAAY2B,UAAU,SAAtB,SAAgCF,EAAK3E,QADxB2E,WAMrB,cAACzB,EAAA,EAAD,CACEC,QAAQ,KACRC,QAAM,EACNC,UAAU,MACVC,GAAI,CAAEM,SAAU,EAAGJ,QAAS,CAAEC,GAAI,OAAQC,GAAI,SAJhD,4BAQA,cAACC,EAAA,EAAD,CAAKL,GAAI,CAAEM,SAAU,EAAGJ,QAAS,CAAEC,GAAI,OAAQC,GAAI,SAAnD,SACG5B,EAAM4C,KAAI,SAACC,GAAD,OAEL,8BACkB,QAAbA,EAAK3E,MAA+B,WAAb2E,EAAK3E,KAAgE,iBAA3CZ,EAAQkC,IAAI,SAASoD,KAAI,SAACI,GAAD,OAASA,KAEpF,eAACC,EAAA,EAAD,CACI/D,KAAM2D,EAAKjE,KACX4C,GAAI,CAAE0B,GAAI,EAAGjB,MAAO,QAASP,QAAS,SAF1C,cAGOmB,EAAK3E,KAHZ,OAKE,GAEC,eAAC+E,EAAA,EAAD,CACC/D,KAAM2D,EAAKjE,KACX4C,GAAI,CAAE0B,GAAI,EAAGjB,MAAO,QAASP,QAAS,SAFvC,cAGImB,EAAK3E,KAHT,cAUf,eAAC2D,EAAA,EAAD,CAAKL,GAAI,CAAEM,SAAU,GAArB,UACE,cAACqB,EAAA,EAAD,CAASC,MAAM,gBAAf,SACE,eAACrB,EAAA,EAAD,CAAYlC,QAtGD,SAACa,GAC1BH,EAAgBG,EAAMC,gBAqGiCa,GAAI,CAAE6B,EAAG,GAAlD,UACA,cAACjC,EAAA,EAAD,CACFC,QAAQ,KACRC,QAAM,EACNC,UAAU,MACVC,GAAI,CAAES,MAAO,QAASR,GAAI,EAAGC,QAAS,CAAEC,GAAI,OAAQC,GAAI,SAJtD,SAMDtE,EAAQkC,IAAI,cAEX,cAAC8D,EAAA,EAAD,CAAQC,IAAI,aAAaC,IAAI,qCAG/B,cAACtB,EAAA,EAAD,CACEV,GAAI,CAAEiC,GAAI,QACV9E,GAAG,cACHwD,SAAU7B,EACV8B,aAAc,CACZC,SAAU,MACVC,WAAY,SAEdC,aAAW,EACXC,gBAAiB,CACfH,SAAU,MACVC,WAAY,SAEdG,KAAMC,QAAQpC,GACdqC,QAASlC,EAdX,SAgBGR,EAAS2C,KAAI,SAACc,GAAD,OACZ,cAACZ,EAAA,EAAD,CAAwBjD,QAASY,EAAjC,SACE,cAACW,EAAA,EAAD,CAAY2B,UAAU,SAAtB,SAAgCW,KADnBA,mB,0QC7H/BjF,IADWkF,EAAQ,KACZ,IACPC,GAAY,GACZC,GAAmB,CAAC,CAAEC,KAAM,KAAM5F,KAAM,wBAA0B,CAAE4F,KAAM,KAAM5F,KAAM,8BAA0B,CAAE4F,KAAM,KAAM5F,KAAM,4BAA2B,CAAE4F,KAAM,KAAM5F,KAAM,sBAAwB,CAAE4F,KAAM,KAAM5F,KAAM,uBAC/NZ,GAAU,IAAIC,IACdF,GAAU,6BACV0G,GAAQ,CACVhD,SAAU,WACViD,IAAK,MACLC,KAAM,MACNC,UAAW,wBACXC,MAAO,IACPC,QAAS,QACTC,OAAQ,iBACRC,UAAW,GACXjB,EAAG,EACHkB,EAAG,GAEDC,G,kDAMF,aAAe,IAAD,8BACV,gBALJC,YAAc,kBAAM,EAAKzG,SAAS,CAAEyE,MAAM,KAI5B,EAHdiC,WAAa,kBAAM,EAAK1G,SAAS,CAAEyE,MAAM,KAG3B,EAFdkC,kBAAoB,kBAAM,EAAK3G,SAAS,CAAE4G,YAAY,KAExC,EADdC,iBAAmB,SAACpG,GAAD,OAAU,EAAKT,SAAS,CAAE4G,YAAY,EAAMlH,KAAMe,EAAME,GAAIF,EAAKE,MACtE,EA+BdmG,OA/Bc,sBA+BL,sBAAA/G,EAAA,sEACCM,IAAMmB,IAAInC,GAAU,YACrBkB,MAAK,SAAAC,GACF,OAAOA,EAASC,QAEnBF,MAAK,SAAAC,GACF,IAAIuG,EAAQ,EAAKtH,MAAMgB,KACvBsG,EAAQvG,EACR,EAAKR,SAAS,CAAES,KAAMsG,OAEzB3F,OAAM,SAAAC,GACHC,QAAQC,IAAIF,MAXf,2CA/BK,EA+Cd2F,OA/Cc,sBA+CL,sBAAAjH,EAAA,sEACCM,IAAMmB,IAAInC,GAAU,qBAAqB,CAAC4H,OAAO,CAACC,aAAc,EAAKzH,MAAMC,KAAKwH,aAAcC,eAAgB,EAAK1H,MAAMC,KAAKyH,kBAC/H5G,MAAK,SAAAC,GACF,OAAOA,EAASC,QAEnBF,MAAK,SAAAC,GACF,IAAIuG,EAAQ,EAAKtH,MAAMgB,KACvBsG,EAAQvG,EACR,EAAKR,SAAS,CAAES,KAAMsG,OAEzB3F,OAAM,SAAAC,GACHC,QAAQC,IAAIF,MAXf,2CA/CK,EA8Dd+F,SA9Dc,sBA8DH,sBAAArH,EAAA,sEACDM,IAAMmB,IAAInC,GAAU,UAAW,CACjCgI,QAAS,CAAEC,cAAe,UAAYhI,GAAQkC,IAAI,YACnDjB,MAAK,SAAAC,GACJ,OAAOA,EAASC,QACjBF,MAAK,SAAAC,GACJ,IAAI+G,EAAO,EAAK9H,MAAMmG,UACtB2B,EAAO/G,EACP,EAAKR,SAAS,CAAE4F,UAAW2B,OAC5BnG,OAAM,SAAAC,GACLC,QAAQC,IAAIF,MAVT,kDA9DG,EA4EdmG,OA5Ec,uCA4EL,WAAOC,GAAP,SAAA1H,EAAA,0DACQiB,OAAO0G,QAAQ,gCAAgCD,EAAK9H,UAD5D,gCAGKU,IAAMmH,OAAOnI,GAAU,eAAiBoI,EAAK9G,IAClDJ,MAAK,SAAAC,GACF,OAAOA,EAASC,QACjBF,MAAK,SAAAC,GACJ,IAAIuG,EAAQ,EAAKtH,MAAMgB,KACvBsG,EAAQvG,EACR,EAAKR,SAAS,CAAES,KAAMsG,EAAOY,iBAAiB,OAC/CvG,OAAM,SAAAC,GACLC,QAAQC,IAAIF,MAXf,2CA5EK,wDA6FduG,KA7Fc,uCA6FP,WAAOlF,GAAP,SAAA3C,EAAA,6DACH2C,EAAMmF,iBADH,SAEGxH,IAAMC,KAAKjB,GAAU,cAAe,EAAKI,MAAMC,MAChDa,MAAK,SAAAC,GACF,OAAOA,EAASC,QACjBF,MAAK,SAAAC,GACJ,EAAKsG,SACL,EAAK9G,SAAS,CAAC8H,WAAW,EAAMrD,MAAM,OACvCrD,OAAM,SAAAC,GACLC,QAAQC,IAAIF,MATjB,kDA7FO,wDA0Gd0G,OA1Gc,uCA0GL,WAAOrF,GAAP,SAAA3C,EAAA,6DACL2C,EAAMmF,iBADD,SAECxH,IAAM2H,IAAI3I,GAAU,eAAe,EAAKI,MAAMkB,GAAI,EAAKlB,MAAMC,MAC9Da,MAAK,SAAAC,GACF,OAAOA,EAASC,QACjBF,MAAK,SAAAC,GACJ,EAAKsG,SACL,EAAK9G,SAAS,CAACiI,iBAAiB,EAAMrB,YAAY,OACnDxF,OAAM,SAAAC,GACLC,QAAQC,IAAIF,MATf,kDA1GK,wDAiId6G,iBAjIc,uCAiIK,WAAMpI,GAAN,SAAAC,EAAA,sEACT,EAAKC,SAAS,CAChBN,KAAK,2BACE,EAAKD,MAAMC,MADd,kBAECI,EAAEG,OAAOC,KAAOJ,EAAEG,OAAOE,UAJnB,2CAjIL,wDA0IdgI,YA1Ic,uCA0IA,WAAMrI,GAAN,SAAAC,EAAA,sDACV,EAAKC,SAAS,CAAE8H,WAAY,EAAKrI,MAAMqI,YAD7B,2CA1IA,wDA8IdM,uBA9Ic,uCA8IW,WAAMtI,GAAN,SAAAC,EAAA,sDACrB,EAAKC,SAAS,CAAE2H,iBAAkB,EAAKlI,MAAMkI,kBADxB,2CA9IX,wDAkJdU,uBAlJc,uCAkJW,WAAMvI,GAAN,SAAAC,EAAA,sDACrB,EAAKC,SAAS,CAAEiI,iBAAkB,EAAKxI,MAAMwI,kBADxB,2CAlJX,wDAsJdK,kBAtJc,sBAsJM,sBAAAvI,EAAA,sEACV,EAAK+G,SADK,uBAEV,EAAKM,WAFK,OAGX9H,GAAQkC,IAAI,WACbR,OAAOC,SAASC,KAAO,MAJX,2CApJhB,EAAKzB,MAAQ,CACToG,iBAAkBA,GAClBpF,KAAMA,GACNmF,UAAWA,GACXnB,MAAM,EACNmC,YAAY,EACZkB,WAAW,EACXH,iBAAiB,EACjBM,iBAAiB,EACjBtH,GAAI,GACJjB,KAAM,CACFC,SAAU,GACVkB,MAAO,GACPjB,SAAU,GACVuH,eAAgB,GAChBD,aAAc,GACdqB,UAAW,GACXC,SAAU,GACVC,UAAW,GACX1F,SAAU,GACV2F,MAAO,GACP1D,IAAK,KAKb,EAAK2D,kBAAoB,EAAKA,kBAAkBC,KAAvB,gBA5Bf,E,qDAuHd,SAAkBlG,GACd,IAAMzC,EAASyC,EAAMzC,OACfE,EAAQF,EAAOE,MACfD,EAAOD,EAAOC,KAEpB0B,KAAK5B,SAAL,eACKE,EAAOC,M,oBAiChB,WAAU,IAAD,OACL,OACI,gCACI,cAAC,EAAD,IACA,eAAC,YAAD,WACI,uBACA,sCACA,uBACA,cAAC0I,GAAA,EAAD,CAAUpE,KAAM7C,KAAKnC,MAAMqI,UAA3B,SACI,cAACgB,GAAA,EAAD,CAAOC,KAAM,cAAC,KAAD,CAAWC,SAAS,YAAcC,SAAS,UAAUtE,QAAS/C,KAAKuG,YAAhF,6CAIJ,cAACU,GAAA,EAAD,CAAUpE,KAAM7C,KAAKnC,MAAMkI,gBAA3B,SACI,cAACmB,GAAA,EAAD,CAAOC,KAAM,cAACG,GAAA,EAAD,IAAqCD,SAAS,UAAUtE,QAAS/C,KAAKwG,uBAAnF,6CAIJ,cAACS,GAAA,EAAD,CAAUpE,KAAM7C,KAAKnC,MAAMwI,gBAA3B,SACI,cAACa,GAAA,EAAD,CAAOC,KAAM,cAACI,GAAA,EAAD,IAA+BF,SAAS,OAAOtE,QAAS/C,KAAKyG,uBAA1E,6CAIJ,cAAC,IAAD,CAAK9E,UAAU,OACXC,GAAI,CACA,uBAAwB,CAAE+C,EAAG,EAAGJ,MAAO,SAE3CiD,YAAU,EACVC,aAAa,MALjB,SAMI,gCAGI,eAACC,GAAA,EAAD,CAAajG,QAAQ,WAAWG,GAAI,CAAE+C,EAAG,EAAGgD,SAAU,KAAtD,UACI,cAACC,WAAD,CAAY7I,GAAG,eAAf,2BACA,eAAC8I,GAAA,EAAD,CACIC,QAAQ,eACR/I,GAAG,eACHR,MAAOyB,KAAKnC,MAAMC,KAAKwH,aACvBvF,SAAUC,KAAKsG,iBACfyB,MAAM,gBACNzJ,KAAK,eACLmD,QAAQ,WAPZ,UASI,cAACyB,EAAA,EAAD,CAAU3E,MAAM,GAAhB,SACI,wCAEHyB,KAAKnC,MAAMoG,iBAAiBjB,KAAI,SAACgF,GAAD,OAC7B,cAAC9E,EAAA,EAAD,CAAU3E,MAAOyJ,EAAG9D,KAApB,SAA2B8D,EAAG1J,gBAK1C,cAAC2J,EAAA,EAAD,CACIlJ,GAAG,oBACHgJ,MAAM,cACNtG,QAAQ,WACRnD,KAAK,iBACLyB,SAAUC,KAAKsG,mBAElB,KACD,cAAC,SAAD,CAAQjE,MAAM,UAAUpC,QAASD,KAAKoF,OAAtC,SAA8C,cAAC,KAAD,WAKtD,uBACA,uBACA,cAAC,SAAD,CAAQ/C,MAAM,UAAUpC,QAASD,KAAK8E,WAAtC,SAAmD,cAACoD,GAAA,EAAD,MACnD,uBACA,uBACA,cAACC,EAAA,EAAD,CAAgBxG,UAAWyG,IAA3B,SACI,eAACC,EAAA,EAAD,CAAOzG,GAAI,CAAE+F,SAAU,KAAO,aAAW,eAAzC,UACI,cAACW,EAAA,EAAD,UACI,eAACC,EAAA,EAAD,WACI,cAACC,EAAA,EAAD,uBACA,cAACA,EAAA,EAAD,CAAWC,MAAM,QAAjB,2BACA,cAACD,EAAA,EAAD,CAAWC,MAAM,QAAjB,yBACA,cAACD,EAAA,EAAD,CAAWC,MAAM,QAAjB,uBACA,cAACD,EAAA,EAAD,CAAWC,MAAM,QAAjB,sBACA,cAACD,EAAA,EAAD,CAAWC,MAAM,QAAjB,mBACA,cAACD,EAAA,EAAD,CAAWC,MAAM,QAAjB,mBACA,cAACD,EAAA,EAAD,CAAWC,MAAM,QAAjB,sBACA,cAACD,EAAA,EAAD,CAAWC,MAAM,eAGzB,cAACC,EAAA,EAAD,UACK1I,KAAKnC,MAAMgB,KAAKmE,KAAI,SAACnE,GAAD,OACjB,eAAC0J,EAAA,EAAD,CAEI3G,GAAI,CAAE,mCAAoC,CAAE6C,OAAQ,IAFxD,UAII,cAAC+D,EAAA,EAAD,CAAW7G,UAAU,KAAKgH,MAAM,OAAhC,SACK9J,EAAKd,WAEV,cAACyK,EAAA,EAAD,CAAWC,MAAM,QAAjB,SAA0B5J,EAAKyG,eAC/B,cAACkD,EAAA,EAAD,CAAWC,MAAM,QAAjB,SAA0B5J,EAAK0G,iBAC/B,cAACiD,EAAA,EAAD,CAAWC,MAAM,QAAjB,SAA0B5J,EAAK8H,YAC/B,cAAC6B,EAAA,EAAD,CAAWC,MAAM,QAAjB,SAA0B5J,EAAK+H,WAC/B,cAAC4B,EAAA,EAAD,CAAWC,MAAM,QAAjB,SAA0B5J,EAAKI,QAC/B,cAACuJ,EAAA,EAAD,CAAWC,MAAM,QAAjB,SAA0B5J,EAAKiI,QAC/B,cAAC0B,EAAA,EAAD,CAAWC,MAAM,QAAjB,SAA0B5J,EAAKsC,WAC/B,eAACqH,EAAA,EAAD,CAAWC,MAAM,QAAjB,UACI,cAACtG,EAAA,EAAD,CAAYE,MAAM,UAAUpC,QAAS,kBAAM,EAAKgF,iBAAiBpG,IAAjE,SAAwE,cAAC+J,GAAA,EAAD,MAAqB,IAC7F,cAACzG,EAAA,EAAD,CAAYE,MAAM,QAAQpC,QAAS,kBAAM,EAAK2F,OAAO/G,IAArD,SAA4D,cAACgK,GAAA,EAAD,WAf3DhK,EAAKE,iBAsBlC,cAAC+J,GAAA,EAAD,CACIjG,KAAM7C,KAAKnC,MAAMgF,KACjBE,QAAS/C,KAAK6E,YACd,kBAAgB,oBAChB,mBAAiB,0BAJrB,SAMI,eAAC,IAAD,CAAKjD,GAAIuC,GAAOxC,UAAU,OAEtB6F,YAAU,EACVC,aAAa,MAHjB,UAII,gCACI,eAACjG,EAAA,EAAD,gCAA8B,cAACuH,GAAA,EAAD,OAC9B,uBACA,cAACd,EAAA,EAAD,CACIF,MAAM,cACNtG,QAAQ,SACRnD,KAAK,iBACLyB,SAAUC,KAAKsG,mBAElB,OACD,eAACoB,GAAA,EAAD,CAAajG,QAAQ,WAAWG,GAAI,CAAE+C,EAAG,EAAGgD,SAAU,KAAtD,UACI,cAACC,WAAD,CAAY7I,GAAG,eAAf,2BACA,eAAC8I,GAAA,EAAD,CACIC,QAAQ,eACR/I,GAAG,eACHR,MAAOyB,KAAKnC,MAAMC,KAAKwH,aACvBvF,SAAUC,KAAKsG,iBACfyB,MAAM,gBACNzJ,KAAK,eACLmD,QAAQ,SAPZ,UASI,cAACyB,EAAA,EAAD,CAAU3E,MAAM,GAAhB,SACI,wCAEHyB,KAAKnC,MAAMoG,iBAAiBjB,KAAI,SAACgF,GAAD,OAC7B,cAAC9E,EAAA,EAAD,CAAU3E,MAAOyJ,EAAG9D,KAApB,SAA2B8D,EAAG1J,mBAM9C,uBACA,gCACI,cAAC2J,EAAA,EAAD,CACIF,MAAM,YACNtG,QAAQ,SACRnD,KAAK,YACLyB,SAAUC,KAAKsG,mBAElB,OACD,cAAC2B,EAAA,EAAD,CACIlJ,GAAG,oBACHgJ,MAAM,WACNtG,QAAQ,SACRnD,KAAK,WACLyB,SAAUC,KAAKsG,mBAElB,OACD,cAAC2B,EAAA,EAAD,CACIlJ,GAAG,QACHgJ,MAAM,QACNtG,QAAQ,SACRnD,KAAK,QACLyB,SAAUC,KAAKsG,sBAGvB,uBACA,gCACI,cAAC2B,EAAA,EAAD,CACIlJ,GAAG,WACHgJ,MAAM,WACNtG,QAAQ,SACRnD,KAAK,WACLyB,SAAUC,KAAKsG,iBACf0C,WAAY,CACRC,eACI,cAACC,EAAA,EAAD,CAAgB/H,SAAS,QAAzB,SAEI,cAAC4H,GAAA,EAAD,SAKf,OACD,cAACd,EAAA,EAAD,CACIlJ,GAAG,QACHgJ,MAAM,QACNtG,QAAQ,SACRnD,KAAK,QACLyB,SAAUC,KAAKsG,iBACf0C,WAAY,CACRC,eACI,cAACC,EAAA,EAAD,CAAgB/H,SAAS,QAAzB,kBAMX,OACD,cAAC8G,EAAA,EAAD,CACIlJ,GAAG,WACHgJ,MAAM,WACNtG,QAAQ,SACR3B,KAAK,WACLxB,KAAK,WACLyB,SAAUC,KAAKsG,sBAGvB,uBACA,gCACI,cAAC2B,EAAA,EAAD,CACIlJ,GAAG,WACHgJ,MAAM,WACNtG,QAAQ,SACRnD,KAAK,WACLyB,SAAUC,KAAKsG,mBAElB,OACD,eAACoB,GAAA,EAAD,CAAajG,QAAQ,WAAWG,GAAI,CAAE+C,EAAG,EAAGgD,SAAU,KAAtD,UACI,cAACC,WAAD,CAAY7I,GAAG,oCAAf,iBACA,eAAC8I,GAAA,EAAD,CACIC,QAAQ,MACR/I,GAAG,MACHR,MAAOyB,KAAKnC,MAAMC,KAAKsF,IACvBrD,SAAUC,KAAKsG,iBACfyB,MAAM,MACNzJ,KAAK,MACLmD,QAAQ,SAPZ,UASI,cAACyB,EAAA,EAAD,CAAU3E,MAAM,GAAhB,SACI,wCAEHyB,KAAKnC,MAAMmG,UAAUhB,KAAI,SAACI,GAAD,OACtB,cAACF,EAAA,EAAD,CAAU3E,MAAO6E,EAAIc,KAArB,SAA4Bd,EAAI+F,sBAMhD,uBACA,eAAC,SAAD,CAAQrJ,KAAK,SAASuC,MAAM,UAAUpC,QAASD,KAAKgG,KAApD,kBAA+D,cAACoD,GAAA,EAAD,YAKvE,cAACN,GAAA,EAAD,CACIjG,KAAM7C,KAAKnC,MAAMmH,WACjBjC,QAAS/C,KAAK+E,kBACd,kBAAgB,oBAChB,mBAAiB,0BAJrB,SAMI,eAAC,IAAD,CAAKnD,GAAIuC,GAAOxC,UAAU,OAEtB6F,YAAU,EACVC,aAAa,MAHjB,UAII,gCACI,eAACjG,EAAA,EAAD,0BAAwB,cAACuH,GAAA,EAAD,OACxB,uBACA,cAACd,EAAA,EAAD,CACIF,MAAM,cACNtG,QAAQ,SACRnD,KAAK,iBACLyB,SAAUC,KAAKsG,iBACf/H,MAAOyB,KAAKnC,MAAMC,KAAKyH,iBAE1B,OACD,eAACmC,GAAA,EAAD,CAAajG,QAAQ,WAAWG,GAAI,CAAE+C,EAAG,EAAGgD,SAAU,KAAtD,UACI,cAACC,WAAD,CAAY7I,GAAG,eAAf,2BACA,eAAC8I,GAAA,EAAD,CACIC,QAAQ,eACR/I,GAAG,eACHR,MAAOyB,KAAKnC,MAAMC,KAAKwH,aACvBvF,SAAUC,KAAKsG,iBACfyB,MAAM,gBACNzJ,KAAK,eACLmD,QAAQ,SAPZ,UASI,cAACyB,EAAA,EAAD,CAAU3E,MAAM,GAAhB,SACI,wCAEHyB,KAAKnC,MAAMoG,iBAAiBjB,KAAI,SAACgF,GAAD,OAC7B,cAAC9E,EAAA,EAAD,CAAU3E,MAAOyJ,EAAG9D,KAApB,SAA2B8D,EAAG1J,mBAM9C,uBACA,gCACI,cAAC2J,EAAA,EAAD,CACIF,MAAM,YACNtG,QAAQ,SACRnD,KAAK,YACLyB,SAAUC,KAAKsG,iBACf/H,MAAOyB,KAAKnC,MAAMC,KAAK6I,YAE1B,OACD,cAACsB,EAAA,EAAD,CACIlJ,GAAG,oBACHgJ,MAAM,WACNtG,QAAQ,SACRnD,KAAK,WACLyB,SAAUC,KAAKsG,iBACf/H,MAAOyB,KAAKnC,MAAMC,KAAK8I,WAE1B,OACD,cAACqB,EAAA,EAAD,CACIlJ,GAAG,QACHgJ,MAAM,QACNtG,QAAQ,SACRnD,KAAK,QACLyB,SAAUC,KAAKsG,iBACf/H,MAAOyB,KAAKnC,MAAMC,KAAKgJ,WAG/B,uBACA,gCACI,cAACmB,EAAA,EAAD,CACIoB,UAAQ,EACRtK,GAAG,WACHgJ,MAAM,WACNtG,QAAQ,SACRnD,KAAK,WACLyB,SAAUC,KAAKsG,iBACf0C,WAAY,CACRC,eACI,cAACC,EAAA,EAAD,CAAgB/H,SAAS,QAAzB,SAEI,cAAC4H,GAAA,EAAD,OAIZxK,MAAOyB,KAAKnC,MAAMC,KAAKC,WAE1B,OACD,cAACkK,EAAA,EAAD,CACIlJ,GAAG,QACHgJ,MAAM,QACNtG,QAAQ,SACRnD,KAAK,QACL+K,UAAQ,EACRtJ,SAAUC,KAAKsG,iBACf0C,WAAY,CACRC,eACI,cAACC,EAAA,EAAD,CAAgB/H,SAAS,QAAzB,gBAKR5C,MAAOyB,KAAKnC,MAAMC,KAAKmB,QAE1B,OACD,cAACgJ,EAAA,EAAD,CACIlJ,GAAG,WACHgJ,MAAM,WACNtG,QAAQ,SACR3B,KAAK,WACLxB,KAAK,WACLyB,SAAUC,KAAKsG,iBACf/H,MAAOyB,KAAKnC,MAAMC,KAAKE,cAG/B,uBACA,gCACI,cAACiK,EAAA,EAAD,CACIlJ,GAAG,WACHgJ,MAAM,WACNtG,QAAQ,SACRnD,KAAK,WACLyB,SAAUC,KAAKsG,iBACf/H,MAAOyB,KAAKnC,MAAMC,KAAKqD,WAE1B,OACD,eAACuG,GAAA,EAAD,CAAajG,QAAQ,WAAWG,GAAI,CAAE+C,EAAG,EAAGgD,SAAU,KAAtD,UACI,cAACC,WAAD,CAAY7I,GAAG,oCAAf,iBACA,eAAC8I,GAAA,EAAD,CACIC,QAAQ,MACR/I,GAAG,MACHR,MAAOyB,KAAKnC,MAAMC,KAAKsF,IACvBrD,SAAUC,KAAKsG,iBACfyB,MAAM,MACNzJ,KAAK,MACLmD,QAAQ,SAPZ,UASI,cAACyB,EAAA,EAAD,CAAU3E,MAAM,GAAhB,SACI,wCAEHyB,KAAKnC,MAAMmG,UAAUhB,KAAI,SAACI,GAAD,OACtB,cAACF,EAAA,EAAD,CAAU3E,MAAO6E,EAAIc,KAArB,SAA4Bd,EAAI+F,sBAMhD,uBACA,eAAC,SAAD,CAAQrJ,KAAK,SAASuC,MAAM,UAAUpC,QAASD,KAAKmG,OAApD,kBAAiE,cAACiD,GAAA,EAAD,mB,GAzjBtElJ,IAAMC,WAmkBVyE,M,uEChlBT/F,GAAO,GACPmF,GAAY,GACZsF,GAAe,CAAC,CAAEpF,KAAM,aAAc5F,KAAM,eAAiB,CAAE4F,KAAM,aAAc5F,KAAM,gBACzFZ,GAAU,IAAIC,IACdF,GAAU,sCAEV8L,GAAe,qCACfC,GAAY,oCACZrF,GAAQ,CACVhD,SAAU,WACViD,IAAK,MACLC,KAAM,MACNC,UAAW,wBACXC,MAAO,IACPC,QAAS,QACTC,OAAQ,iBACRC,UAAW,GACXjB,EAAG,EACHkB,EAAG,GAGD8E,GAAkB,CACpBtI,SAAU,WACViD,IAAK,MACLC,KAAM,MACNC,UAAW,wBACXC,MAAO,IACPC,QAAS,QACTC,OAAQ,iBACRC,UAAW,GACXjB,EAAG,EACHkB,EAAG,GAED+E,G,kDAOF,aAAe,IAAD,8BACV,gBANJ7E,YAAc,kBAAM,EAAKzG,SAAS,CAAEyE,MAAM,KAK5B,EAJdiC,WAAa,kBAAM,EAAK1G,SAAS,CAAEyE,MAAM,KAI3B,EAHdkC,kBAAoB,kBAAM,EAAK3G,SAAS,CAAE4G,YAAY,KAGxC,EAFdC,iBAAmB,SAACpG,GAAD,OAAU,EAAKT,SAAS,CAAE4G,YAAY,EAAMlH,KAAMe,EAAME,GAAIF,EAAKE,MAEtE,EAiDd4K,eAAiB,kBAAM,EAAKvL,SAAS,CAAEwL,YAAa,KAjDtC,EAmDdC,iBAAmB,SAAC/I,EAAOgJ,GACvB,EAAK1L,SAAS,CAAE6E,KAAM6G,KApDZ,EAuDdC,wBAA0B,SAACjJ,GACvB,EAAK6I,gBAAgB7I,EAAMzC,OAAOE,OAClC,EAAKH,SAAS,CAAE6E,KAAM,KAzDZ,EA4Dd+G,yBAA2B,kBAAM,EAAK5L,SAAS,CAAE6L,gBAAgB,KA5DnD,EA6DdC,wBA7Dc,uCA6DY,WAAOrL,GAAP,SAAAV,EAAA,6DACtB,EAAKC,SAAS,CAAEN,KAAMe,IACtB,EAAKT,SAAS,CAAE+L,MAAM,2BAAM,EAAKtM,MAAMsM,OAAlB,IAAyBC,UAAU,2BAAM,EAAKvM,MAAMsM,MAAMC,WAAxB,IAAmCrL,GAAIF,EAAKE,SAF7E,SAGhBN,IAAMmB,IAAI2J,GAAe,kBAAmB,CAAElE,OAAQ,CAAEgF,YAAaxL,EAAKE,IAAM0G,QAAS,CAAEC,cAAe,UAAYhI,GAAQkC,IAAI,YACnIjB,MAAK,SAAAC,GACF,OAAOA,EAASC,QAEnBF,MAAK,SAAAC,GACF,IAAIuG,EAAQ,EAAKtH,MAAMgB,KACvBsG,EAAQvG,EACR,EAAKR,SAAS,CAAEkM,cAAenF,OAElC3F,OAAM,SAAAC,GACHC,QAAQC,IAAIF,MAbE,OAgBtB,EAAKrB,SAAS,CAAE6L,gBAAgB,IAhBV,2CA7DZ,wDA+EdM,yBAA2B,kBAAM,EAAKnM,SAAS,CAAEoM,mBAAmB,KA/EtD,EAgFdC,wBAhFc,uCAgFY,WAAO5L,GAAP,SAAAV,EAAA,6DACtB,EAAKC,SAAS,CAAEN,KAAMe,IACtB,EAAKT,SAAS,CAAE+L,MAAM,2BAAM,EAAKtM,MAAMsM,OAAlB,IAAyBC,UAAU,2BAAM,EAAKvM,MAAMsM,MAAMC,WAAxB,IAAmCrL,GAAIF,EAAKE,SAF7E,SAGhBN,IAAMmB,IAAI4J,GAAY,cAAe3K,EAAKE,GAAI,CAAC0G,QAAS,CAAEC,cAAe,UAAYhI,GAAQkC,IAAI,YAClGjB,MAAK,SAAAC,GACF,OAAOA,EAASC,QAEnBF,MAAK,SAAAC,GACa,IAAZA,GAA8B,MAAZA,QAAgC8L,GAAZ9L,IACrC,EAAKR,SAAS,CAAE+L,MAAOvL,IACvB,EAAKR,SAAS,CAAEuM,QAAS/L,EAASG,GAAIoL,MAAM,2BAAM,EAAKtM,MAAMsM,OAAlB,IAAyB9K,SAAS,2BAAI,EAAKxB,MAAMsM,MAAM9K,UAAtB,IAAgCN,GAAIH,EAASS,SAASN,aAGzIS,OAAM,SAAAC,GACHC,QAAQC,IAAIF,MAdE,uBAiBhBhB,IAAMmB,IAAI2J,GAAe,kBAAmB,CAAElE,OAAQ,CAAEgF,YAAaxL,EAAKE,IAAM0G,QAAS,CAAEC,cAAe,UAAYhI,GAAQkC,IAAI,YACnIjB,MAAK,SAAAC,GACF,OAAOA,EAASC,QAEnBF,MAAK,SAAAC,GACF,IAAIuG,EAAQ,EAAKtH,MAAMgB,KACvBsG,EAAQvG,EACR,EAAKR,SAAS,CAAEkM,cAAenF,OAElC3F,OAAM,SAAAC,GACHC,QAAQC,IAAIF,MA3BE,OA8BtB,EAAKrB,SAAS,CAAEoM,mBAAmB,IA9Bb,2CAhFZ,wDAiHdtF,OAjHc,sBAiHL,sBAAA/G,EAAA,sEACCM,IAAMmB,IAAInC,GAAU,WAAY,CAClCgI,QAAS,CAAEC,cAAe,UAAYhI,GAAQkC,IAAI,SAAUgL,MAAO,cACpEjM,MAAK,SAAAC,GACJ,OAAOA,EAASC,QAEfF,MAAK,SAAAC,GACF,IAAIuG,EAAQ,EAAKtH,MAAMgB,KACvBsG,EAAQvG,EACR,EAAKR,SAAS,CAAES,KAAMsG,OAEzB3F,OAAM,SAAAC,GACHC,QAAQC,IAAIF,MAZf,2CAjHK,EAkId2F,OAlIc,sBAkIL,sBAAAjH,EAAA,sEACCM,IAAMmB,IAAInC,GAAU,UAAW,CAAE4H,OAAQ,CAAE/G,KAAM,EAAKT,MAAMC,KAAKQ,KAAMuM,UAAW,EAAKhN,MAAMC,KAAKgN,QAAQ/L,GAAIgM,SAAU,EAAKlN,MAAMC,KAAKiN,UAAYtF,QAAS,CAAEC,cAAe,UAAYhI,GAAQkC,IAAI,YACvMjB,MAAK,SAAAC,GACF,OAAOA,EAASC,QAEnBF,MAAK,SAAAC,GACF,IAAIuG,EAAQ,EAAKtH,MAAMgB,KACvBsG,EAAQvG,EACR,EAAKR,SAAS,CAAES,KAAMsG,OAEzB3F,OAAM,SAAAC,GACHC,QAAQC,IAAIF,MAXf,2CAlIK,EAiJduL,cAjJc,sBAiJE,sBAAA7M,EAAA,sEACNM,IAAMmB,IAAIqL,+CAA6B,CAAE5F,OAAQ,CAAEnB,KAAM,EAAKrG,MAAMC,KAAKgN,QAAQ5G,MAAQuB,QAAS,CAAEC,cAAe,UAAYhI,GAAQkC,IAAI,YAC5IjB,MAAK,SAAAC,GACF,OAAOA,EAASC,QAEnBF,MAAK,SAAAC,GACFc,QAAQC,IAAIf,EAASG,IACrB,EAAKX,SAAS,CAAEN,KAAK,2BAAM,EAAKD,MAAMC,MAAlB,IAAwBgN,QAAQ,2BAAM,EAAKjN,MAAMC,KAAKgN,SAAvB,IAAgC/L,GAAIH,EAASG,GAAImM,YAAatM,EAASsM,qBAE7H1L,OAAM,SAAAC,GACHC,QAAQC,IAAIF,MAVR,2CAjJF,EA+JdmG,OA/Jc,uCA+JL,WAAOC,GAAP,SAAA1H,EAAA,0DACQiB,OAAO0G,QAAQ,qCAAuCD,EAAKvH,MADnE,gCAGKG,IAAMmH,OAAOnI,GAAU,WAAaoI,EAAK9G,GAAI,CAC/C0G,QAAS,CAAEC,cAAe,UAAYhI,GAAQkC,IAAI,YAEjDjB,MAAK,SAAAC,GACF,OAAOA,EAASC,QACjBF,MAAK,SAAAC,GACJ,IAAIuG,EAAQ,EAAKtH,MAAMgB,KACvBsG,EAAQvG,EACR,EAAKR,SAAS,CAAES,KAAMsG,EAAOY,iBAAiB,OAC/CvG,OAAM,SAAAC,GACLC,QAAQC,IAAIF,MAbnB,2CA/JK,wDAkLduG,KAlLc,uCAkLP,WAAOlF,GAAP,SAAA3C,EAAA,6DACH2C,EAAMmF,iBADH,SAEGxH,IAAMC,KAAKjB,GAAU,QAAS,EAAKI,MAAMC,KAAM,CAAE2H,QAAS,CAAEC,cAAe,UAAYhI,GAAQkC,IAAI,YACpGjB,MAAK,SAAAC,GACF,OAAOA,EAASC,QACjBF,MAAK,SAAAC,GACJ,EAAKsG,SACL,EAAK9G,SAAS,CAAE8H,WAAW,EAAMrD,MAAM,OACxCrD,OAAM,SAAAC,GACLC,QAAQC,IAAIF,MATjB,kDAlLO,wDA+Ld0G,OA/Lc,uCA+LL,WAAOrF,GAAP,SAAA3C,EAAA,6DACL2C,EAAMmF,iBADD,SAECxH,IAAM2H,IAAI3I,GAAU,WAAa,EAAKI,MAAMkB,GAAI,EAAKlB,MAAMC,KAAM,CAAE2H,QAAS,CAAEC,cAAe,UAAYhI,GAAQkC,IAAI,YACtHjB,MAAK,SAAAC,GACF,OAAOA,EAASC,QACjBF,MAAK,SAAAC,GACJ,EAAKsG,SACL,EAAK9G,SAAS,CAAEiI,iBAAiB,EAAMrB,YAAY,OACpDxF,OAAM,SAAAC,GACLC,QAAQC,IAAIF,MATf,kDA/LK,wDA4Md0L,cA5Mc,uCA4ME,WAAOrK,GAAP,SAAA3C,EAAA,6DACZ2C,EAAMmF,iBADM,SAENxH,IAAMC,KAAK8K,GAAY,QAAS,EAAK3L,MAAMsM,MAAO,CAAE1E,QAAS,CAAEC,cAAe,UAAYhI,GAAQkC,IAAI,YACvGjB,MAAK,SAAAC,GACF,OAAOA,EAASC,QACjBF,MAAK,SAAAC,GACJ,EAAKsG,SACL,EAAK9G,SAAS,CAAEiI,iBAAiB,EAAM4D,gBAAgB,OACxDzK,OAAM,SAAAC,GACLC,QAAQC,IAAIF,MATR,kDA5MF,wDAyNd2L,YAzNc,uCAyNA,WAAOtK,GAAP,SAAA3C,EAAA,6DACV2C,EAAMmF,iBADI,SAEJxH,IAAM2H,IAAIoD,GAAY,SAAW,EAAK3L,MAAM8M,QAAS,EAAK9M,MAAMsM,MAAO,CAAE1E,QAAS,CAAEC,cAAe,UAAYhI,GAAQkC,IAAI,YAC5HjB,MAAK,SAAAC,GACF,OAAOA,EAASC,QACjBF,MAAK,SAAAC,GACJ,EAAKsG,SACL,EAAK9G,SAAS,CAAEiI,iBAAiB,EAAMmE,mBAAmB,OAC3DhL,OAAM,SAAAC,GACLC,QAAQC,IAAIF,MATV,kDAzNA,wDAgPd6G,iBAhPc,uCAgPK,WAAMpI,GAAN,SAAAC,EAAA,sEACT,EAAKC,SAAS,CAChBN,KAAK,2BACE,EAAKD,MAAMC,MADd,kBAECI,EAAEG,OAAOC,KAAOJ,EAAEG,OAAOE,UAJnB,2CAhPL,wDAyPd8M,kBAzPc,uCAyPM,WAAMnN,GAAN,SAAAC,EAAA,sEACV,EAAKC,SAAS,CAChB+L,MAAM,2BACC,EAAKtM,MAAMsM,OADb,kBAEAjM,EAAEG,OAAOC,KAAOJ,EAAEG,OAAOE,UAJlB,2CAzPN,wDAkQd+M,sBAlQc,uCAkQU,WAAMpN,GAAN,SAAAC,EAAA,sEACd,EAAKC,SAAS,CAChB+L,MAAM,2BACC,EAAKtM,MAAMsM,OADb,IAEDC,UAAU,2BACH,EAAKvM,MAAMsM,MAAMC,WADf,kBAEJlM,EAAEG,OAAOC,KAAOJ,EAAEG,OAAOE,YANlB,2CAlQV,wDA+QdgN,qBA/Qc,uCA+QS,WAAMrN,GAAN,SAAAC,EAAA,sEACb,EAAKC,SAAS,CAChB+L,MAAM,2BACC,EAAKtM,MAAMsM,OADb,IAED9K,SAAS,2BACF,EAAKxB,MAAMsM,MAAM9K,UADhB,kBAEHnB,EAAEG,OAAOC,KAAOJ,EAAEG,OAAOE,YANnB,2CA/QT,wDA4RdiN,wBA5Rc,uCA4RY,WAAMtN,GAAN,SAAAC,EAAA,sEAChB,EAAKC,SAAS,CAChBN,KAAK,2BACE,EAAKD,MAAMC,MADd,IAEAgN,QAAQ,2BACD,EAAKjN,MAAMC,KAAKgN,SADhB,kBAEF5M,EAAEG,OAAOC,KAAOJ,EAAEG,OAAOE,YANhB,2CA5RZ,wDAySdkN,sBAzSc,sBAySU,sBAAAtN,EAAA,sEAEdM,IAAMmB,IAAI4J,GAAY,mBAAoB,CAC5C/D,QAAS,CAAEC,cAAe,UAAYhI,GAAQkC,IAAI,SAAUgL,MAAO,cACpEjM,MAAK,SAAAC,GACJ,OAAOA,EAASC,QAEfF,MAAK,SAAAC,GACFc,QAAQC,IAAIf,MAEfY,OAAM,SAAAC,GACHC,QAAQC,IAAIF,MAXA,2CAzSV,EAuTd8G,YAvTc,uCAuTA,WAAMrI,GAAN,SAAAC,EAAA,sDACV,EAAKC,SAAS,CAAE8H,WAAY,EAAKrI,MAAMqI,YAD7B,2CAvTA,wDA2TdM,uBA3Tc,uCA2TW,WAAMtI,GAAN,SAAAC,EAAA,sDACrB,EAAKC,SAAS,CAAE2H,iBAAkB,EAAKlI,MAAMkI,kBADxB,2CA3TX,wDA+TdU,uBA/Tc,uCA+TW,WAAMvI,GAAN,SAAAC,EAAA,sDACrB,EAAKC,SAAS,CAAEiI,iBAAkB,EAAKxI,MAAMwI,kBADxB,2CA/TX,wDAmUdK,kBAnUc,sBAmUM,sBAAAvI,EAAA,sEACV,EAAKsN,wBADK,uBAEV,EAAKvG,SAFK,OAGXxH,GAAQkC,IAAI,WACbR,OAAOC,SAASC,KAAO,MAJX,2CAjUhB,EAAKzB,MAAQ,CACTyL,aAAcA,GACdW,gBAAgB,EAChBO,mBAAmB,EACnB3L,KAAMA,GACNoE,KAAM,EACN2G,YAAa,EACbU,cAAe,GACftG,UAAWA,GACXnB,MAAM,EACN8H,QAAQ,GACR3F,YAAY,EACZkB,WAAW,EACXH,iBAAiB,EACjBM,iBAAiB,EACjBtH,GAAI,GACJjB,KAAM,CACFQ,KAAM,GACNyM,SAAU,GACVW,UAAW,GACXC,YAAa,GACbC,OAAQ,GACRrH,MAAO,GACPsH,cAAe,GACfC,YAAa,GACbhB,QAAS,CACL/L,GAAI,GACJmM,YAAa,GACbhH,KAAM,KAGdiG,MAAO,CACH4B,kBAAmB,GACnBC,sBAAuB,GACvBC,cAAe,GACfC,kBAAmB,GACnB7M,SAAU,CAAEN,GAAI,IAChBqL,UAAW,CACPrL,GAAI,GACJ+M,YAAa,MAKzB,EAAK/E,kBAAoB,EAAKA,kBAAkBC,KAAvB,gBA9Cf,E,qDAsOd,SAAkBlG,GACd,IAAMzC,EAASyC,EAAMzC,OACfE,EAAQF,EAAOE,MACfD,EAAOD,EAAOC,KAEpB0B,KAAK5B,SAAL,eACKE,EAAOC,M,oBA+FhB,WAAU,IAAD,OACL,OACI,gCACI,cAAC,EAAD,IACA,eAAC,YAAD,WACI,uBACA,2CACA,uBACA,cAAC0I,GAAA,EAAD,CAAUpE,KAAM7C,KAAKnC,MAAMqI,UAA3B,SACI,cAACgB,GAAA,EAAD,CAAOC,KAAM,cAAC,KAAD,CAAWC,SAAS,YAAcC,SAAS,UAAUtE,QAAS/C,KAAKuG,YAAhF,kDAIJ,cAACU,GAAA,EAAD,CAAUpE,KAAM7C,KAAKnC,MAAMkI,gBAA3B,SACI,cAACmB,GAAA,EAAD,CAAOC,KAAM,cAACG,GAAA,EAAD,IAAqCD,SAAS,UAAUtE,QAAS/C,KAAKwG,uBAAnF,kDAIJ,cAACS,GAAA,EAAD,CAAUpE,KAAM7C,KAAKnC,MAAMwI,gBAA3B,SACI,cAACa,GAAA,EAAD,CAAOC,KAAM,cAACI,GAAA,EAAD,IAA+BF,SAAS,OAAOtE,QAAS/C,KAAKyG,uBAA1E,kDAIJ,cAAC,IAAD,CAAK9E,UAAU,OACXC,GAAI,CACA,uBAAwB,CAAE+C,EAAG,EAAGJ,MAAO,SAE3CiD,YAAU,EACVC,aAAa,MALjB,SAMI,gCAGI,eAACC,GAAA,EAAD,CAAajG,QAAQ,WAAWG,GAAI,CAAE+C,EAAG,EAAGgD,SAAU,KAAtD,UACI,cAAC,KAAD,CAAY5I,GAAG,SAAf,sBACA,eAAC8I,GAAA,EAAD,CACIC,QAAQ,WACR/I,GAAG,WACHR,MAAOyB,KAAKnC,MAAMC,KAAKiN,SACvBhL,SAAUC,KAAKsG,iBACfyB,MAAM,WACNzJ,KAAK,WACLmD,QAAQ,WAPZ,UASI,cAACyB,EAAA,EAAD,CAAU3E,MAAM,GAAhB,SACI,wCAEHyB,KAAKnC,MAAMyL,aAAatG,KAAI,SAACgF,GAAD,OACzB,cAAC9E,EAAA,EAAD,CAAU3E,MAAOyJ,EAAG9D,KAApB,SAA2B8D,EAAG1J,gBAK1C,cAAC2J,EAAA,EAAD,CACIlJ,GAAG,oBACHgJ,MAAM,iBACNtG,QAAQ,WACRnD,KAAK,OACLyB,SAAUC,KAAKsG,mBAElB,KACD,cAAC,SAAD,CAAQjE,MAAM,UAAUpC,QAASD,KAAKoF,OAAtC,SAA8C,cAAC,KAAD,WAKtD,uBACA,uBACA,cAAC,SAAD,CAAQ/C,MAAM,UAAUpC,QAASD,KAAK8E,WAAtC,SAAmD,cAACoD,GAAA,EAAD,MACnD,uBACA,uBACA,eAACE,EAAA,EAAD,CAAOxG,GAAI,CAAE2C,MAAO,OAAQ4H,SAAU,UAAtC,UACI,cAAChE,EAAA,EAAD,UACI,eAACE,EAAA,EAAD,CAAOzG,GAAI,CAAE+F,SAAU,KAAO,aAAW,eAAzC,UACI,cAACW,EAAA,EAAD,UACI,eAACC,EAAA,EAAD,WACI,cAACC,EAAA,EAAD,mBACA,cAACA,EAAA,EAAD,CAAWC,MAAM,QAAjB,sBACA,cAACD,EAAA,EAAD,CAAWC,MAAM,QAAjB,4BACA,cAACD,EAAA,EAAD,CAAWC,MAAM,QAAjB,0BACA,cAACD,EAAA,EAAD,CAAWC,MAAM,QAAjB,2BACA,cAACD,EAAA,EAAD,CAAWC,MAAM,QAAjB,0BACA,cAACD,EAAA,EAAD,CAAWC,MAAM,QAAjB,oBACA,cAACD,EAAA,EAAD,CAAWC,MAAM,QAAjB,qBACA,cAACD,EAAA,EAAD,CAAWC,MAAM,QAAjB,4BACA,cAACD,EAAA,EAAD,CAAWC,MAAM,eAGzB,cAACC,EAAA,EAAD,UACK1I,KAAKnC,MAAMgB,KAAKuN,MAAMpM,KAAKnC,MAAMoF,KAAOjD,KAAKnC,MAAM+L,YAAa5J,KAAKnC,MAAMoF,KAAOjD,KAAKnC,MAAM+L,YAAc5J,KAAKnC,MAAM+L,aAAa5G,KAAI,SAACnE,GAAD,OACpI,eAAC0J,EAAA,EAAD,CAEI3G,GAAI,CAAE,mCAAoC,CAAE6C,OAAQ,IAFxD,UAII,cAAC+D,EAAA,EAAD,CAAW7G,UAAU,KAAKgH,MAAM,OAAhC,SACK9J,EAAKP,OAEV,cAACkK,EAAA,EAAD,CAAWC,MAAM,QAAjB,SAA0B5J,EAAKkM,WAC/B,cAACvC,EAAA,EAAD,CAAWC,MAAM,QAAjB,SAA0B5J,EAAK+M,SAC/B,cAACpD,EAAA,EAAD,CAAWC,MAAM,QAAjB,SAA0B5J,EAAK8M,cAC/B,cAACnD,EAAA,EAAD,CAAWC,MAAM,QAAjB,SAA0B5J,EAAK0F,QAC/B,cAACiE,EAAA,EAAD,CAAWC,MAAM,QAAjB,SAA0B5J,EAAKgN,gBAC/B,cAACrD,EAAA,EAAD,CAAWC,MAAM,QAAjB,SAA0B5J,EAAKwN,SAC/B,cAAC7D,EAAA,EAAD,CAAWC,MAAM,QAAjB,SAA0B5J,EAAKiN,cAC/B,cAACtD,EAAA,EAAD,CAAWC,MAAM,QAAjB,SAA0B5J,EAAKiM,QAAQ5G,OACvC,eAACsE,EAAA,EAAD,CAAWC,MAAM,QAAjB,UACI,cAACtG,EAAA,EAAD,CAAYE,MAAM,UAAUpC,QAAS,kBAAM,EAAKgF,iBAAiBpG,IAAOuD,KAAK,QAA7E,SAAqF,cAACwG,GAAA,EAAD,MAAsB,IAC3G,cAACzG,EAAA,EAAD,CAAYE,MAAM,QAAQpC,QAAS,kBAAM,EAAK2F,OAAO/G,IAAOuD,KAAK,QAAjE,SAAyE,cAACyG,GAAA,EAAD,MAAwB,IACjF,aAAfhK,EAAKwN,QAA6C,IAApBxN,EAAKiN,YAAoB,cAAC3J,EAAA,EAAD,CAAYE,MAAM,QAAQpC,QAAS,kBAAM,EAAKwK,wBAAwB5L,IAAOuD,KAAK,QAAlF,SAA0F,cAACkK,GAAA,EAAD,MAAiC,cAACnK,EAAA,EAAD,CAAYE,MAAM,UAAUpC,QAAS,kBAAM,EAAKiK,wBAAwBrL,IAAOuD,KAAK,QAApF,SAA4F,cAAC,KAAD,WAjB9QvD,EAAKE,cAuB9B,cAACwN,GAAA,EAAD,CACIC,mBAAoB,CAAC,EAAG,GAAI,IAC5B7K,UAAU,MACV8K,MAAOzM,KAAKnC,MAAMgB,KAAK6N,OACvB9C,YAAa5J,KAAKnC,MAAM+L,YACxB3G,KAAMjD,KAAKnC,MAAMoF,KACjB0J,aAAc3M,KAAK6J,iBACnB+C,oBAAqB5M,KAAK+J,gCAItC,cAACjB,GAAA,EAAD,CACIjG,KAAM7C,KAAKnC,MAAMgF,KACjBE,QAAS/C,KAAK6E,YACd,kBAAgB,oBAChB,mBAAiB,0BAJrB,SAMI,eAAC,IAAD,CAAKjD,GAAIuC,GAAOxC,UAAU,OAEtB6F,YAAU,EACVC,aAAa,MAHjB,UAII,gCACI,eAACjG,EAAA,EAAD,WAAY,cAACqL,GAAA,EAAD,IAAZ,6BACA,uBACA,cAAC5E,EAAA,EAAD,CACIF,MAAM,OACNtG,QAAQ,SACRnD,KAAK,OACLyB,SAAUC,KAAKsG,mBAElB,OACD,cAAC2B,EAAA,EAAD,CACIF,MAAM,gBACNtG,QAAQ,SACRnD,KAAK,QACLyB,SAAUC,KAAKsG,iBACfxG,KAAK,SACLkJ,WAAY,CACRC,eACI,cAACC,EAAA,EAAD,CAAgB/H,SAAS,QAAzB,qBAOhB,uBACA,gCAEI,cAAC8G,EAAA,EAAD,CACIF,MAAM,yBACNtG,QAAQ,SACRnD,KAAK,gBACLyB,SAAUC,KAAKsG,iBACfxG,KAAK,SACLkJ,WAAY,CACRC,eACI,cAACC,EAAA,EAAD,CAAgB/H,SAAS,QAAzB,kBAMX,OACD,cAAC8G,EAAA,EAAD,CACIF,MAAM,iBACNtG,QAAQ,SACRnD,KAAK,SACLyB,SAAUC,KAAKsG,iBACfxG,KAAK,SACLkJ,WAAY,CACRC,eACI,cAACC,EAAA,EAAD,CAAgB/H,SAAS,QAAzB,qBAOhB,uBACA,gCAEK,OACD,cAAC8G,EAAA,EAAD,CACIF,MAAM,eACNtG,QAAQ,SACRnD,KAAK,cACLyB,SAAUC,KAAKsG,iBACf0C,WAAY,CACRC,eACI,cAACC,EAAA,EAAD,CAAgB/H,SAAS,QAAzB,kBAMX,OACD,cAAC8G,EAAA,EAAD,CACIF,MAAM,aACNtG,QAAQ,SACRnD,KAAK,YACLyB,SAAUC,KAAKsG,iBACfxG,KAAK,SACLkJ,WAAY,CACRC,eACI,cAACC,EAAA,EAAD,CAAgB/H,SAAS,QAAzB,qBAOhB,uBACA,gCACI,cAAC8G,EAAA,EAAD,CACIlJ,GAAG,gBACHgJ,MAAM,iBACNtG,QAAQ,SACR4H,UAAQ,IAEX,OACD,cAACpB,EAAA,EAAD,CACIlJ,GAAG,OACHgJ,MAAM,iBACNtG,QAAQ,SACRnD,KAAK,OACLyB,SAAUC,KAAKwL,0BAGlB,OACD,cAAC,SAAD,CAAQnJ,MAAM,UAAUpC,QAASD,KAAKgL,cAAtC,SAAqD,cAAC8B,GAAA,EAAD,SAEzD,uBACA,gCACI,cAAC7E,EAAA,EAAD,CACIlJ,GAAG,cACHgJ,MAAM,aACNtG,QAAQ,SACRnD,KAAK,cACLyB,SAAUC,KAAKwL,wBACfjN,MAAOyB,KAAKnC,MAAMC,KAAKgN,QAAQI,YAC/B7B,UAAQ,IAEX,OACD,cAACpB,EAAA,EAAD,CACIlJ,GAAG,YACHgJ,MAAM,iBACNtG,QAAQ,SACRnD,KAAK,KACLyB,SAAUC,KAAKsG,iBACf+C,UAAQ,EACR9K,MAAOyB,KAAKnC,MAAMC,KAAKgN,QAAQ/L,GAC/BiK,WAAY,CACRC,eACI,cAACC,EAAA,EAAD,CAAgB/H,SAAS,QAAzB,qBAOhB,uBACA,eAAC,SAAD,CAAQrB,KAAK,SAASuJ,SAAwC,IAA9BrJ,KAAKnC,MAAMC,KAAKgN,QAAQ/L,GAAUsD,MAAM,UAAUpC,QAASD,KAAKgG,KAAhG,kBAA2G,cAACoD,GAAA,EAAD,YAKnH,cAACN,GAAA,EAAD,CACIjG,KAAM7C,KAAKnC,MAAMmH,WACjBjC,QAAS/C,KAAK+E,kBACd,kBAAgB,oBAChB,mBAAiB,0BAJrB,SAMI,eAAC,IAAD,CAAKnD,GAAIuC,GAAOxC,UAAU,OAEtB6F,YAAU,EACVC,aAAa,MAHjB,UAII,gCACI,eAACjG,EAAA,EAAD,WAAY,cAACqL,GAAA,EAAD,IAAZ,qBAAwD,cAACA,GAAA,EAAD,OACxD,uBACA,cAAC5E,EAAA,EAAD,CACIF,MAAM,OACNtG,QAAQ,SACRnD,KAAK,OACLyB,SAAUC,KAAKsG,iBACf/H,MAAOyB,KAAKnC,MAAMC,KAAKQ,OAE1B,OACD,cAAC2J,EAAA,EAAD,CACIF,MAAM,gBACNtG,QAAQ,SACRnD,KAAK,QACLyB,SAAUC,KAAKsG,iBACf/H,MAAOyB,KAAKnC,MAAMC,KAAKyG,MACvBzE,KAAK,SACLkJ,WAAY,CACRC,eACI,cAACC,EAAA,EAAD,CAAgB/H,SAAS,QAAzB,qBAOhB,uBACA,gCAEI,cAAC8G,EAAA,EAAD,CACIF,MAAM,yBACNtG,QAAQ,SACRnD,KAAK,gBACLyB,SAAUC,KAAKsG,iBACf/H,MAAOyB,KAAKnC,MAAMC,KAAK+N,cACvB/L,KAAK,SACLkJ,WAAY,CACRC,eACI,cAACC,EAAA,EAAD,CAAgB2B,UAAU,QAA1B,kBAMX,OACD,cAAC5C,EAAA,EAAD,CACIF,MAAM,iBACNtG,QAAQ,SACRnD,KAAK,SACLyB,SAAUC,KAAKsG,iBACf/H,MAAOyB,KAAKnC,MAAMC,KAAK8N,OACvB9L,KAAK,SACLkJ,WAAY,CACRC,eACI,cAACC,EAAA,EAAD,CAAgB/H,SAAS,QAAzB,qBAOhB,uBACA,gCAEK,OACD,cAAC8G,EAAA,EAAD,CACIF,MAAM,eACNtG,QAAQ,SACRnD,KAAK,cACLyB,SAAUC,KAAKsG,iBACf0C,WAAY,CACRC,eACI,cAACC,EAAA,EAAD,CAAgB/H,SAAS,QAAzB,gBAKR5C,MAAOyB,KAAKnC,MAAMC,KAAK6N,cAE1B,OACD,cAAC1D,EAAA,EAAD,CACIlJ,GAAG,YACHgJ,MAAM,aACNtG,QAAQ,SACRnD,KAAK,YACLyB,SAAUC,KAAKsG,iBACf/H,MAAOyB,KAAKnC,MAAMC,KAAK4N,UACvB5L,KAAK,SACLkJ,WAAY,CACRC,eACI,cAACC,EAAA,EAAD,CAAgB/H,SAAS,QAAzB,qBAOhB,uBACA,gCACI,cAAC8G,EAAA,EAAD,CACIlJ,GAAG,cACHgJ,MAAM,iBACNtG,QAAQ,SACR4H,UAAQ,IAEX,OACD,cAACpB,EAAA,EAAD,CACIoB,UAAQ,EACRtK,GAAG,YACHgJ,MAAM,oBACNtG,QAAQ,SACRnD,KAAK,KACLyB,SAAUC,KAAKsG,iBACf0C,WAAY,CACRC,eACI,cAACC,EAAA,EAAD,CAAgB/H,SAAS,QAAzB,gBAKR5C,MAAOyB,KAAKnC,MAAMC,KAAKgN,QAAQ/L,QAKvC,uBACA,eAAC,SAAD,CAAQe,KAAK,SAASuC,MAAM,UAAUpC,QAASD,KAAKmG,OAApD,kBAAiE,cAACiD,GAAA,EAAD,YAIzE,cAACN,GAAA,EAAD,CACIjG,KAAM7C,KAAKnC,MAAMoM,eACjBlH,QAAS/C,KAAK+E,kBACd,kBAAgB,oBAChB,mBAAiB,0BAJrB,SAMI,eAAC,IAAD,CAAKnD,GAAI6H,GAAiB9H,UAAU,OAEhC6F,YAAU,EACVC,aAAa,MAHjB,UAII,gCACI,eAACjG,EAAA,EAAD,WAAY,cAAC,KAAD,IAAZ,yBACA,uBACA,cAACyG,EAAA,EAAD,CACIF,MAAM,oBACNtG,QAAQ,SACRnD,KAAK,oBACLyB,SAAUC,KAAKqL,kBACfvL,KAAK,OACLiN,gBAAiB,CACbC,QAAQ,KAGf,OACD,cAAC/E,EAAA,EAAD,CACIF,MAAM,0BACNtG,QAAQ,SACRnD,KAAK,wBACLyB,SAAUC,KAAKqL,kBACfvL,KAAK,OACLiN,gBAAiB,CACbC,QAAQ,QAIpB,uBACA,gCACI,cAAC/E,EAAA,EAAD,CACIlJ,GAAG,OACHgJ,MAAM,YACNtG,QAAQ,SACR4H,UAAQ,EACR/K,KAAK,OACLyB,SAAUC,KAAKsG,iBACf/H,MAAOyB,KAAKnC,MAAMC,KAAKQ,OAE1B,OACD,eAACoJ,GAAA,EAAD,CAAajG,QAAQ,WAAWG,GAAI,CAAE+C,EAAG,EAAGgD,SAAU,KAAtD,UACI,cAAC,KAAD,CAAY5I,GAAG,SAAf,8BACA,eAAC8I,GAAA,EAAD,CACIC,QAAQ,WACR/I,GAAG,WACHR,MAAOyB,KAAKnC,MAAMsM,MAAM9K,SAASN,GACjCgB,SAAUC,KAAKuL,qBACfxD,MAAM,WACNzJ,KAAK,KACLmD,QAAQ,WAPZ,UASI,cAACyB,EAAA,EAAD,CAAU3E,MAAM,GAAhB,SACI,wCAEHyB,KAAKnC,MAAMyM,cAActH,KAAI,SAACgF,GAAD,OAC1B,cAAC9E,EAAA,EAAD,CAAU3E,MAAOyJ,EAAGjJ,GAApB,SAAyBiJ,EAAGiF,2BAM5C,8BACI,cAAChF,EAAA,EAAD,CACIlJ,GAAG,cACHgJ,MAAM,iBACNtG,QAAQ,SACRnD,KAAK,cACLyB,SAAUC,KAAKsL,0BAGvB,uBACA,eAAC,SAAD,CAAQxL,KAAK,SAASuC,MAAM,UAAUpC,QAASD,KAAKmL,cAApD,iBAAuE,cAAC/B,GAAA,EAAD,OACtE,eACD,cAAC,SAAD,CAAQtJ,KAAK,SAASuC,MAAM,SAASpC,QAASD,KAAKgK,yBAAnD,0BAIR,cAAClB,GAAA,EAAD,CACIjG,KAAM7C,KAAKnC,MAAM2M,kBACjBzH,QAAS/C,KAAKuK,yBACd,kBAAgB,oBAChB,mBAAiB,0BAJrB,SAMI,eAAC,IAAD,CAAK3I,GAAI6H,GAAiB9H,UAAU,OAEhC6F,YAAU,EACVC,aAAa,MAHjB,UAII,gCACI,eAACjG,EAAA,EAAD,WAAY,cAAC,KAAD,IAAZ,4BACA,uBACA,cAACyG,EAAA,EAAD,CACIF,MAAM,oBACNtG,QAAQ,SACRnD,KAAK,oBACLyB,SAAUC,KAAKqL,kBACfvL,KAAK,OACLiN,gBAAiB,CACbC,QAAQ,KAGf,OACD,cAAC/E,EAAA,EAAD,CACIF,MAAM,0BACNtG,QAAQ,SACRnD,KAAK,wBACLyB,SAAUC,KAAKqL,kBACfvL,KAAK,OACLiN,gBAAiB,CACbC,QAAQ,QAIpB,uBACA,gCACI,cAAC/E,EAAA,EAAD,CACIlJ,GAAG,OACHgJ,MAAM,YACNtG,QAAQ,SACR4H,UAAQ,EACR/K,KAAK,OACLyB,SAAUC,KAAKsG,iBACf/H,MAAOyB,KAAKnC,MAAMC,KAAKQ,OAE1B,OACD,eAACoJ,GAAA,EAAD,CAAajG,QAAQ,WAAWG,GAAI,CAAE+C,EAAG,EAAGgD,SAAU,KAAtD,UACI,cAAC,KAAD,CAAY5I,GAAG,SAAf,8BACA,eAAC8I,GAAA,EAAD,CACIC,QAAQ,WACR/I,GAAG,WACHR,MAAOyB,KAAKnC,MAAMsM,MAAM9K,SAASN,GACjCgB,SAAUC,KAAKuL,qBACfxD,MAAM,WACNzJ,KAAK,KACLmD,QAAQ,WAPZ,UASI,cAACyB,EAAA,EAAD,CAAU3E,MAAM,GAAhB,SACI,wCAEHyB,KAAKnC,MAAMyM,cAActH,KAAI,SAACgF,GAAD,OAC1B,cAAC9E,EAAA,EAAD,CAAU3E,MAAOyJ,EAAGjJ,GAApB,SAAyBiJ,EAAGiF,2BAM5C,8BACI,cAAChF,EAAA,EAAD,CACIlJ,GAAG,cACHgJ,MAAM,iBACNtG,QAAQ,SACRnD,KAAK,cACL+K,UAAQ,EACRtJ,SAAUC,KAAKsL,sBACf/M,MAAOyB,KAAKnC,MAAMC,KAAKgO,gBAG/B,uBACA,eAAC,SAAD,CAAQhM,KAAK,SAASuC,MAAM,UAAUpC,QAASD,KAAKoL,YAApD,iBAAqE,cAAChC,GAAA,EAAD,OACpE,eACD,cAAC,SAAD,CAAQtJ,KAAK,SAASuC,MAAM,SAASpC,QAASD,KAAKuK,yBAAnD,iC,GA75BArK,IAAMC,WAu6BfuJ,M,UC38BT7K,IADWkF,EAAQ,KACZ,IACPC,GAAY,GACZkJ,GAAgB,GAChB5D,GAAe,CAAC,CAAEpF,KAAM,aAAc5F,KAAM,eAAiB,CAAE4F,KAAM,aAAc5F,KAAM,gBACzFZ,GAAU,IAAIC,IACdF,GAAU,oCAGV0G,GAAQ,CACZhD,SAAU,WACViD,IAAK,MACLC,KAAM,MACNC,UAAW,wBACXC,MAAO,IACPC,QAAS,QACTC,OAAQ,iBACRC,UAAW,GACXjB,EAAG,EACHkB,EAAG,GAECwI,G,kDAQJ,aAAe,IAAD,8BACZ,gBAPFtI,YAAc,kBAAM,EAAKzG,SAAS,CAAEyE,MAAM,KAM5B,EALdiC,WAAa,kBAAM,EAAK1G,SAAS,CAAEyE,MAAM,KAK3B,EAJdkC,kBAAoB,kBAAM,EAAK3G,SAAS,CAAE4G,YAAY,KAIxC,EAHdC,iBAAmB,SAACpG,GAAD,OAAU,EAAKT,SAAS,CAAE4G,YAAY,EAAMlH,KAAMe,EAAME,GAAIF,EAAKE,MAGtE,EAFdqO,oBAAsB,SAACvO,GAAD,OAAU,EAAKT,SAAS,CAAEiP,eAAe,EAAMtO,GAAIF,EAAKE,GAAIjB,KAAMe,EAAMuL,UAAU,2BAAM,EAAKvM,MAAMuM,WAAlB,IAA6BU,QAAQ,2BAAM,EAAKjN,MAAMuM,UAAUU,SAA5B,IAAqC/L,GAAIF,EAAKE,GAAImF,KAAMrF,EAAKqF,KAAMgH,YAAarM,EAAKyO,mBAElN,EADdC,qBAAuB,kBAAM,EAAKnP,SAAS,CAAEiP,eAAe,KAC9C,EA6CdG,aA7Cc,sBA6CC,sBAAArP,EAAA,sEACPM,IAAMmB,IAAI6N,+CAAgC,CAC9ChI,QAAS,CAAEC,cAAe,UAAYhI,GAAQkC,IAAI,SAAUgL,MAAO,cAClEjM,MAAK,SAAAC,GACN,OAAOA,EAASC,QAEfF,MAAK,SAAAC,GACJ,IAAI8O,EAAY,EAAK7P,MAAMqP,cAC3BQ,EAAY9O,EACZ,EAAKR,SAAS,CAAE8O,cAAeQ,OAEhClO,OAAM,SAAAC,GACLC,QAAQC,IAAIF,MAZH,2CA7CD,EA6DdyF,OA7Dc,sBA6DL,sBAAA/G,EAAA,sEACDM,IAAMmB,IAAInC,GAAU,OAAQ,CAChCgI,QAAS,CAAEC,cAAe,UAAYhI,GAAQkC,IAAI,SAAUgL,MAAO,cAClEjM,MAAK,SAAAC,GACN,OAAOA,EAASC,QAEfF,MAAK,SAAAC,GACJ,IAAIkM,EAAU,EAAKjN,MAAMgB,KAEzBiM,EAAUlM,EACV,EAAKR,SAAS,CAAES,KAAMiM,OAEvBtL,OAAM,SAAAC,GACLC,QAAQC,IAAIF,MAbT,2CA7DK,EA8EdkO,cA9Ec,uCA8EE,WAAO7M,GAAP,SAAA3C,EAAA,6DACd2C,EAAMmF,iBADQ,SAERxH,IAAMC,KAAKkP,2CAA4B,EAAK/P,MAAMuM,UAAW,CAAE3E,QAAS,CAAEC,cAAe,UAAYhI,GAAQkC,IAAI,YACpHjB,MAAK,SAAAC,GACJ,OAAOA,EAASC,QACfF,MAAK,SAAAC,GACN,EAAKsG,SACL,EAAK9G,SAAS,CAAEiI,iBAAiB,EAAMgH,eAAe,OACrD7N,OAAM,SAAAC,GACPC,QAAQC,IAAIF,MATF,kDA9EF,wDA2Fd2F,OA3Fc,sBA2FL,sBAAAjH,EAAA,sEACDM,IAAMmB,IAAInC,GAAU,UAAW,CAAE4H,OAAQ,CAAEnB,KAAM,EAAKrG,MAAMC,KAAKoG,MAAQuB,QAAS,CAAEC,cAAe,UAAYhI,GAAQkC,IAAI,YAC9HjB,MAAK,SAAAC,GACJ,OAAOA,EAASC,QAEjBF,MAAK,SAAAC,GACJ,IAAIkM,EAAU,EAAKjN,MAAMgB,KACzBiM,EAAUlM,EACV,EAAKR,SAAS,CAAES,KAAMiM,OAEvBtL,OAAM,SAAAC,GACLC,QAAQC,IAAIF,MAXT,2CA3FK,EA0GdmG,OA1Gc,uCA0GL,WAAOC,GAAP,SAAA1H,EAAA,0DACMiB,OAAO0G,QAAQ,mCAAqCD,EAAK3B,MAD/D,gCAGCzF,IAAMmH,OAAOnI,GAAU,WAAaoI,EAAK9G,GAAI,CACjD0G,QAAS,CAAEC,cAAe,UAAYhI,GAAQkC,IAAI,YAEjDjB,MAAK,SAAAC,GACJ,OAAOA,EAASC,QACfF,MAAK,SAAAC,GACN,IAAIuG,EAAQ,EAAKtH,MAAMgB,KACvBsG,EAAQvG,EACR,EAAKR,SAAS,CAAES,KAAMsG,EAAOY,iBAAiB,OAC7CvG,OAAM,SAAAC,GACPC,QAAQC,IAAIF,MAbX,2CA1GK,wDA6HduG,KA7Hc,uCA6HP,WAAOlF,GAAP,SAAA3C,EAAA,6DACL2C,EAAMmF,iBADD,SAECxH,IAAMC,KAAKjB,GAAU,QAAS,EAAKI,MAAMC,KAAM,CAAE2H,QAAS,CAAEC,cAAe,UAAYhI,GAAQkC,IAAI,YACtGjB,MAAK,SAAAC,GACJ,OAAOA,EAASC,QACfF,MAAK,SAAAC,GACN,EAAKsG,SACL,EAAK9G,SAAS,CAAE8H,WAAW,EAAMrD,MAAM,OACtCrD,OAAM,SAAAC,GACPC,QAAQC,IAAIF,MATX,kDA7HO,wDA0Id0G,OA1Ic,uCA0IL,WAAOrF,GAAP,SAAA3C,EAAA,6DACP2C,EAAMmF,iBADC,SAEDxH,IAAM2H,IAAI3I,GAAU,WAAa,EAAKI,MAAMkB,GAAI,EAAKlB,MAAMC,KAAM,CAAE2H,QAAS,CAAEC,cAAe,UAAYhI,GAAQkC,IAAI,YACxHjB,MAAK,SAAAC,GACJ,OAAOA,EAASC,QACfF,MAAK,SAAAC,GACN,EAAKsG,SACL,EAAK9G,SAAS,CAAEiI,iBAAiB,EAAMrB,YAAY,OAClDxF,OAAM,SAAAC,GACPC,QAAQC,IAAIF,MATT,kDA1IK,wDAiKd6G,iBAjKc,uCAiKK,WAAMpI,GAAN,SAAAC,EAAA,sEACX,EAAKC,SAAS,CAClBN,KAAK,2BACA,EAAKD,MAAMC,MADZ,kBAEDI,EAAEG,OAAOC,KAAOJ,EAAEG,OAAOE,UAJb,2CAjKL,wDA0Kd+M,sBA1Kc,uCA0KU,WAAMpN,GAAN,SAAAC,EAAA,sEAChB,EAAKC,SAAS,CAClBgM,UAAU,2BACL,EAAKvM,MAAMuM,WADP,kBAENlM,EAAEG,OAAOC,KAAOJ,EAAEG,OAAOE,UAJR,2CA1KV,wDAmLdsP,6BAnLc,uCAmLiB,WAAM3P,GAAN,SAAAC,EAAA,sEACvB,EAAKC,SAAS,CAClBgM,UAAU,2BACL,EAAKvM,MAAMuM,WADP,IAEPU,QAAQ,2BACH,EAAKjN,MAAMuM,UAAUU,SADnB,kBAEJ5M,EAAEG,OAAOC,KAAOJ,EAAEG,OAAOE,YANH,2CAnLjB,wDAgMduP,yBAhMc,uCAgMa,WAAM5P,GAAN,SAAAC,EAAA,sEACnB,EAAKC,SAAS,CAClBN,KAAK,2BACA,EAAKD,MAAMC,MADZ,IAEFiQ,SAAS,2BACJ,EAAKlQ,MAAMC,KAAKiQ,UADb,kBAEL7P,EAAEG,OAAOC,KAAOJ,EAAEG,OAAOE,YANP,2CAhMb,wDA6MdgI,YA7Mc,uCA6MA,WAAMrI,GAAN,SAAAC,EAAA,sDACZ,EAAKC,SAAS,CAAE8H,WAAY,EAAKrI,MAAMqI,YAD3B,2CA7MA,wDAiNdM,uBAjNc,uCAiNW,WAAMtI,GAAN,SAAAC,EAAA,sDACvB,EAAKC,SAAS,CAAE2H,iBAAkB,EAAKlI,MAAMkI,kBADtB,2CAjNX,wDAqNdU,uBArNc,uCAqNW,WAAMvI,GAAN,SAAAC,EAAA,sDACvB,EAAKC,SAAS,CAAEiI,iBAAkB,EAAKxI,MAAMwI,kBADtB,2CArNX,wDAyNdK,kBAzNc,sBAyNM,sBAAAvI,EAAA,sEACZ,EAAKqP,eADO,uBAEZ,EAAKtI,SAFO,OAGbxH,GAAQkC,IAAI,WACfR,OAAOC,SAASC,KAAO,MAJP,2CAvNlB,EAAKzB,MAAQ,CACXyL,aAAcA,GACdzK,KAAMA,GACNqO,cAAeA,GACflJ,UAAWA,GACXnB,MAAM,EACNwK,eAAe,EACfrI,YAAY,EACZkB,WAAW,EACXH,iBAAiB,EACjBM,iBAAiB,EACjBtH,GAAI,GACJjB,KAAM,CACJoN,YAAa,GACb8C,MAAO,GACPC,OAAQ,GACR/J,KAAM,GACN6J,SAAU,CACRhP,GAAI,GACJmP,aAAc,GACdC,QAAS,KAGb/D,UAAW,CACT9L,KAAM,GACNyM,SAAU,GACVW,UAAW,GACXC,YAAa,GACbC,OAAQ,GACRrH,MAAO,GACPsH,cAAe,GACfC,YAAa,GACbhB,QAAS,CACP/L,GAAI,GACJmM,YAAa,GACbhH,KAAM,MAKZ,EAAK6C,kBAAoB,EAAKA,kBAAkBC,KAAvB,gBA1Cb,E,qDAuJd,SAAkBlG,GAChB,IAAMzC,EAASyC,EAAMzC,OACfE,EAAQF,EAAOE,MACfD,EAAOD,EAAOC,KAEpB0B,KAAK5B,SAAL,eACGE,EAAOC,M,oBAoEZ,WAAU,IAAD,WACP,OACE,gCACE,cAAC,EAAD,IACA,eAAC,YAAD,WACE,uBACA,gDACA,uBACA,cAAC0I,GAAA,EAAD,CAAUpE,KAAM7C,KAAKnC,MAAMqI,UAA3B,SACE,cAACgB,GAAA,EAAD,CAAOC,KAAM,cAAC,KAAD,CAAWC,SAAS,YAAcC,SAAS,UAAUtE,QAAS/C,KAAKuG,YAAhF,uDAIF,cAACU,GAAA,EAAD,CAAUpE,KAAM7C,KAAKnC,MAAMkI,gBAA3B,SACE,cAACmB,GAAA,EAAD,CAAOC,KAAM,cAACG,GAAA,EAAD,IAAqCD,SAAS,UAAUtE,QAAS/C,KAAKwG,uBAAnF,uDAIF,cAACS,GAAA,EAAD,CAAUpE,KAAM7C,KAAKnC,MAAMwI,gBAA3B,SACE,cAACa,GAAA,EAAD,CAAOC,KAAM,cAACI,GAAA,EAAD,IAA+BF,SAAS,OAAOtE,QAAS/C,KAAKyG,uBAA1E,uDAIF,cAAC,IAAD,CAAK9E,UAAU,OACbC,GAAI,CACF,uBAAwB,CAAE+C,EAAG,EAAGJ,MAAO,SAEzCiD,YAAU,EACVC,aAAa,MALf,SAME,gCACE,cAACQ,EAAA,EAAD,CACElJ,GAAG,oBACHgJ,MAAM,qBACNtG,QAAQ,WACRnD,KAAK,OACLyB,SAAUC,KAAKsG,mBAEhB,KACD,cAAC,SAAD,CAAQjE,MAAM,UAAUpC,QAASD,KAAKoF,OAAtC,SAA8C,cAAC,KAAD,WAKlD,uBACA,uBACA,cAAC,SAAD,CAAQ/C,MAAM,UAAUpC,QAASD,KAAK8E,WAAtC,SAAmD,cAACoD,GAAA,EAAD,MACnD,uBACA,uBACA,cAACC,EAAA,EAAD,CAAgBxG,UAAWyG,IAA3B,SACE,eAACC,EAAA,EAAD,CAAOzG,GAAI,CAAE+F,SAAU,KAAO,aAAW,eAAzC,UACE,cAACW,EAAA,EAAD,UACE,eAACC,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,oCACA,cAACA,EAAA,EAAD,CAAWC,MAAM,QAAjB,8BACA,cAACD,EAAA,EAAD,CAAWC,MAAM,QAAjB,sBACA,cAACD,EAAA,EAAD,CAAWC,MAAM,QAAjB,8BACA,cAACD,EAAA,EAAD,CAAWC,MAAM,QAAjB,oBACA,cAACD,EAAA,EAAD,CAAWC,MAAM,QAAjB,mBACA,cAACD,EAAA,EAAD,CAAWC,MAAM,eAGrB,cAACC,EAAA,EAAD,UACG1I,KAAKnC,MAAMgB,KAAKmE,KAAI,SAACnE,GAAD,OACnB,eAAC0J,EAAA,EAAD,CAEE3G,GAAI,CAAE,mCAAoC,CAAE6C,OAAQ,IAFtD,UAIE,cAAC+D,EAAA,EAAD,CAAW7G,UAAU,KAAKgH,MAAM,OAAhC,SACG9J,EAAKqF,OAER,cAACsE,EAAA,EAAD,CAAWC,MAAM,QAAjB,SAA0B5J,EAAKqM,cAC/B,cAAC1C,EAAA,EAAD,CAAWC,MAAM,QAAjB,SAA2C,MAAjB5J,EAAKkP,SAAmB,GAAKlP,EAAKkP,SAASG,eACrE,cAAC1F,EAAA,EAAD,CAAWC,MAAM,QAAjB,SAA2C,MAAjB5J,EAAKkP,SAAmB,GAAKlP,EAAKkP,SAASI,UACrE,cAAC3F,EAAA,EAAD,CAAWC,MAAM,QAAjB,SAA0B5J,EAAKoP,SAC/B,cAACzF,EAAA,EAAD,CAAWC,MAAM,QAAjB,SAA0B5J,EAAKmP,QAC/B,eAACxF,EAAA,EAAD,CAAWC,MAAM,QAAjB,UACE,cAACtG,EAAA,EAAD,CAAYE,MAAM,UAAUpC,QAAS,kBAAM,EAAKgF,iBAAiBpG,IAAjE,SAAwE,cAAC+J,GAAA,EAAD,MAAqB,IAC7F,cAACzG,EAAA,EAAD,CAAYE,MAAM,QAAQpC,QAAS,kBAAM,EAAK2F,OAAO/G,IAArD,SAA4D,cAACgK,GAAA,EAAD,MAAuB,IACnF,cAAC1G,EAAA,EAAD,CAAYE,MAAM,UAAUpC,QAAS,kBAAM,EAAKmN,oBAAoBvO,IAApE,SAA2E,cAACqJ,GAAA,EAAD,WAdxErJ,EAAKE,iBAsBtB,cAAC+J,GAAA,EAAD,CACEjG,KAAM7C,KAAKnC,MAAMgF,KACjBE,QAAS/C,KAAK6E,YACd,kBAAgB,oBAChB,mBAAiB,0BAJnB,SAME,eAAC,IAAD,CAAKjD,GAAIuC,GAAOxC,UAAU,OAExB6F,YAAU,EACVC,aAAa,MAHf,UAIE,gCACE,eAACjG,EAAA,EAAD,WAAY,cAAC4M,GAAA,EAAD,IAAZ,kCACA,uBACA,cAACnG,EAAA,EAAD,CACEF,MAAM,oBACNtG,QAAQ,SACRnD,KAAK,OACLyB,SAAUC,KAAKsG,mBAEhB,OACD,cAAC2B,EAAA,EAAD,CACEF,MAAM,mBACNtG,QAAQ,SACRnD,KAAK,cACLyB,SAAUC,KAAKsG,iBACfxG,KAAK,OACLiN,gBAAiB,CACfC,QAAQ,QAId,uBACA,gCAEE,cAAC/E,EAAA,EAAD,CACElJ,GAAG,WACHgJ,MAAM,SACNtG,QAAQ,SACRnD,KAAK,SACLyB,SAAUC,KAAKsG,iBACfxG,KAAK,SACLkJ,WAAY,CACVC,eACE,cAACC,EAAA,EAAD,CAAgB/H,SAAS,QAAzB,kBAML,OACD,cAAC8G,EAAA,EAAD,CACEF,MAAM,QACNtG,QAAQ,SACRnD,KAAK,QACLyB,SAAUC,KAAKsG,iBACfxG,KAAK,SACLkJ,WAAY,CACVC,eACE,cAACC,EAAA,EAAD,CAAgB/H,SAAS,QAAzB,qBAOR,uBACA,gCACE,0CACA,uBACA,cAAC8G,EAAA,EAAD,CACElJ,GAAG,eACHgJ,MAAM,gBACNtG,QAAQ,SACRnD,KAAK,eACLyB,SAAUC,KAAK8N,yBACf9E,WAAY,CACVC,eACE,cAACC,EAAA,EAAD,CAAgB/H,SAAS,QAAzB,kBAML,OACD,eAACuG,GAAA,EAAD,CAAajG,QAAQ,WAAWG,GAAI,CAAE+C,EAAG,EAAGgD,SAAU,KAAtD,UACE,cAAC,KAAD,CAAY5I,GAAG,SAAf,qBACA,eAAC8I,GAAA,GAAD,GACEC,QAAQ,UACR/I,GAAG,UACHR,MAAOyB,KAAKnC,MAAMC,KAAKiQ,SAASI,QAChCpO,SAAUC,KAAK8N,yBACf/F,MAAM,UACNzJ,KAAK,UACLmD,QAAQ,UAPV,wBAQU,YARV,0BAUE,cAACyB,EAAA,EAAD,CAAU3E,MAAM,GAAhB,SACE,wCAEDyB,KAAKnC,MAAMqP,cAAclK,KAAI,SAACgF,GAAD,OAC5B,cAAC9E,EAAA,EAAD,CAAU3E,MAAOyJ,EAAGqG,YAApB,SAAkCrG,EAAGqG,mBAdzC,UAoBJ,uBACA,eAAC,SAAD,CAAQvO,KAAK,SAASuC,MAAM,UAAUpC,QAASD,KAAKgG,KAApD,kBAA+D,cAACoD,GAAA,EAAD,YAInE,cAACN,GAAA,EAAD,CACEjG,KAAM7C,KAAKnC,MAAMmH,WACjBjC,QAAS/C,KAAK+E,kBACd,kBAAgB,oBAChB,mBAAiB,0BAJnB,SAME,eAAC,IAAD,CAAKnD,GAAIuC,GAAOxC,UAAU,OAExB6F,YAAU,EACVC,aAAa,MAHf,UAIE,gCACE,eAACjG,EAAA,EAAD,WAAY,cAAC4M,GAAA,EAAD,IAAZ,4BACA,uBACA,cAACnG,EAAA,EAAD,CACEF,MAAM,eACNtG,QAAQ,SACRnD,KAAK,OACLyB,SAAUC,KAAKsG,iBACf/H,MAAOyB,KAAKnC,MAAMC,KAAKoG,OAExB,OACD,cAAC+D,EAAA,EAAD,CACEF,MAAM,aACNtG,QAAQ,SACRnD,KAAK,cACLyB,SAAUC,KAAKsG,iBACfxG,KAAK,OACLiN,gBAAiB,CACfC,QAAQ,QAId,uBACA,gCAEE,cAAC/E,EAAA,EAAD,CACElJ,GAAG,WACHgJ,MAAM,SACNtG,QAAQ,SACRnD,KAAK,SACLyB,SAAUC,KAAKsG,iBACfxG,KAAK,SACLvB,MAAOyB,KAAKnC,MAAMC,KAAKmQ,OACvBjF,WAAY,CACVC,eACE,cAACC,EAAA,EAAD,CAAgB/H,SAAS,QAAzB,kBAML,OACD,cAAC8G,EAAA,EAAD,CACEF,MAAM,QACNtG,QAAQ,SACRnD,KAAK,QACLyB,SAAUC,KAAKsG,iBACfxG,KAAK,SACLvB,MAAOyB,KAAKnC,MAAMC,KAAKkQ,MACvBhF,WAAY,CACVC,eACE,cAACC,EAAA,EAAD,CAAgB/H,SAAS,QAAzB,qBAOR,uBACA,gCACE,0CACA,uBACA,cAAC8G,EAAA,EAAD,CACElJ,GAAG,eACHgJ,MAAM,gBACNtG,QAAQ,SACRnD,KAAK,eACLyB,SAAUC,KAAK8N,yBACfvP,MAAOyB,KAAKnC,MAAMC,KAAKiQ,SAASG,aAChClF,WAAY,CACVC,eACE,cAACC,EAAA,EAAD,CAAgB/H,SAAS,QAAzB,kBAML,OACD,eAACuG,GAAA,EAAD,CAAajG,QAAQ,WAAWG,GAAI,CAAE+C,EAAG,EAAGgD,SAAU,KAAtD,UACE,cAAC,KAAD,CAAY5I,GAAG,SAAf,qBACA,eAAC8I,GAAA,GAAD,GACEC,QAAQ,UACR/I,GAAG,UACHR,MAAOyB,KAAKnC,MAAMC,KAAKiQ,SAASI,QAChCpO,SAAUC,KAAK8N,yBACf/F,MAAM,UACNzJ,KAAK,UACLmD,QAAQ,UAPV,wBAQU,YARV,0BAUE,cAACyB,EAAA,EAAD,CAAU3E,MAAM,GAAhB,SACE,wCAEDyB,KAAKnC,MAAMqP,cAAclK,KAAI,SAACgF,GAAD,OAC5B,cAAC9E,EAAA,EAAD,CAAU3E,MAAOyJ,EAAGqG,YAApB,SAAkCrG,EAAGqG,mBAdzC,UAoBJ,uBACA,eAAC,SAAD,CAAQvO,KAAK,SAASuC,MAAM,UAAUpC,QAASD,KAAKmG,OAApD,kBAAiE,cAACiD,GAAA,EAAD,YAIrE,cAACN,GAAA,EAAD,CACEjG,KAAM7C,KAAKnC,MAAMwP,cACjBtK,QAAS/C,KAAK6E,YACd,kBAAgB,oBAChB,mBAAiB,0BAJnB,SAME,eAAC,IAAD,CAAKjD,GAAIuC,GAAOxC,UAAU,OAExB6F,YAAU,EACVC,aAAa,MAHf,UAIE,gCACE,eAACjG,EAAA,EAAD,WAAY,cAACqL,GAAA,EAAD,IAAZ,6BACA,uBACA,cAAC5E,EAAA,EAAD,CACEF,MAAM,OACNtG,QAAQ,SACRnD,KAAK,OACLyB,SAAUC,KAAKsL,wBAEhB,OACD,cAACrD,EAAA,EAAD,CACEF,MAAM,QACNtG,QAAQ,SACRnD,KAAK,QACLyB,SAAUC,KAAKsL,sBACfxL,KAAK,SACLkJ,WAAY,CACVC,eACE,cAACC,EAAA,EAAD,CAAgB/H,SAAS,QAAzB,qBAOR,uBACA,gCAEE,cAAC8G,EAAA,EAAD,CACElJ,GAAG,oBACHgJ,MAAM,gBACNtG,QAAQ,SACRnD,KAAK,gBACLyB,SAAUC,KAAKsL,sBACfxL,KAAK,SACLkJ,WAAY,CACVC,eACE,cAACC,EAAA,EAAD,CAAgB/H,SAAS,QAAzB,kBAML,OACD,cAAC8G,EAAA,EAAD,CACEF,MAAM,SACNtG,QAAQ,SACRnD,KAAK,SACLyB,SAAUC,KAAKsL,sBACfxL,KAAK,SACLkJ,WAAY,CACVC,eACE,cAACC,EAAA,EAAD,CAAgB/H,SAAS,QAAzB,qBAOR,uBACA,gCAEG,OACD,cAAC8G,EAAA,EAAD,CACElJ,GAAG,cACHgJ,MAAM,eACNtG,QAAQ,SACRnD,KAAK,cACLyB,SAAUC,KAAKsL,sBACftC,WAAY,CACVC,eACE,cAACC,EAAA,EAAD,CAAgB/H,SAAS,QAAzB,kBAML,OACD,cAAC8G,EAAA,EAAD,CACElJ,GAAG,YACHgJ,MAAM,aACNtG,QAAQ,SACRnD,KAAK,YACLyB,SAAUC,KAAKsL,sBACfxL,KAAK,SACLkJ,WAAY,CACVC,eACE,cAACC,EAAA,EAAD,CAAgB/H,SAAS,QAAzB,qBAOR,uBACA,gCACE,cAAC8G,EAAA,EAAD,CACElJ,GAAG,cACHgJ,MAAM,iBACNtG,QAAQ,SACRnD,KAAK,cACLyB,SAAUC,KAAKsL,wBAEhB,OACD,cAACrD,EAAA,EAAD,CACElJ,GAAG,OACHgJ,MAAM,iBACNtG,QAAQ,SACRnD,KAAK,OACLyB,SAAUC,KAAK6N,6BACfxE,UAAQ,EACR9K,MAAOyB,KAAKnC,MAAMC,KAAKoG,UAI3B,uBACA,gCACE,cAAC+D,EAAA,EAAD,CACElJ,GAAG,cACHgJ,MAAM,eACNtG,QAAQ,SACRnD,KAAK,cACLyB,SAAUC,KAAK6N,6BACftP,MAAOyB,KAAKnC,MAAMC,KAAKoN,YACvB7B,UAAQ,IAET,OACD,cAACpB,EAAA,EAAD,CACElJ,GAAG,YACHgJ,MAAM,aACNtG,QAAQ,SACRnD,KAAK,KACLyB,SAAUC,KAAK6N,6BACfxE,UAAQ,EACR9K,MAAOyB,KAAKnC,MAAMkB,GAClBiK,WAAY,CACVC,eACE,cAACC,EAAA,EAAD,CAAgB/H,SAAS,QAAzB,qBAOR,uBACA,eAAC,SAAD,CAAQrB,KAAK,SAASuC,MAAM,UAAUpC,QAASD,KAAK2N,cAApD,kBAAwE,cAACvE,GAAA,EAAD,OACvE,eACD,cAAC,SAAD,CAAQtJ,KAAK,SAASuC,MAAM,SAASpC,QAASD,KAAKuN,qBAAnD,gC,GA9rBUrN,IAAMC,WAysBbgN,MCluBTtO,GAAO,GACPnB,GAAU,IAAIC,IACdF,GAAU,qCACV0G,GAAQ,CACVhD,SAAU,WACViD,IAAK,MACLC,KAAM,MACNC,UAAW,wBACXC,MAAO,IACPC,QAAS,QACTC,OAAQ,iBACRC,UAAW,GACXjB,EAAG,EACHkB,EAAG,GAED2J,G,kDAMF,aAAe,IAAD,8BACV,gBALJzJ,YAAc,kBAAM,EAAKzG,SAAS,CAAEyE,MAAM,KAI5B,EAHdiC,WAAa,kBAAM,EAAK1G,SAAS,CAAEyE,MAAM,KAG3B,EAFdkC,kBAAoB,kBAAM,EAAK3G,SAAS,CAAE4G,YAAY,KAExC,EADdC,iBAAmB,SAACpG,GAAD,OAAU,EAAKT,SAAS,CAAE4G,YAAY,EAAMlH,KAAMe,EAAME,GAAIF,EAAKE,MACtE,EAuBdmG,OAvBc,sBAuBL,sBAAA/G,EAAA,sEACCM,IAAMmB,IAAInC,GAAU,OAAQ,CAC9BgI,QAAS,CAAEC,cAAe,UAAYhI,GAAQkC,IAAI,SAAUgL,MAAO,cACpEjM,MAAK,SAAAC,GACJ,OAAOA,EAASC,QAEfF,MAAK,SAAAC,GACF,IAAIuG,EAAQ,EAAKtH,MAAMgB,KACvBsG,EAAQvG,EACR,EAAKR,SAAS,CAAES,KAAMsG,OAEzB3F,OAAM,SAAAC,GACHC,QAAQC,IAAIF,MAZf,2CAvBK,EAwCd2F,OAxCc,sBAwCL,sBAAAjH,EAAA,sEACCM,IAAMmB,IAAInC,GAAU,UAAW,CAAE4H,OAAQ,CAAE/G,KAAM,EAAKT,MAAMC,KAAKmP,cAAexH,QAAS,CAAEC,cAAe,UAAYhI,GAAQkC,IAAI,YACnIjB,MAAK,SAAAC,GACF,OAAOA,EAASC,QAEnBF,MAAK,SAAAC,GACF,IAAIuG,EAAQ,EAAKtH,MAAMgB,KACvBsG,EAAQvG,EACR,EAAKR,SAAS,CAAES,KAAMsG,OAEzB3F,OAAM,SAAAC,GACHC,QAAQC,IAAIF,MAXf,2CAxCK,EAuDdmG,OAvDc,uCAuDL,WAAOC,GAAP,SAAA1H,EAAA,0DACQiB,OAAO0G,QAAQ,oCAAsCD,EAAKvH,MADlE,gCAGKG,IAAMmH,OAAOnI,GAAU,WAAaoI,EAAK9G,GAAI,CAC/C0G,QAAS,CAAEC,cAAe,UAAYhI,GAAQkC,IAAI,YAEjDjB,MAAK,SAAAC,GACF,OAAOA,EAASC,QACjBF,MAAK,SAAAC,GACJ,IAAIuG,EAAQ,EAAKtH,MAAMgB,KACvBsG,EAAQvG,EACR,EAAKR,SAAS,CAAES,KAAMsG,EAAOY,iBAAiB,OAC/CvG,OAAM,SAAAC,GACLC,QAAQC,IAAIF,MAbnB,2CAvDK,wDA0EduG,KA1Ec,uCA0EP,WAAOlF,GAAP,SAAA3C,EAAA,6DACH2C,EAAMmF,iBADH,SAEGxH,IAAMC,KAAKjB,GAAU,QAAS,EAAKI,MAAMC,KAAM,CAAE2H,QAAS,CAAEC,cAAe,UAAYhI,GAAQkC,IAAI,YACpGjB,MAAK,SAAAC,GACF,OAAOA,EAASC,QACjBF,MAAK,SAAAC,GACJ,EAAKsG,SACL,EAAK9G,SAAS,CAAE8H,WAAW,EAAMrD,MAAM,OACxCrD,OAAM,SAAAC,GACLC,QAAQC,IAAIF,MATjB,kDA1EO,wDAuFd0G,OAvFc,uCAuFL,WAAOrF,GAAP,SAAA3C,EAAA,6DACL2C,EAAMmF,iBADD,SAECxH,IAAM2H,IAAI3I,GAAU,WAAa,EAAKI,MAAMkB,GAAI,EAAKlB,MAAMC,KAAM,CAAE2H,QAAS,CAAEC,cAAe,UAAYhI,GAAQkC,IAAI,YACtHjB,MAAK,SAAAC,GACF,OAAOA,EAASC,QACjBF,MAAK,SAAAC,GACJ,EAAKsG,SACL,EAAK9G,SAAS,CAAEiI,iBAAiB,EAAMrB,YAAY,OACpDxF,OAAM,SAAAC,GACLC,QAAQC,IAAIF,MATf,kDAvFK,wDA8Gd6G,iBA9Gc,uCA8GK,WAAMpI,GAAN,SAAAC,EAAA,sEACT,EAAKC,SAAS,CAChBN,KAAK,2BACE,EAAKD,MAAMC,MADd,kBAECI,EAAEG,OAAOC,KAAOJ,EAAEG,OAAOE,UAJnB,2CA9GL,wDAwHdgI,YAxHc,uCAwHA,WAAMrI,GAAN,SAAAC,EAAA,sDACV,EAAKC,SAAS,CAAE8H,WAAY,EAAKrI,MAAMqI,YAD7B,2CAxHA,wDA4HdM,uBA5Hc,uCA4HW,WAAMtI,GAAN,SAAAC,EAAA,sDACrB,EAAKC,SAAS,CAAE2H,iBAAkB,EAAKlI,MAAMkI,kBADxB,2CA5HX,wDAgIdU,uBAhIc,uCAgIW,WAAMvI,GAAN,SAAAC,EAAA,sDACrB,EAAKC,SAAS,CAAEiI,iBAAkB,EAAKxI,MAAMwI,kBADxB,2CAhIX,wDAoIdK,kBApIc,sBAoIM,sBAAAvI,EAAA,sEACV,EAAK+G,SADK,OAEXxH,GAAQkC,IAAI,WACbR,OAAOC,SAASC,KAAO,MAHX,2CAlIhB,EAAKzB,MAAQ,CACTgB,KAAMA,GACNgE,MAAM,EACNmC,YAAY,EACZkB,WAAW,EACXH,iBAAiB,EACjBM,iBAAiB,EACjBtH,GAAI,GACJjB,KAAM,CACFmP,aAAc,GACdsB,SAAU,GACVC,UAAW,GACXC,aAAc,GACdC,SAAU,GACVC,SAAU,KAIlB,EAAK5H,kBAAoB,EAAKA,kBAAkBC,KAAvB,gBApBf,E,qDAoGd,SAAkBlG,GACd,IAAMzC,EAASyC,EAAMzC,OACfE,EAAQF,EAAOE,MACfD,EAAOD,EAAOC,KAEpB0B,KAAK5B,SAAL,eACKE,EAAOC,M,oBAiChB,WAAU,IAAD,OACL,OACI,gCACI,cAAC,EAAD,IACA,eAAC,YAAD,WACI,uBACA,0CACA,uBACA,cAAC0I,GAAA,EAAD,CAAUpE,KAAM7C,KAAKnC,MAAMqI,UAA3B,SACI,cAACgB,GAAA,EAAD,CAAOC,KAAM,cAAC,KAAD,CAAWC,SAAS,YAAcC,SAAS,UAAUtE,QAAS/C,KAAKuG,YAAhF,iDAIJ,cAACU,GAAA,EAAD,CAAUpE,KAAM7C,KAAKnC,MAAMkI,gBAA3B,SACI,cAACmB,GAAA,EAAD,CAAOC,KAAM,cAACG,GAAA,EAAD,IAAqCD,SAAS,UAAUtE,QAAS/C,KAAKwG,uBAAnF,iDAIJ,cAACS,GAAA,EAAD,CAAUpE,KAAM7C,KAAKnC,MAAMwI,gBAA3B,SACI,cAACa,GAAA,EAAD,CAAOC,KAAM,cAACI,GAAA,EAAD,IAA+BF,SAAS,OAAOtE,QAAS/C,KAAKyG,uBAA1E,iDAIJ,cAAC,IAAD,CAAK9E,UAAU,OACXC,GAAI,CACA,uBAAwB,CAAE+C,EAAG,EAAGJ,MAAO,SAE3CiD,YAAU,EACVC,aAAa,MALjB,SAMI,gCACI,cAACQ,EAAA,EAAD,CACIlJ,GAAG,oBACHgJ,MAAM,gBACNtG,QAAQ,WACRnD,KAAK,eACLyB,SAAUC,KAAKsG,mBAElB,KACD,cAAC,SAAD,CAAQjE,MAAM,UAAUpC,QAASD,KAAKoF,OAAtC,SAA8C,cAAC,KAAD,WAKtD,uBACA,uBACA,cAAC,SAAD,CAAQ/C,MAAM,UAAUpC,QAASD,KAAK8E,WAAtC,SAAmD,cAACoD,GAAA,EAAD,MACnD,uBACA,uBACA,cAACC,EAAA,EAAD,CAAgBxG,UAAWyG,IAA3B,SACI,eAACC,EAAA,EAAD,CAAOzG,GAAI,CAAE+F,SAAU,KAAO,aAAW,eAAzC,UACI,cAACW,EAAA,EAAD,UACI,eAACC,EAAA,EAAD,WACI,cAACC,EAAA,EAAD,4BACA,cAACA,EAAA,EAAD,CAAWC,MAAM,QAAjB,sBACA,cAACD,EAAA,EAAD,CAAWC,MAAM,QAAjB,uBACA,cAACD,EAAA,EAAD,CAAWC,MAAM,QAAjB,0BACA,cAACD,EAAA,EAAD,CAAWC,MAAM,QAAjB,kBACA,cAACD,EAAA,EAAD,CAAWC,MAAM,QAAjB,oCACA,cAACD,EAAA,EAAD,CAAWC,MAAM,QAAjB,qCACA,cAACD,EAAA,EAAD,CAAWC,MAAM,eAGzB,cAACC,EAAA,EAAD,UACK1I,KAAKnC,MAAMgB,KAAKmE,KAAI,SAACnE,GAAD,OACjB,eAAC0J,EAAA,EAAD,CAEI3G,GAAI,CAAE,mCAAoC,CAAE6C,OAAQ,IAFxD,UAII,cAAC+D,EAAA,EAAD,CAAW7G,UAAU,KAAKgH,MAAM,OAAhC,SACK9J,EAAKoO,eAEV,cAACzE,EAAA,EAAD,CAAWC,MAAM,QAAjB,SAA0B5J,EAAK0P,WAC/B,cAAC/F,EAAA,EAAD,CAAWC,MAAM,QAAjB,SAA0B5J,EAAK2P,YAC/B,cAAChG,EAAA,EAAD,CAAWC,MAAM,QAAjB,SAA0B5J,EAAK4P,eAC/B,cAACjG,EAAA,EAAD,CAAWC,MAAM,QAAjB,SAA0B5J,EAAK6P,WAC/B,cAAClG,EAAA,EAAD,CAAWC,MAAM,QAAjB,SAA0B5J,EAAK+P,gBAC/B,cAACpG,EAAA,EAAD,CAAWC,MAAM,QAAjB,SAA0B5J,EAAK8P,WAC/B,eAACnG,EAAA,EAAD,CAAWC,MAAM,QAAjB,UACI,cAACtG,EAAA,EAAD,CAAYE,MAAM,UAAUpC,QAAS,kBAAM,EAAKgF,iBAAiBpG,IAAjE,SAAwE,cAAC+J,GAAA,EAAD,MAAqB,IAC7F,cAACzG,EAAA,EAAD,CAAYE,MAAM,QAAQpC,QAAS,kBAAM,EAAK2F,OAAO/G,IAArD,SAA4D,cAACgK,GAAA,EAAD,MAAuB,SAdlFhK,EAAKE,iBAqBlC,cAAC+J,GAAA,EAAD,CACIjG,KAAM7C,KAAKnC,MAAMgF,KACjBE,QAAS/C,KAAK6E,YACd,kBAAgB,oBAChB,mBAAiB,0BAJrB,SAMI,eAAC,IAAD,CAAKjD,GAAIuC,GAAOxC,UAAU,OAEtB6F,YAAU,EACVC,aAAa,MAHjB,UAII,gCACI,eAACjG,EAAA,EAAD,WAAY,cAACqL,GAAA,EAAD,IAAZ,4BACA,uBACA,cAAC5E,EAAA,EAAD,CACIF,MAAM,gBACNtG,QAAQ,SACRnD,KAAK,eACLyB,SAAUC,KAAKsG,mBAElB,OACD,cAAC2B,EAAA,EAAD,CACIF,MAAM,WACNtG,QAAQ,SACRnD,KAAK,WACLyB,SAAUC,KAAKsG,sBAGvB,uBACA,gCAEI,cAAC2B,EAAA,EAAD,CACIlJ,GAAG,cACHgJ,MAAM,YACNtG,QAAQ,SACRnD,KAAK,YACLyB,SAAUC,KAAKsG,mBAElB,OACD,cAAC2B,EAAA,EAAD,CACIF,MAAM,eACNtG,QAAQ,SACRnD,KAAK,eACLyB,SAAUC,KAAKsG,sBAIvB,uBACA,gCAEK,OACD,cAAC2B,EAAA,EAAD,CACIlJ,GAAG,aACHgJ,MAAM,OACNtG,QAAQ,SACRnD,KAAK,WACLyB,SAAUC,KAAKsG,iBACf0C,WAAY,CACRC,eACI,cAACC,EAAA,EAAD,CAAgB/H,SAAS,QAAzB,kBAMX,OACD,cAAC8G,EAAA,EAAD,CACIlJ,GAAG,aACHgJ,MAAM,WACNtG,QAAQ,SACRnD,KAAK,WACLyB,SAAUC,KAAKsG,iBACfxG,KAAK,SACLkJ,WAAY,CACRC,eACI,cAACC,EAAA,EAAD,CAAgB/H,SAAS,QAAzB,qBAOhB,uBACA,eAAC,SAAD,CAAQrB,KAAK,SAASuC,MAAM,UAAUpC,QAASD,KAAKgG,KAApD,kBAA+D,cAACoD,GAAA,EAAD,YAGvE,cAACN,GAAA,EAAD,CACIjG,KAAM7C,KAAKnC,MAAMmH,WACjBjC,QAAS/C,KAAK6E,YACd,kBAAgB,oBAChB,mBAAiB,0BAJrB,SAMI,eAAC,IAAD,CAAKjD,GAAIuC,GAAOxC,UAAU,OAEtB6F,YAAU,EACVC,aAAa,MAHjB,UAII,gCACI,eAACjG,EAAA,EAAD,WAAY,cAACqL,GAAA,EAAD,IAAZ,4BACA,uBACA,cAAC5E,EAAA,EAAD,CACIF,MAAM,gBACNtG,QAAQ,SACRnD,KAAK,eACLyB,SAAUC,KAAKsG,iBACf/H,MAAOyB,KAAKnC,MAAMC,KAAKmP,eAE1B,OACD,cAAChF,EAAA,EAAD,CACIF,MAAM,WACNtG,QAAQ,SACRnD,KAAK,WACLyB,SAAUC,KAAKsG,iBACf/H,MAAOyB,KAAKnC,MAAMC,KAAKyQ,cAG/B,uBACA,gCAEI,cAACtG,EAAA,EAAD,CACIlJ,GAAG,cACHgJ,MAAM,YACNtG,QAAQ,SACRnD,KAAK,YACLyB,SAAUC,KAAKsG,iBACf/H,MAAOyB,KAAKnC,MAAMC,KAAK0Q,YAE1B,OACD,cAACvG,EAAA,EAAD,CACIF,MAAM,eACNtG,QAAQ,SACRnD,KAAK,eACLyB,SAAUC,KAAKsG,iBACf/H,MAAOyB,KAAKnC,MAAMC,KAAK2Q,kBAG/B,uBACA,gCAEK,OACD,cAACxG,EAAA,EAAD,CACIlJ,GAAG,aACHgJ,MAAM,OACNtG,QAAQ,SACRnD,KAAK,WACLyB,SAAUC,KAAKsG,iBACf/H,MAAOyB,KAAKnC,MAAMC,KAAK4Q,SACvB1F,WAAY,CACRC,eACI,cAACC,EAAA,EAAD,CAAgB/H,SAAS,QAAzB,kBAMX,OACD,cAAC8G,EAAA,EAAD,CACIlJ,GAAG,aACHgJ,MAAM,WACNtG,QAAQ,SACRnD,KAAK,WACLC,MAAOyB,KAAKnC,MAAMC,KAAK6Q,SACvB5O,SAAUC,KAAKsG,iBACfxG,KAAK,SACLkJ,WAAY,CACRC,eACI,cAACC,EAAA,EAAD,CAAgB/H,SAAS,QAAzB,qBAOhB,uBACA,eAAC,SAAD,CAAQrB,KAAK,SAASuC,MAAM,UAAUpC,QAASD,KAAKmG,OAApD,kBAAiE,cAACiD,GAAA,EAAD,OAChE,eACD,cAAC,SAAD,CAAQtJ,KAAK,SAASuC,MAAM,SAASpC,QAASD,KAAK+E,kBAAnD,iC,GArZD7E,IAAMC,WA+ZdmO,MC7aTzP,I,OAAO,IACPnB,GAAU,IAAIC,IACdF,GAAU,oCACV0G,GAAQ,CACVhD,SAAU,WACViD,IAAK,MACLC,KAAM,MACNC,UAAW,wBACXC,MAAO,IACPC,QAAS,QACTC,OAAQ,iBACRC,UAAW,GACXjB,EAAG,EACHkB,EAAG,GAEDkK,G,kDAMF,aAAe,IAAD,8BACV,gBALJhK,YAAc,kBAAM,EAAKzG,SAAS,CAAEyE,MAAM,KAI5B,EAHdiC,WAAa,kBAAM,EAAK1G,SAAS,CAAEyE,MAAM,KAG3B,EAFdkC,kBAAoB,kBAAM,EAAK3G,SAAS,CAAE4G,YAAY,KAExC,EADdC,iBAAmB,SAACpG,GAAD,OAAU,EAAKT,SAAS,CAAE4G,YAAY,EAAMlH,KAAMe,EAAME,GAAIF,EAAKE,MACtE,EAuBdmG,OAvBc,sBAuBL,sBAAA/G,EAAA,sEACCM,IAAMmB,IAAInC,GAAU,OAAQ,CAC9BgI,QAAS,CAAEC,cAAe,UAAYhI,GAAQkC,IAAI,SAAUgL,MAAO,cACpEjM,MAAK,SAAAC,GACJ,OAAOA,EAASC,QAEfF,MAAK,SAAAC,GACF,IAAIuG,EAAQ,EAAKtH,MAAMgB,KACvBsG,EAAQvG,EACRc,QAAQC,IAAIf,GACZ,EAAKR,SAAS,CAAES,KAAMsG,OAEzB3F,OAAM,SAAAC,GACHC,QAAQC,IAAIF,MAbf,2CAvBK,EAyCd2F,OAzCc,sBAyCL,sBAAAjH,EAAA,sEACCM,IAAMmB,IAAInC,GAAU,UAAW,CAAE4H,OAAQ,CAAE/G,KAAM,EAAKT,MAAMC,KAAKmP,cAAexH,QAAS,CAAEC,cAAe,UAAYhI,GAAQkC,IAAI,YACnIjB,MAAK,SAAAC,GACF,OAAOA,EAASC,QAEnBF,MAAK,SAAAC,GACF,IAAIuG,EAAQ,EAAKtH,MAAMgB,KACvBsG,EAAQvG,EACR,EAAKR,SAAS,CAAES,KAAMsG,OAEzB3F,OAAM,SAAAC,GACHC,QAAQC,IAAIF,MAXf,2CAzCK,EAwDdmG,OAxDc,uCAwDL,WAAOC,GAAP,SAAA1H,EAAA,0DACQiB,OAAO0G,QAAQ,oCAAsCD,EAAKvH,MADlE,gCAGKG,IAAMmH,OAAOnI,GAAU,WAAaoI,EAAK9G,GAAI,CAC/C0G,QAAS,CAAEC,cAAe,UAAYhI,GAAQkC,IAAI,YAEjDjB,MAAK,SAAAC,GACF,OAAOA,EAASC,QACjBF,MAAK,SAAAC,GACJ,IAAIuG,EAAQ,EAAKtH,MAAMgB,KACvBsG,EAAQvG,EACR,EAAKR,SAAS,CAAES,KAAMsG,EAAOY,iBAAiB,OAC/CvG,OAAM,SAAAC,GACLC,QAAQC,IAAIF,MAbnB,2CAxDK,wDA2EduG,KA3Ec,uCA2EP,WAAOlF,GAAP,SAAA3C,EAAA,6DACH2C,EAAMmF,iBADH,SAEGxH,IAAMC,KAAKjB,GAAU,QAAS,EAAKI,MAAMC,KAAM,CAAE2H,QAAS,CAAEC,cAAe,UAAYhI,GAAQkC,IAAI,YACpGjB,MAAK,SAAAC,GACF,OAAOA,EAASC,QACjBF,MAAK,SAAAC,GACJ,EAAKsG,SACL,EAAK9G,SAAS,CAAE8H,WAAW,EAAMrD,MAAM,OACxCrD,OAAM,SAAAC,GACLC,QAAQC,IAAIF,MATjB,kDA3EO,wDAwFd0G,OAxFc,uCAwFL,WAAOrF,GAAP,SAAA3C,EAAA,6DACL2C,EAAMmF,iBADD,SAECxH,IAAM2H,IAAI3I,GAAU,WAAa,EAAKI,MAAMkB,GAAI,EAAKlB,MAAMC,KAAM,CAAE2H,QAAS,CAAEC,cAAe,UAAYhI,GAAQkC,IAAI,YACtHjB,MAAK,SAAAC,GACF,OAAOA,EAASC,QACjBF,MAAK,SAAAC,GACJ,EAAKsG,SACL,EAAK9G,SAAS,CAAEiI,iBAAiB,EAAMrB,YAAY,OACpDxF,OAAM,SAAAC,GACLC,QAAQC,IAAIF,MATf,kDAxFK,wDA+Gd6G,iBA/Gc,uCA+GK,WAAMpI,GAAN,SAAAC,EAAA,sEACT,EAAKC,SAAS,CAChBN,KAAK,2BACE,EAAKD,MAAMC,MADd,kBAECI,EAAEG,OAAOC,KAAOJ,EAAEG,OAAOE,UAJnB,2CA/GL,wDAyHdgI,YAzHc,uCAyHA,WAAMrI,GAAN,SAAAC,EAAA,sDACV,EAAKC,SAAS,CAAE8H,WAAY,EAAKrI,MAAMqI,YAD7B,2CAzHA,wDA6HdM,uBA7Hc,uCA6HW,WAAMtI,GAAN,SAAAC,EAAA,sDACrB,EAAKC,SAAS,CAAE2H,iBAAkB,EAAKlI,MAAMkI,kBADxB,2CA7HX,wDAiIdU,uBAjIc,uCAiIW,WAAMvI,GAAN,SAAAC,EAAA,sDACrB,EAAKC,SAAS,CAAEiI,iBAAkB,EAAKxI,MAAMwI,kBADxB,2CAjIX,wDAqIdK,kBArIc,sBAqIM,sBAAAvI,EAAA,sEACV,EAAK+G,SADK,OAEXxH,GAAQkC,IAAI,WACbR,OAAOC,SAASC,KAAO,MAHX,2CAnIhB,EAAKzB,MAAQ,CACTgB,KAAMA,GACNgE,MAAM,EACNmC,YAAY,EACZkB,WAAW,EACXH,iBAAiB,EACjBM,iBAAiB,EACjBtH,GAAI,GACJjB,KAAM,CACFiO,kBAAmB,GACnBwC,SAAU,GACVC,UAAW,GACXC,aAAc,GACdC,SAAU,GACVC,SAAU,KAIlB,EAAK5H,kBAAoB,EAAKA,kBAAkBC,KAAvB,gBApBf,E,qDAqGd,SAAkBlG,GACd,IAAMzC,EAASyC,EAAMzC,OACfE,EAAQF,EAAOE,MACfD,EAAOD,EAAOC,KAEpB0B,KAAK5B,SAAL,eACKE,EAAOC,M,oBAiChB,WACI,OACI,gCACI,cAAC,EAAD,IACA,eAAC,YAAD,WACI,uBACA,0CACA,uBACA,cAAC0I,GAAA,EAAD,CAAUpE,KAAM7C,KAAKnC,MAAMqI,UAA3B,SACI,cAACgB,GAAA,EAAD,CAAOC,KAAM,cAAC,KAAD,CAAWC,SAAS,YAAcC,SAAS,UAAUtE,QAAS/C,KAAKuG,YAAhF,8CAIJ,cAACU,GAAA,EAAD,CAAUpE,KAAM7C,KAAKnC,MAAMkI,gBAA3B,SACI,cAACmB,GAAA,EAAD,CAAOC,KAAM,cAACG,GAAA,EAAD,IAAqCD,SAAS,UAAUtE,QAAS/C,KAAKwG,uBAAnF,8CAIJ,cAACS,GAAA,EAAD,CAAUpE,KAAM7C,KAAKnC,MAAMwI,gBAA3B,SACI,cAACa,GAAA,EAAD,CAAOC,KAAM,cAACI,GAAA,EAAD,IAA+BF,SAAS,OAAOtE,QAAS/C,KAAKyG,uBAA1E,8CAIJ,cAAC,IAAD,CAAK9E,UAAU,OACXC,GAAI,CACA,uBAAwB,CAAE+C,EAAG,EAAGJ,MAAO,SAE3CiD,YAAU,EACVC,aAAa,MALjB,SAMI,gCACI,cAACQ,EAAA,EAAD,CACIlJ,GAAG,oBACHgJ,MAAM,iBACNtG,QAAQ,WACRnD,KAAK,OACLyB,SAAUC,KAAKsG,mBAElB,KACD,cAAC,SAAD,CAAQjE,MAAM,UAAUpC,QAASD,KAAKoF,OAAtC,SAA8C,cAAC,KAAD,WAKtD,uBACA,uBACA,cAAC,SAAD,CAAQ/C,MAAM,UAAUpC,QAASD,KAAK8E,WAAtC,SAAmD,cAACoD,GAAA,EAAD,MACnD,uBACA,uBACA,cAACC,EAAA,EAAD,CAAgBxG,UAAWyG,IAA3B,SACI,eAACC,EAAA,EAAD,CAAOzG,GAAI,CAAE+F,SAAU,KAAO,aAAW,eAAzC,UACI,cAACW,EAAA,EAAD,UACI,eAACC,EAAA,EAAD,WACI,cAACC,EAAA,EAAD,wBACA,cAACA,EAAA,EAAD,CAAWC,MAAM,QAAjB,sBACA,cAACD,EAAA,EAAD,CAAWC,MAAM,QAAjB,iCACA,cAACD,EAAA,EAAD,CAAWC,MAAM,QAAjB,6BACA,cAACD,EAAA,EAAD,CAAWC,MAAM,QAAjB,qCACA,cAACD,EAAA,EAAD,CAAWC,MAAM,QAAjB,iCACA,cAACD,EAAA,EAAD,CAAWC,MAAM,QAAjB,oCAGR,cAACC,EAAA,EAAD,UACK1I,KAAKnC,MAAMgB,KAAKmE,KAAI,SAACnE,GAAD,OACjB,eAAC0J,EAAA,EAAD,CAEI3G,GAAI,CAAE,mCAAoC,CAAE6C,OAAQ,IAFxD,UAII,cAAC+D,EAAA,EAAD,CAAW7G,UAAU,KAAKgH,MAAM,OAAhC,SACK9J,EAAKuL,UAAU9L,OAEpB,cAACkK,EAAA,EAAD,CAAWC,MAAM,QAAjB,SAA0B5J,EAAKQ,SAAS4N,eACxC,cAACzE,EAAA,EAAD,CAAWC,MAAM,QAAjB,SAAoD,MAA1B5J,EAAKkN,kBAA2B,GAAK,IAAI+C,KAAKjQ,EAAKkN,mBAAmBgD,uBAChG,cAACvG,EAAA,EAAD,CAAWC,MAAM,QAAjB,SAAgD,MAAtB5J,EAAKoN,cAAuB,GAAK,IAAI6C,KAAKjQ,EAAKoN,eAAe8C,uBACxF,cAACvG,EAAA,EAAD,CAAWC,MAAM,QAAjB,SAAwD,MAA9B5J,EAAKmQ,sBAA+B,GAAK,IAAIF,KAAKjQ,EAAKmQ,uBAAuBD,uBACxG,cAACvG,EAAA,EAAD,CAAWC,MAAM,QAAjB,SAAoD,MAA1B5J,EAAKqN,kBAA2B,GAAK,IAAI4C,KAAKjQ,EAAKqN,mBAAmB6C,uBAChG,cAACvG,EAAA,EAAD,CAAWC,MAAM,QAAjB,SAA0B5J,EAAKoQ,eAAiB,SAAU,OAXrDpQ,EAAKE,iBAkBlC,cAAC+J,GAAA,EAAD,CACIjG,KAAM7C,KAAKnC,MAAMgF,KACjBE,QAAS/C,KAAK6E,YACd,kBAAgB,oBAChB,mBAAiB,0BAJrB,SAMI,eAAC,IAAD,CAAKjD,GAAIuC,GAAOxC,UAAU,OAEtB6F,YAAU,EACVC,aAAa,MAHjB,UAII,gCACI,eAACjG,EAAA,EAAD,WAAY,cAACqL,GAAA,EAAD,IAAZ,4BACA,uBACA,cAAC5E,EAAA,EAAD,CACIF,MAAM,gBACNtG,QAAQ,SACRnD,KAAK,eACLyB,SAAUC,KAAKsG,mBAElB,OACD,cAAC2B,EAAA,EAAD,CACIF,MAAM,WACNtG,QAAQ,SACRnD,KAAK,WACLyB,SAAUC,KAAKsG,sBAGvB,uBACA,gCAEI,cAAC2B,EAAA,EAAD,CACIlJ,GAAG,cACHgJ,MAAM,YACNtG,QAAQ,SACRnD,KAAK,YACLyB,SAAUC,KAAKsG,mBAElB,OACD,cAAC2B,EAAA,EAAD,CACIF,MAAM,eACNtG,QAAQ,SACRnD,KAAK,eACLyB,SAAUC,KAAKsG,sBAIvB,uBACA,gCAEK,OACD,cAAC2B,EAAA,EAAD,CACIlJ,GAAG,aACHgJ,MAAM,OACNtG,QAAQ,SACRnD,KAAK,WACLyB,SAAUC,KAAKsG,iBACf0C,WAAY,CACRC,eACI,cAACC,EAAA,EAAD,CAAgB/H,SAAS,QAAzB,kBAMX,OACD,cAAC8G,EAAA,EAAD,CACIlJ,GAAG,aACHgJ,MAAM,WACNtG,QAAQ,SACRnD,KAAK,WACLyB,SAAUC,KAAKsG,iBACfxG,KAAK,SACLkJ,WAAY,CACRC,eACI,cAACC,EAAA,EAAD,CAAgB/H,SAAS,QAAzB,qBAOhB,uBACA,eAAC,SAAD,CAAQrB,KAAK,SAASuC,MAAM,UAAUpC,QAASD,KAAKgG,KAApD,kBAA+D,cAACoD,GAAA,EAAD,YAGvE,cAACN,GAAA,EAAD,CACIjG,KAAM7C,KAAKnC,MAAMmH,WACjBjC,QAAS/C,KAAK6E,YACd,kBAAgB,oBAChB,mBAAiB,0BAJrB,SAMI,eAAC,IAAD,CAAKjD,GAAIuC,GAAOxC,UAAU,OAEtB6F,YAAU,EACVC,aAAa,MAHjB,UAII,gCACI,eAACjG,EAAA,EAAD,WAAY,cAACqL,GAAA,EAAD,IAAZ,4BACA,uBACA,cAAC5E,EAAA,EAAD,CACIF,MAAM,gBACNtG,QAAQ,SACRnD,KAAK,eACLyB,SAAUC,KAAKsG,iBACf/H,MAAOyB,KAAKnC,MAAMC,KAAKmP,eAE1B,OACD,cAAChF,EAAA,EAAD,CACIF,MAAM,WACNtG,QAAQ,SACRnD,KAAK,WACLyB,SAAUC,KAAKsG,iBACf/H,MAAOyB,KAAKnC,MAAMC,KAAKyQ,cAG/B,uBACA,gCAEI,cAACtG,EAAA,EAAD,CACIlJ,GAAG,cACHgJ,MAAM,YACNtG,QAAQ,SACRnD,KAAK,YACLyB,SAAUC,KAAKsG,iBACf/H,MAAOyB,KAAKnC,MAAMC,KAAK0Q,YAE1B,OACD,cAACvG,EAAA,EAAD,CACIF,MAAM,eACNtG,QAAQ,SACRnD,KAAK,eACLyB,SAAUC,KAAKsG,iBACf/H,MAAOyB,KAAKnC,MAAMC,KAAK2Q,kBAG/B,uBACA,gCAEK,OACD,cAACxG,EAAA,EAAD,CACIlJ,GAAG,aACHgJ,MAAM,OACNtG,QAAQ,SACRnD,KAAK,WACLyB,SAAUC,KAAKsG,iBACf/H,MAAOyB,KAAKnC,MAAMC,KAAK4Q,SACvB1F,WAAY,CACRC,eACI,cAACC,EAAA,EAAD,CAAgB/H,SAAS,QAAzB,kBAMX,OACD,cAAC8G,EAAA,EAAD,CACIlJ,GAAG,aACHgJ,MAAM,WACNtG,QAAQ,SACRnD,KAAK,WACLC,MAAOyB,KAAKnC,MAAMC,KAAK6Q,SACvB5O,SAAUC,KAAKsG,iBACfxG,KAAK,SACLkJ,WAAY,CACRC,eACI,cAACC,EAAA,EAAD,CAAgB/H,SAAS,QAAzB,qBAOhB,uBACA,eAAC,SAAD,CAAQrB,KAAK,SAASuC,MAAM,UAAUpC,QAASD,KAAKmG,OAApD,kBAAiE,cAACiD,GAAA,EAAD,OAChE,eACD,cAAC,SAAD,CAAQtJ,KAAK,SAASuC,MAAM,SAASpC,QAASD,KAAK+E,kBAAnD,iC,GAlZJ7E,IAAMC,WA4ZX0O,MCnbAK,OAff,WACI,OACI,cAAC,IAAD,UACI,eAAC,IAAD,WACI,cAAC,IAAD,CAAOC,OAAK,EAACnQ,KAAK,IAAIoQ,QAAS,cAAC,EAAD,MAC/B,cAAC,IAAD,CAAOD,OAAK,EAACnQ,KAAK,QAAQoQ,QAAS,cAAC,GAAD,MACnC,cAAC,IAAD,CAAOD,OAAK,EAACnQ,KAAK,aAAaoQ,QAAS,cAAC,GAAD,MACxC,cAAC,IAAD,CAAOD,OAAK,EAACnQ,KAAK,eAAeoQ,QAAS,cAAC,GAAD,MAC1C,cAAC,IAAD,CAAOD,OAAK,EAACnQ,KAAK,YAAYoQ,QAAS,cAAC,GAAD,MACvC,cAAC,IAAD,CAAOD,OAAK,EAACnQ,KAAK,SAASoQ,QAAS,cAAC,GAAD,YCd9CC,GAAcC,SAASC,eAAe,QAC5CC,IAASC,OACP,cAAC,aAAD,UACE,cAAC,GAAD,MAEFJ,M","file":"static/js/main.701eb98a.chunk.js","sourcesContent":["import React from \"react\";\nimport '../../css/Login.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport axios from 'axios';\nimport Cookies from \"universal-cookie/es6\";\n\nconst baseUrl = \"http://localhost:8080/api/auth\";\nconst cookies = new Cookies();\nclass Login extends React.Component{\n\n    state = {\n        form:{\n            username: '',\n            password: ''\n        }\n    }\n\n    handleChange = async e => {\n        await this.setState({\n            form:{\n                ...this.state.form,\n                [e.target.name]: e.target.value\n            }\n        });\n    }\n\n    login = async() =>{\n        await axios.post(baseUrl+ \"/signin\", this.state.form)\n        .then(response => {\n          return response.data\n        })\n        .then(response =>{\n            if(response != null){\n                cookies.set('id', response.id, {path: \"/\"});\n                cookies.set('username', response.username, {path: \"/\"});\n                cookies.set('email', response.email, {path: \"/\"});\n                cookies.set('roles', response.roles, {path: \"/\"});\n                cookies.set('token', response.jwt, {path: \"/\"});\n                window.location.href = \"./equipment\";\n            }else{\n                alert('El usuario o la contraseña no son cocrrectos');\n            }\n        })\n        .catch(error=>{\n            alert('El usuario o la contraseña no son cocrrectos');\n            console.log(error);\n        });\n    }\n\n    componentDidMount(){\n        if(cookies.get('token')){\n            window.location.href = \"./menu\";\n        }\n    }\n\n    render(){\n        return(\n            <div className= \"containerPrincipal\">\n                <div className= \"containerSecundario\">\n                    <div className = \"form-group\">\n                        <label>User:</label>\n                        <br/>\n                        <input type=\"text\" \n                               className= \"form-control\"\n                               name=\"username\"\n                               onChange={this.handleChange}\n                        />\n                        <br/>\n                        <label>Password:</label>\n                        <input \n                            type= \"password\"\n                            className = \"form-control\"\n                            name=\"password\"\n                            onChange={this.handleChange}\n                        />\n                        <br/>\n                        <button className=\"btn btn-primary\" onClick={() => this.login()}>Login</button>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Login;","import React, {Component} from 'react';\nimport Cookies from \"universal-cookie/es6\";\nimport AppBar from '@mui/material/AppBar';\nimport Box from '@mui/material/Box';\nimport Toolbar from '@mui/material/Toolbar';\nimport IconButton from '@mui/material/IconButton';\nimport Typography from '@mui/material/Typography';\nimport { Menu } from '@mui/material';\nimport Container from '@mui/material/Container';\nimport Avatar from '@mui/material/Avatar';\nimport Button from '@mui/material/Button';\nimport { Link } from '@mui/material';\nimport Tooltip from '@mui/material/Tooltip';\nimport MenuItem from '@mui/material/MenuItem';\n\nconst cookies = new Cookies();\n\nconst links = [{name: 'Equipment', path: '/equipment'}, {name: 'Purchase Order', path: '/requisition'}, {name: 'Entry', path: '/entry'}, {name:'User', path:'/user'}, {name:'Location', path:'/location'}, {name: 'Reports', path:'/path'}, {name:'Graph', path:'/graphs'}];\nconst settings = ['Profile', 'Account', 'Logout'];\n\n\nconst MenuNav =() =>{\n\n    const [anchorElNav, setAnchorElNav] = React.useState(null);\n    const [anchorElUser, setAnchorElUser] = React.useState(null);\n    const [shoWButtonUser, setShowButtonUser] = React.useState(false);\n  \n    const handleOpenNavMenu = (event) => {\n      setAnchorElNav(event.currentTarget);\n    };\n    const handleOpenUserMenu = (event) => {\n      setAnchorElUser(event.currentTarget);\n    };\n  \n    const handleCloseNavMenu = () => {\n      setAnchorElNav(null);\n    };\n  \n    const handleCloseUserMenu = (event) => {\n      setAnchorElUser(null);\n      if(event.currentTarget.innerText == \"Logout\"){\n            cookies.remove('id', {path: \"/\"});\n            cookies.remove('roles', {path:\"/\"});\n            cookies.remove('token', {path:\"/\"});\n            cookies.remove('username', {path:\"/\"});\n            window.location.href='./';\n      }\n        \n    };\n    \n    \n    return(\n            <AppBar position=\"static\">\n            <Container maxWidth=\"xl\">\n              <Toolbar disableGutters>\n                <Typography\n                  variant=\"h6\"\n                  noWrap\n                  component=\"div\"\n                  sx={{ mr: 2, display: { xs: 'none', md: 'flex' } }}\n                >\n                  LOGISTIC SMART\n                </Typography>\n      \n                <Box sx={{ flexGrow: 1, display: { xs: 'flex', md: 'none' } }}>\n                  <IconButton\n                    size=\"large\"\n                    aria-label=\"account of current user\"\n                    aria-controls=\"menu-appbar\"\n                    aria-haspopup=\"true\"\n                    onClick={handleOpenNavMenu}\n                    color=\"inherit\"\n                  >\n                  </IconButton>\n                  <Menu\n                    id=\"menu-appbar\"\n                    anchorEl={anchorElNav}\n                    anchorOrigin={{\n                      vertical: 'bottom',\n                      horizontal: 'left',\n                    }}\n                    keepMounted\n                    transformOrigin={{\n                      vertical: 'top',\n                      horizontal: 'left',\n                    }}\n                    open={Boolean(anchorElNav)}\n                    onClose={handleCloseNavMenu}\n                    sx={{\n                      display: { xs: 'block', md: 'none' },\n                    }}\n                  >\n                    {links.map((page) => (\n                      <MenuItem key={page} onClick={handleCloseNavMenu}>\n                        <Typography textAlign=\"center\">{page.name}</Typography>\n                      </MenuItem>\n                    ))}\n                  </Menu>\n                </Box>\n                <Typography\n                  variant=\"h6\"\n                  noWrap\n                  component=\"div\"\n                  sx={{ flexGrow: 1, display: { xs: 'flex', md: 'none' } }}\n                >\n                  LOGISTIC SMART\n                </Typography>\n                <Box sx={{ flexGrow: 1, display: { xs: 'none', md: 'flex' } }}>\n                  {links.map((page) => (\n                      \n                        <div>\n                            {page.name == 'User' || page.name == 'Invoice' ? (cookies.get('roles').map((rol) => rol ) == 'ADMINISTRADOR'? \n                            \n                            <Button\n                                href={page.path}\n                                sx={{ my: 2, color: 'white', display: 'block' }}\n                                > {page.name} </Button>\n\n                            : \"\"\n                            )\n                             : <Button\n                                href={page.path}\n                                sx={{ my: 2, color: 'white', display: 'block' }}\n                                > {page.name} </Button>}\n                            \n                        </div>\n                        )\n                    \n                  )}\n                </Box>\n                <Box sx={{ flexGrow: 0 }}>\n                  <Tooltip title=\"Open settings\">\n                    <IconButton onClick={handleOpenUserMenu} sx={{ p: 0 }}>\n                    <Typography\n                  variant=\"h6\"\n                  noWrap\n                  component=\"div\"\n                  sx={{ color: 'white', mr: 2, display: { xs: 'none', md: 'flex' } }}\n                >\n                  {cookies.get('username') }\n                </Typography>\n                    <Avatar alt=\"Remy Sharp\" src=\"/static/images/avatar/1.jpg\" />\n                    </IconButton>\n                  </Tooltip>\n                  <Menu\n                    sx={{ mt: '45px' }}\n                    id=\"menu-appbar\"\n                    anchorEl={anchorElUser}\n                    anchorOrigin={{\n                      vertical: 'top',\n                      horizontal: 'right',\n                    }}\n                    keepMounted\n                    transformOrigin={{\n                      vertical: 'top',\n                      horizontal: 'right',\n                    }}\n                    open={Boolean(anchorElUser)}\n                    onClose={handleCloseUserMenu}\n                  >\n                    {settings.map((setting) => (\n                      <MenuItem key={setting} onClick={handleCloseUserMenu}>\n                        <Typography textAlign=\"center\">{setting}</Typography>\n                      </MenuItem>\n                    ))}\n                  </Menu>\n                </Box>\n              </Toolbar>\n            </Container>\n          </AppBar> \n    )\n}\n\nexport default MenuNav;","import React from \"react\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport Cookies from \"universal-cookie/es6\";\nimport MenuNav from \"../menu/MenuNav\";\nimport { Box } from \"@mui/system\";\nimport {  TextField } from \"@mui/material\";\nimport { Button } from \"reactstrap\";\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell from '@mui/material/TableCell';\nimport TableContainer from '@mui/material/TableContainer';\nimport TableHead from '@mui/material/TableHead';\nimport TableRow from '@mui/material/TableRow';\nimport { InputAdornment } from \"@mui/material\";\nimport Paper from '@mui/material/Paper';\nimport { Container } from \"reactstrap\";\nimport { AccountCircle } from \"@material-ui/icons\";\nimport Typography from '@mui/material/Typography';\nimport { Select } from \"@mui/material\";\nimport { FormControl } from \"@mui/material\";\nimport { MenuItem } from \"@mui/material\";\nimport Modal from '@mui/material/Modal';\nimport axios from 'axios';\nimport { Alert } from \"@mui/material\";\nimport CheckIcon from '@mui/icons-material/Check';\nimport { AddCircleRounded } from \"@material-ui/icons\";\nimport { Snackbar } from \"@material-ui/core\";\nimport PersonSearchIcon from '@mui/icons-material/PersonSearch';\nimport { SaveOutlined } from \"@material-ui/icons\";\nimport { WarningOutlined } from \"@material-ui/icons\";\nimport { InfoOutlined } from \"@material-ui/icons\";\nimport { IconButton } from \"@mui/material\";\nimport { Delete } from \"@mui/icons-material\";\nimport { Edit } from \"@material-ui/icons\";\n\nvar DatePicker = require(\"reactstrap-date-picker\")\nconst data = [];\nconst dataRoles = [];\nconst documentTypeData = [{ code: 'TI', name: 'Tarjeta de identidad' }, { code: 'CC', name: 'Cédula de Ciudadanía' }, { code: 'CE', name: 'Cedula de extranjería' }, { code: 'CD', name: 'Carnet Diplomatico' }, { code: 'DE', name: 'Documento Embajada' }];\nconst cookies = new Cookies();\nconst baseUrl = \"http://localhost:8080/api/\";\nconst style = {\n    position: 'absolute',\n    top: '50%',\n    left: '50%',\n    transform: 'translate(-50%, -50%)',\n    width: 1000,\n    bgcolor: 'white',\n    border: '2px solid #000',\n    boxShadow: 24,\n    p: 3,\n    m: 2,\n};\nclass User extends React.Component {\n\n    handleClose = () => this.setState({ open: false });\n    handleOpen = () => this.setState({ open: true });\n    handleCloseUpdate = () => this.setState({ openUpdate: false });\n    handleOpenUpdate = (data) => this.setState({ openUpdate: true, form: data, id: data.id});\n    constructor() {\n        super();\n        this.state = {\n            documentTypeData: documentTypeData,\n            data: data,\n            dataRoles: dataRoles,\n            open: false,\n            openUpdate: false,\n            showAlert: false,\n            showAlertDelete: false,\n            showAlertUpdate: false,\n            id: \"\",\n            form: {\n                username: \"\",\n                email: \"\",\n                password: \"\",\n                documentNumber: \"\",\n                documentType: \"\",\n                firstName: \"\",\n                lastName: \"\",\n                birthDate: \"\",\n                position: \"\",\n                phone: \"\",\n                rol: \"\",\n\n            },\n        };\n\n        this.handleInputChange = this.handleInputChange.bind(this);\n    }\n\n    getAll = async () => {\n        await axios.get(baseUrl + \"auth/all\")\n            .then(response => {\n                return response.data\n            })\n            .then(response => {\n                var users = this.state.data\n                users = response\n                this.setState({ data: users });\n            })\n            .catch(error => {\n                console.log(error);\n            });\n    }\n\n\n    search = async () => {\n        await axios.get(baseUrl + \"auth/getByDocument\",{params:{documentType: this.state.form.documentType, documentNumber: this.state.form.documentNumber}})\n            .then(response => {\n                return response.data\n            })\n            .then(response => {\n                var users = this.state.data\n                users = response\n                this.setState({ data: users });\n            })\n            .catch(error => {\n                console.log(error);\n            });\n    }\n\n    getRoles = async () => {\n        await axios.get(baseUrl + \"rol/all\", {\n            headers: { Authorization: 'Bearer ' + cookies.get('token') }\n        }).then(response => {\n            return response.data;\n        }).then(response => {\n            var rols = this.state.dataRoles\n            rols = response\n            this.setState({ dataRoles: rols})\n        }).catch(error => {\n            console.log(error);\n        });;\n    }\n\n    delete = async (dato) => {\n        var opcion = window.confirm(\"You want to delete the user: \"+dato.username);\n        if(opcion){\n            await axios.delete(baseUrl + \"auth/delete/\" + dato.id)\n            .then(response => {\n                return response.data\n            }).then(response => {\n                var users = this.state.data\n                users = response\n                this.setState({ data: users, showAlertDelete: true});\n            }).catch(error => {\n                console.log(error);\n            });\n        }\n        \n    }\n\n    save = async (event) => {\n        event.preventDefault();\n        await axios.post(baseUrl + \"auth/signup\", this.state.form)\n            .then(response => {\n                return response.data;\n            }).then(response => {\n                this.getAll();\n                this.setState({showAlert: true, open: false })\n            }).catch(error => {\n                console.log(error);\n            });;\n    }\n\n    update = async (event) => {\n        event.preventDefault();\n        await axios.put(baseUrl + \"auth/update/\"+this.state.id, this.state.form)\n            .then(response => {\n                return response.data;\n            }).then(response => {\n                this.getAll();\n                this.setState({showAlertUpdate: true, openUpdate: false })\n            }).catch(error => {\n                console.log(error);\n            });;\n    }\n\n    handleInputChange(event) {\n        const target = event.target;\n        const value = target.value;\n        const name = target.name;\n\n        this.setState({\n            [name]: value\n        });\n    }\n\n    handleChangeForm = async e => {\n        await this.setState({\n            form: {\n                ...this.state.form,\n                [e.target.name]: e.target.value\n            }\n        });\n    }\n\n    handleClick = async e => {\n        this.setState({ showAlert: !this.state.showAlert });\n    }\n    \n    handleClickAlertDelete = async e => {\n        this.setState({ showAlertDelete: !this.state.showAlertDelete });\n    }\n\n    handleClickAlertUpdate = async e => {\n        this.setState({ showAlertUpdate: !this.state.showAlertUpdate });\n    }\n\n    componentDidMount = async () => {\n        await this.getAll();\n        await this.getRoles();\n        if (!cookies.get('token')) {\n            window.location.href = \"./\";\n        }\n    }\n\n    render() {\n        return (\n            <div>\n                <MenuNav />\n                <Container>\n                    <br />\n                    <h2>USER</h2>\n                    <br />\n                    <Snackbar open={this.state.showAlert}>\n                        <Alert icon={<CheckIcon fontSize=\"inherit\" />} severity=\"success\" onClose={this.handleClick}>\n                            User was successfully created\n                        </Alert>\n                    </Snackbar>\n                    <Snackbar open={this.state.showAlertDelete}>\n                        <Alert icon={<WarningOutlined></WarningOutlined>} severity=\"warning\" onClose={this.handleClickAlertDelete}>\n                            User was successfully removed\n                        </Alert>\n                    </Snackbar>\n                    <Snackbar open={this.state.showAlertUpdate}>\n                        <Alert icon={<InfoOutlined></InfoOutlined>} severity=\"info\" onClose={this.handleClickAlertUpdate}>\n                            User was successfully updated\n                        </Alert>\n                    </Snackbar>\n                    <Box component=\"form\"\n                        sx={{\n                            '& .MuiTextField-root': { m: 1, width: '25ch' },\n                        }}\n                        noValidate\n                        autoComplete=\"off\">\n                        <div>\n                           \n\n                            <FormControl variant=\"standard\" sx={{ m: 1, minWidth: 170 }}>\n                                <InputLabel id=\"documentType\">Document Type</InputLabel>\n                                <Select\n                                    labelId=\"documentType\"\n                                    id=\"documentType\"\n                                    value={this.state.form.documentType}\n                                    onChange={this.handleChangeForm}\n                                    label=\"document Type\"\n                                    name=\"documentType\"\n                                    variant=\"standard\"\n                                >\n                                    <MenuItem value=\"\">\n                                        <em>None</em>\n                                    </MenuItem>\n                                    {this.state.documentTypeData.map((dt) => (\n                                        <MenuItem value={dt.code}>{dt.name}</MenuItem>\n                                    )\n                                    )}\n                                </Select>\n                            </FormControl>\n                            <TextField\n                                id=\"standard-required\"\n                                label=\"Document id\"\n                                variant=\"standard\"\n                                name=\"documentNumber\"\n                                onChange={this.handleChangeForm}\n                            />\n                            {\"  \"}\n                            <Button color=\"primary\" onClick={this.search}><PersonSearchIcon></PersonSearchIcon></Button>\n\n                        </div>\n\n                    </Box>\n                    <br />\n                    <br />\n                    <Button color=\"success\" onClick={this.handleOpen} ><AddCircleRounded></AddCircleRounded></Button>\n                    <br />\n                    <br />\n                    <TableContainer component={Paper}>\n                        <Table sx={{ minWidth: 650 }} aria-label=\"simple table\">\n                            <TableHead>\n                                <TableRow>\n                                    <TableCell>Username</TableCell>\n                                    <TableCell align=\"right\">Document Type</TableCell>\n                                    <TableCell align=\"right\">Document Id</TableCell>\n                                    <TableCell align=\"right\">Firstname</TableCell>\n                                    <TableCell align=\"right\">Lastname</TableCell>\n                                    <TableCell align=\"right\">Email</TableCell>\n                                    <TableCell align=\"right\">Phone</TableCell>\n                                    <TableCell align=\"right\">Position</TableCell>\n                                    <TableCell align=\"right\"></TableCell>\n                                </TableRow>\n                            </TableHead>\n                            <TableBody>\n                                {this.state.data.map((data) => (\n                                    <TableRow\n                                        key={data.id}\n                                        sx={{ '&:last-child td, &:last-child th': { border: 0 } }}\n                                    >\n                                        <TableCell component=\"th\" scope=\"data\">\n                                            {data.username}\n                                        </TableCell>\n                                        <TableCell align=\"right\">{data.documentType}</TableCell>\n                                        <TableCell align=\"right\">{data.documentNumber}</TableCell>\n                                        <TableCell align=\"right\">{data.firstName}</TableCell>\n                                        <TableCell align=\"right\">{data.lastName}</TableCell>\n                                        <TableCell align=\"right\">{data.email}</TableCell>\n                                        <TableCell align=\"right\">{data.phone}</TableCell>\n                                        <TableCell align=\"right\">{data.position}</TableCell>\n                                        <TableCell align=\"right\">\n                                            <IconButton color=\"primary\" onClick={() => this.handleOpenUpdate(data)}><Edit/></IconButton>{\" \"}\n                                            <IconButton color=\"error\" onClick={() => this.delete(data)}><Delete/></IconButton></TableCell>\n                                    </TableRow>\n                                ))}\n                            </TableBody>\n                        </Table>\n                    </TableContainer>\n                </Container>\n                <Modal\n                    open={this.state.open}\n                    onClose={this.handleClose}\n                    aria-labelledby=\"modal-modal-title\"\n                    aria-describedby=\"modal-modal-description\"\n                >\n                    <Box sx={style} component=\"form\"\n\n                        noValidate\n                        autoComplete=\"off\">\n                        <div>\n                            <Typography>USER REGISTRATION <AccountCircle /></Typography>\n                            <br />\n                            <TextField\n                                label=\"Document Id\"\n                                variant=\"filled\"\n                                name=\"documentNumber\"\n                                onChange={this.handleChangeForm}\n                            />\n                            {\"    \"}\n                            <FormControl variant=\"standard\" sx={{ m: 0, minWidth: 170 }}>\n                                <InputLabel id=\"documentType\">Document Type</InputLabel>\n                                <Select\n                                    labelId=\"documentType\"\n                                    id=\"documentType\"\n                                    value={this.state.form.documentType}\n                                    onChange={this.handleChangeForm}\n                                    label=\"document Type\"\n                                    name=\"documentType\"\n                                    variant=\"filled\"\n                                >\n                                    <MenuItem value=\"\">\n                                        <em>None</em>\n                                    </MenuItem>\n                                    {this.state.documentTypeData.map((dt) => (\n                                        <MenuItem value={dt.code}>{dt.name}</MenuItem>\n                                    )\n                                    )}\n                                </Select>\n                            </FormControl>\n                        </div>\n                        <br />\n                        <div>\n                            <TextField\n                                label=\"Firstname\"\n                                variant=\"filled\"\n                                name=\"firstName\"\n                                onChange={this.handleChangeForm}\n                            />\n                            {\"    \"}\n                            <TextField\n                                id=\"standard-required\"\n                                label=\"Lastname\"\n                                variant=\"filled\"\n                                name=\"lastName\"\n                                onChange={this.handleChangeForm}\n                            />\n                            {\"    \"}\n                            <TextField\n                                id=\"phone\"\n                                label=\"Phone\"\n                                variant=\"filled\"\n                                name=\"phone\"\n                                onChange={this.handleChangeForm}\n                            />\n                        </div>\n                        <br />\n                        <div>\n                            <TextField\n                                id=\"username\"\n                                label=\"Username\"\n                                variant=\"filled\"\n                                name=\"username\"\n                                onChange={this.handleChangeForm}\n                                InputProps={{\n                                    startAdornment: (\n                                        <InputAdornment position=\"start\">\n\n                                            <AccountCircle />\n                                        </InputAdornment>\n                                    ),\n                                }}\n                            />\n                            {\"    \"}\n                            <TextField\n                                id=\"email\"\n                                label=\"Email\"\n                                variant=\"filled\"\n                                name=\"email\"\n                                onChange={this.handleChangeForm}\n                                InputProps={{\n                                    startAdornment: (\n                                        <InputAdornment position=\"start\">\n                                            @\n                                        </InputAdornment>\n                                    ),\n                                }}\n                            />\n                            {\"    \"}\n                            <TextField\n                                id=\"password\"\n                                label=\"password\"\n                                variant=\"filled\"\n                                type=\"password\"\n                                name=\"password\"\n                                onChange={this.handleChangeForm}\n                            />\n                        </div>\n                        <br />\n                        <div>\n                            <TextField\n                                id=\"position\"\n                                label=\"Position\"\n                                variant=\"filled\"\n                                name=\"position\"\n                                onChange={this.handleChangeForm}\n                            />\n                            {\"    \"}\n                            <FormControl variant=\"standard\" sx={{ m: 0, minWidth: 120 }}>\n                                <InputLabel id=\"demo-simple-select-standard-label\">Rol</InputLabel>\n                                <Select\n                                    labelId=\"rol\"\n                                    id=\"rol\"\n                                    value={this.state.form.rol}\n                                    onChange={this.handleChangeForm}\n                                    label=\"Rol\"\n                                    name=\"rol\"\n                                    variant=\"filled\"\n                                >\n                                    <MenuItem value=\"\">\n                                        <em>None</em>\n                                    </MenuItem>\n                                    {this.state.dataRoles.map((rol) => (\n                                        <MenuItem value={rol.code}>{rol.rolName}</MenuItem>\n                                    )\n                                    )}\n                                </Select>\n                            </FormControl>\n                        </div>\n                        <br />\n                        <Button type=\"button\" color=\"success\" onClick={this.save}>save <SaveOutlined></SaveOutlined></Button>\n                    </Box>\n                </Modal>\n\n\n                <Modal\n                    open={this.state.openUpdate}\n                    onClose={this.handleCloseUpdate}\n                    aria-labelledby=\"modal-modal-title\"\n                    aria-describedby=\"modal-modal-description\"\n                >\n                    <Box sx={style} component=\"form\"\n\n                        noValidate\n                        autoComplete=\"off\">\n                        <div>\n                            <Typography>USER UPDATE <AccountCircle /></Typography>\n                            <br />\n                            <TextField\n                                label=\"Document Id\"\n                                variant=\"filled\"\n                                name=\"documentNumber\"\n                                onChange={this.handleChangeForm}\n                                value={this.state.form.documentNumber}\n                            />\n                            {\"    \"}\n                            <FormControl variant=\"standard\" sx={{ m: 0, minWidth: 170 }}>\n                                <InputLabel id=\"documentType\">Document Type</InputLabel>\n                                <Select\n                                    labelId=\"documentType\"\n                                    id=\"documentType\"\n                                    value={this.state.form.documentType}\n                                    onChange={this.handleChangeForm}\n                                    label=\"document Type\"\n                                    name=\"documentType\"\n                                    variant=\"filled\"\n                                >\n                                    <MenuItem value=\"\">\n                                        <em>None</em>\n                                    </MenuItem>\n                                    {this.state.documentTypeData.map((dt) => (\n                                        <MenuItem value={dt.code}>{dt.name}</MenuItem>\n                                    )\n                                    )}\n                                </Select>\n                            </FormControl>\n                        </div>\n                        <br />\n                        <div>\n                            <TextField\n                                label=\"Firstname\"\n                                variant=\"filled\"\n                                name=\"firstName\"\n                                onChange={this.handleChangeForm}\n                                value={this.state.form.firstName}\n                            />\n                            {\"    \"}\n                            <TextField\n                                id=\"standard-required\"\n                                label=\"Lastname\"\n                                variant=\"filled\"\n                                name=\"lastName\"\n                                onChange={this.handleChangeForm}\n                                value={this.state.form.lastName}\n                            />\n                            {\"    \"}\n                            <TextField\n                                id=\"phone\"\n                                label=\"Phone\"\n                                variant=\"filled\"\n                                name=\"phone\"\n                                onChange={this.handleChangeForm}\n                                value={this.state.form.phone}\n                            />\n                        </div>\n                        <br />\n                        <div>\n                            <TextField\n                                disabled\n                                id=\"username\"\n                                label=\"Username\"\n                                variant=\"filled\"\n                                name=\"username\"\n                                onChange={this.handleChangeForm}\n                                InputProps={{\n                                    startAdornment: (\n                                        <InputAdornment position=\"start\">\n\n                                            <AccountCircle />\n                                        </InputAdornment>\n                                    ),\n                                }}\n                                value={this.state.form.username}\n                            />\n                            {\"    \"}\n                            <TextField\n                                id=\"email\"\n                                label=\"Email\"\n                                variant=\"filled\"\n                                name=\"email\"\n                                disabled\n                                onChange={this.handleChangeForm}\n                                InputProps={{\n                                    startAdornment: (\n                                        <InputAdornment position=\"start\">\n                                            @\n                                        </InputAdornment>\n                                    ),\n                                }}\n                                value={this.state.form.email}\n                            />\n                            {\"    \"}\n                            <TextField\n                                id=\"password\"\n                                label=\"password\"\n                                variant=\"filled\"\n                                type=\"password\"\n                                name=\"password\"\n                                onChange={this.handleChangeForm}\n                                value={this.state.form.password}\n                            />\n                        </div>\n                        <br />\n                        <div>\n                            <TextField\n                                id=\"position\"\n                                label=\"Position\"\n                                variant=\"filled\"\n                                name=\"position\"\n                                onChange={this.handleChangeForm}\n                                value={this.state.form.position}\n                            />\n                            {\"    \"}\n                            <FormControl variant=\"standard\" sx={{ m: 0, minWidth: 120 }}>\n                                <InputLabel id=\"demo-simple-select-standard-label\">Rol</InputLabel>\n                                <Select\n                                    labelId=\"rol\"\n                                    id=\"rol\"\n                                    value={this.state.form.rol}\n                                    onChange={this.handleChangeForm}\n                                    label=\"Rol\"\n                                    name=\"rol\"\n                                    variant=\"filled\"\n                                >\n                                    <MenuItem value=\"\">\n                                        <em>None</em>\n                                    </MenuItem>\n                                    {this.state.dataRoles.map((rol) => (\n                                        <MenuItem value={rol.code}>{rol.rolName}</MenuItem>\n                                    )\n                                    )}\n                                </Select>\n                            </FormControl>\n                        </div>\n                        <br />\n                        <Button type=\"button\" color=\"success\" onClick={this.update}>save <SaveOutlined></SaveOutlined></Button>\n                    </Box>\n                </Modal>\n\n            </div>\n        );\n    }\n\n}\n\nexport default User;","import React from \"react\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport Cookies from \"universal-cookie/es6\";\nimport MenuNav from \"../menu/MenuNav\";\nimport { Box } from \"@mui/system\";\nimport { TextField } from \"@mui/material\";\nimport { Button } from \"reactstrap\";\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell from '@mui/material/TableCell';\nimport TableContainer from '@mui/material/TableContainer';\nimport TableHead from '@mui/material/TableHead';\nimport TableRow from '@mui/material/TableRow';\nimport { InputAdornment } from \"@mui/material\";\nimport Paper from '@mui/material/Paper';\nimport { Container } from \"reactstrap\";\nimport Typography from '@mui/material/Typography';\nimport { InputLabel } from \"@mui/material\";\nimport { Select } from \"@mui/material\";\nimport { FormControl } from \"@mui/material\";\nimport { MenuItem } from \"@mui/material\";\nimport Modal from '@mui/material/Modal';\nimport axios from 'axios';\nimport { Alert } from \"@mui/material\";\nimport CheckIcon from '@mui/icons-material/Check';\nimport { AddCircleRounded } from \"@material-ui/icons\";\nimport { Snackbar } from \"@material-ui/core\";\nimport PersonSearchIcon from '@mui/icons-material/PersonSearch';\nimport { Edit } from \"@material-ui/icons\";\nimport { SaveOutlined } from \"@material-ui/icons\";\nimport { WarningOutlined } from \"@material-ui/icons\";\nimport { InfoOutlined } from \"@material-ui/icons\";\nimport { PrecisionManufacturing } from \"@mui/icons-material\";\nimport { Search } from \"@material-ui/icons\";\nimport InputIcon from '@mui/icons-material/Input';\nimport { IconButton } from \"@mui/material\";\nimport { Delete } from \"@mui/icons-material\";\nimport { Output } from \"@mui/icons-material\";\nimport { TablePagination } from \"@mui/material\";\n\nconst data = [];\nconst dataRoles = [];\nconst categoryData = [{ code: 'CATEGORY A', name: 'categoria A' }, { code: 'CATEGORY B', name: 'categoria B' }];\nconst cookies = new Cookies();\nconst baseUrl = \"http://localhost:8080/api/equipment\";\nconst baseInvoice = \"http://localhost:8080/api/invoice\";\nconst baseLocation = \"http://localhost:8080/api/location\";\nconst baseEntry = \"http://localhost:8080/api/entrada\";\nconst style = {\n    position: 'absolute',\n    top: '50%',\n    left: '50%',\n    transform: 'translate(-50%, -50%)',\n    width: 600,\n    bgcolor: 'white',\n    border: '2px solid #000',\n    boxShadow: 24,\n    p: 8,\n    m: 2,\n};\n\nconst styleModalEntry = {\n    position: 'absolute',\n    top: '50%',\n    left: '50%',\n    transform: 'translate(-50%, -50%)',\n    width: 500,\n    bgcolor: 'white',\n    border: '2px solid #000',\n    boxShadow: 24,\n    p: 7,\n    m: 2,\n};\nclass Equipment extends React.Component {\n\n    handleClose = () => this.setState({ open: false });\n    handleOpen = () => this.setState({ open: true });\n    handleCloseUpdate = () => this.setState({ openUpdate: false });\n    handleOpenUpdate = (data) => this.setState({ openUpdate: true, form: data, id: data.id });\n\n    constructor() {\n        super();\n        this.state = {\n            categoryData: categoryData,\n            openModalEntry: false,\n            openModalMovement: false,\n            data: data,\n            page: 0,\n            rowsPerPage: 5,\n            dataLocations: [],\n            dataRoles: dataRoles,\n            open: false,\n            entryId:\"\",\n            openUpdate: false,\n            showAlert: false,\n            showAlertDelete: false,\n            showAlertUpdate: false,\n            id: \"\",\n            form: {\n                name: \"\",\n                category: \"\",\n                netWeight: \"\",\n                grossWeight: \"\",\n                height: \"\",\n                width: \"\",\n                equipmentLong: \"\",\n                requisition: \"\",\n                invoice: {\n                    id: \"\",\n                    dateInvoice: \"\",\n                    code: \"\"\n                }\n            },\n            entry: {\n                expectedEntryDate: \"\",\n                expectedDepartureDate: \"\",\n                realEntryDate: \"\",\n                realDepartureDate: \"\",\n                location: { id: \"\" },\n                equipment: {\n                    id: \"\",\n                    requisition: \"\"\n                }\n            }\n        };\n\n        this.handleInputChange = this.handleInputChange.bind(this);\n    }\n\n    setRowsPerPage = () => this.setState({ rowsPerPage: 5 });\n\n    handleChangePage = (event, newPage) => {\n        this.setState({ page: newPage });\n    };\n\n    handleChangeRowsPerPage = (event) => {\n        this.setRowsPerPage(+event.target.value);\n        this.setState({ page: 0 });\n    };\n\n    handleCloseEntryRegistry = () => this.setState({ openModalEntry: false });\n    handleOpenEntryRegistry = async (data) => {\n        this.setState({ form: data });\n        this.setState({ entry: { ...this.state.entry, equipment: { ...this.state.entry.equipment, id: data.id } } })\n        await axios.get(baseLocation + \"/searchCapacity\", { params: { equipmentId: data.id }, headers: { Authorization: 'Bearer ' + cookies.get('token') } })\n            .then(response => {\n                return response.data\n            })\n            .then(response => {\n                var users = this.state.data\n                users = response\n                this.setState({ dataLocations: users });\n            })\n            .catch(error => {\n                console.log(error);\n            });\n\n        this.setState({ openModalEntry: true });\n    }\n    handleCloseEntryMovement = () => this.setState({ openModalMovement: false });\n    handleOpenEntryMovement = async (data) => {\n        this.setState({ form: data });\n        this.setState({ entry: { ...this.state.entry, equipment: { ...this.state.entry.equipment, id: data.id } } })\n        await axios.get(baseEntry + \"/equipment/\"+ data.id, {headers: { Authorization: 'Bearer ' + cookies.get('token') } })\n            .then(response => {\n                return response.data\n            })\n            .then(response => {\n                if(response != \"\" && response != null && response != undefined){\n                    this.setState({ entry: response });\n                    this.setState({ entryId: response.id ,entry: { ...this.state.entry, location:{...this.state.entry.location, id: response.location.id} } })\n                }\n            })\n            .catch(error => {\n                console.log(error);\n            });\n\n        await axios.get(baseLocation + \"/searchCapacity\", { params: { equipmentId: data.id }, headers: { Authorization: 'Bearer ' + cookies.get('token') } })\n            .then(response => {\n                return response.data\n            })\n            .then(response => {\n                var users = this.state.data\n                users = response\n                this.setState({ dataLocations: users });\n            })\n            .catch(error => {\n                console.log(error);\n            });\n\n        this.setState({ openModalMovement: true });\n    }\n\n    getAll = async () => {\n        await axios.get(baseUrl + \"/findAll\", {\n            headers: { Authorization: 'Bearer ' + cookies.get('token'), Cache: 'no-cache' }\n        }).then(response => {\n            return response.data\n        })\n            .then(response => {\n                var users = this.state.data\n                users = response\n                this.setState({ data: users });\n            })\n            .catch(error => {\n                console.log(error);\n            });\n    }\n\n\n    search = async () => {\n        await axios.get(baseUrl + \"/search\", { params: { name: this.state.form.name, invoiceId: this.state.form.invoice.id, category: this.state.form.category }, headers: { Authorization: 'Bearer ' + cookies.get('token') } })\n            .then(response => {\n                return response.data\n            })\n            .then(response => {\n                var users = this.state.data\n                users = response\n                this.setState({ data: users });\n            })\n            .catch(error => {\n                console.log(error);\n            });\n    }\n\n    searchInvoice = async () => {\n        await axios.get(baseInvoice + \"/searchCode\", { params: { code: this.state.form.invoice.code }, headers: { Authorization: 'Bearer ' + cookies.get('token') } })\n            .then(response => {\n                return response.data\n            })\n            .then(response => {\n                console.log(response.id);\n                this.setState({ form: { ...this.state.form, invoice: { ...this.state.form.invoice, id: response.id, dateInvoice: response.dateInvoice } } });\n            })\n            .catch(error => {\n                console.log(error);\n            });\n    }\n\n    delete = async (dato) => {\n        var opcion = window.confirm(\"You want to delete the equipment: \" + dato.name);\n        if (opcion) {\n            await axios.delete(baseUrl + \"/delete/\" + dato.id, {\n                headers: { Authorization: 'Bearer ' + cookies.get('token') }\n            })\n                .then(response => {\n                    return response.data\n                }).then(response => {\n                    var users = this.state.data\n                    users = response\n                    this.setState({ data: users, showAlertDelete: true });\n                }).catch(error => {\n                    console.log(error);\n                });\n        }\n\n    }\n\n    save = async (event) => {\n        event.preventDefault();\n        await axios.post(baseUrl + \"/save\", this.state.form, { headers: { Authorization: 'Bearer ' + cookies.get('token') } })\n            .then(response => {\n                return response.data;\n            }).then(response => {\n                this.getAll();\n                this.setState({ showAlert: true, open: false })\n            }).catch(error => {\n                console.log(error);\n            });;\n    }\n\n    update = async (event) => {\n        event.preventDefault();\n        await axios.put(baseUrl + \"/update/\" + this.state.id, this.state.form, { headers: { Authorization: 'Bearer ' + cookies.get('token') } })\n            .then(response => {\n                return response.data;\n            }).then(response => {\n                this.getAll();\n                this.setState({ showAlertUpdate: true, openUpdate: false })\n            }).catch(error => {\n                console.log(error);\n            });;\n    }\n\n    registryEntry = async (event) => {\n        event.preventDefault();\n        await axios.post(baseEntry + \"/save\", this.state.entry, { headers: { Authorization: 'Bearer ' + cookies.get('token') } })\n            .then(response => {\n                return response.data;\n            }).then(response => {\n                this.getAll();\n                this.setState({ showAlertUpdate: true, openModalEntry: false })\n            }).catch(error => {\n                console.log(error);\n            });;\n    }\n\n    getOutEntry = async (event) => {\n        event.preventDefault();\n        await axios.put(baseEntry + \"/edit/\" + this.state.entryId, this.state.entry, { headers: { Authorization: 'Bearer ' + cookies.get('token') } })\n            .then(response => {\n                return response.data;\n            }).then(response => {\n                this.getAll();\n                this.setState({ showAlertUpdate: true, openModalMovement: false })\n            }).catch(error => {\n                console.log(error);\n            });;\n    }\n\n    handleInputChange(event) {\n        const target = event.target;\n        const value = target.value;\n        const name = target.name;\n\n        this.setState({\n            [name]: value\n        });\n    }\n\n    handleChangeForm = async e => {\n        await this.setState({\n            form: {\n                ...this.state.form,\n                [e.target.name]: e.target.value\n            }\n        });\n    }\n\n    handleChangeEntry = async e => {\n        await this.setState({\n            entry: {\n                ...this.state.entry,\n                [e.target.name]: e.target.value\n            }\n        });\n    }\n\n    handleChangeEquipment = async e => {\n        await this.setState({\n            entry: {\n                ...this.state.entry,\n                equipment: {\n                    ...this.state.entry.equipment,\n                    [e.target.name]: e.target.value\n                }\n\n            }\n        });\n    }\n\n    handleChangeLocation = async e => {\n        await this.setState({\n            entry: {\n                ...this.state.entry,\n                location: {\n                    ...this.state.entry.location,\n                    [e.target.name]: e.target.value\n                }\n\n            }\n        });\n    }\n\n    handleChangeFormInvoice = async e => {\n        await this.setState({\n            form: {\n                ...this.state.form,\n                invoice: {\n                    ...this.state.form.invoice,\n                    [e.target.name]: e.target.value\n                }\n\n            }\n        });\n    }\n\n    findAlertAndSendEmail = async() =>{\n\n        await axios.get(baseEntry + \"/alert/departure\", {\n            headers: { Authorization: 'Bearer ' + cookies.get('token'), Cache: 'no-cache' }\n        }).then(response => {\n            return response.data\n        })\n            .then(response => {\n                console.log(response);\n            })\n            .catch(error => {\n                console.log(error);\n            });\n    }\n    handleClick = async e => {\n        this.setState({ showAlert: !this.state.showAlert });\n    }\n\n    handleClickAlertDelete = async e => {\n        this.setState({ showAlertDelete: !this.state.showAlertDelete });\n    }\n\n    handleClickAlertUpdate = async e => {\n        this.setState({ showAlertUpdate: !this.state.showAlertUpdate });\n    }\n\n    componentDidMount = async () => {\n        await this.findAlertAndSendEmail();\n        await this.getAll();\n        if (!cookies.get('token')) {\n            window.location.href = \"./\";\n        }\n    }\n\n    render() {\n        return (\n            <div>\n                <MenuNav />\n                <Container>\n                    <br />\n                    <h2>EQUIPMENT</h2>\n                    <br />\n                    <Snackbar open={this.state.showAlert}>\n                        <Alert icon={<CheckIcon fontSize=\"inherit\" />} severity=\"success\" onClose={this.handleClick}>\n                            Equipment was successfully created\n                        </Alert>\n                    </Snackbar>\n                    <Snackbar open={this.state.showAlertDelete}>\n                        <Alert icon={<WarningOutlined></WarningOutlined>} severity=\"warning\" onClose={this.handleClickAlertDelete}>\n                            Equipment was successfully removed\n                        </Alert>\n                    </Snackbar>\n                    <Snackbar open={this.state.showAlertUpdate}>\n                        <Alert icon={<InfoOutlined></InfoOutlined>} severity=\"info\" onClose={this.handleClickAlertUpdate}>\n                            Equipment was successfully updated\n                        </Alert>\n                    </Snackbar>\n                    <Box component=\"form\"\n                        sx={{\n                            '& .MuiTextField-root': { m: 1, width: '25ch' },\n                        }}\n                        noValidate\n                        autoComplete=\"off\">\n                        <div>\n\n\n                            <FormControl variant=\"standard\" sx={{ m: 1, minWidth: 170 }}>\n                                <InputLabel id=\"height\">Category</InputLabel>\n                                <Select\n                                    labelId=\"category\"\n                                    id=\"category\"\n                                    value={this.state.form.category}\n                                    onChange={this.handleChangeForm}\n                                    label=\"category\"\n                                    name=\"category\"\n                                    variant=\"standard\"\n                                >\n                                    <MenuItem value=\"\">\n                                        <em>None</em>\n                                    </MenuItem>\n                                    {this.state.categoryData.map((dt) => (\n                                        <MenuItem value={dt.code}>{dt.name}</MenuItem>\n                                    )\n                                    )}\n                                </Select>\n                            </FormControl>\n                            <TextField\n                                id=\"standard-required\"\n                                label=\"Name Equipment\"\n                                variant=\"standard\"\n                                name=\"name\"\n                                onChange={this.handleChangeForm}\n                            />\n                            {\"  \"}\n                            <Button color=\"primary\" onClick={this.search}><PersonSearchIcon></PersonSearchIcon></Button>\n\n                        </div>\n\n                    </Box>\n                    <br />\n                    <br />\n                    <Button color=\"success\" onClick={this.handleOpen} ><AddCircleRounded></AddCircleRounded></Button>\n                    <br />\n                    <br />\n                    <Paper sx={{ width: '100%', overflow: 'hidden' }}>\n                        <TableContainer >\n                            <Table sx={{ minWidth: 650 }} aria-label=\"simple table\">\n                                <TableHead>\n                                    <TableRow>\n                                        <TableCell>name</TableCell>\n                                        <TableCell align=\"right\">Category</TableCell>\n                                        <TableCell align=\"right\">Height (m³)</TableCell>\n                                        <TableCell align=\"right\">Gross Weight</TableCell>\n                                        <TableCell align=\"right\">Width (m³)</TableCell>\n                                        <TableCell align=\"right\">Long (m³)</TableCell>\n                                        <TableCell align=\"right\">Status</TableCell>\n                                        <TableCell align=\"right\">Invoice</TableCell>\n                                        <TableCell align=\"right\">Purchase Order</TableCell>\n                                        <TableCell align=\"right\"></TableCell>\n                                    </TableRow>\n                                </TableHead>\n                                <TableBody>\n                                    {this.state.data.slice(this.state.page * this.state.rowsPerPage, this.state.page * this.state.rowsPerPage + this.state.rowsPerPage).map((data) => (\n                                        <TableRow\n                                            key={data.id}\n                                            sx={{ '&:last-child td, &:last-child th': { border: 0 } }}\n                                        >\n                                            <TableCell component=\"th\" scope=\"data\">\n                                                {data.name}\n                                            </TableCell>\n                                            <TableCell align=\"right\">{data.category}</TableCell>\n                                            <TableCell align=\"right\">{data.height}</TableCell>\n                                            <TableCell align=\"right\">{data.grossWeight}</TableCell>\n                                            <TableCell align=\"right\">{data.width}</TableCell>\n                                            <TableCell align=\"right\">{data.equipmentLong}</TableCell>\n                                            <TableCell align=\"right\">{data.status}</TableCell>\n                                            <TableCell align=\"right\">{data.requisition}</TableCell>\n                                            <TableCell align=\"right\">{data.invoice.code}</TableCell>\n                                            <TableCell align=\"right\">\n                                                <IconButton color=\"primary\" onClick={() => this.handleOpenUpdate(data)} size=\"small\"><Edit /></IconButton>{\" \"}\n                                                <IconButton color=\"error\" onClick={() => this.delete(data)} size=\"small\"><Delete /></IconButton>{\" \"}\n                                                {data.status != \"En Espera\" && data.requisition != \"\" ? <IconButton color=\"error\" onClick={() => this.handleOpenEntryMovement(data)} size=\"small\"><Output></Output></IconButton> : <IconButton color=\"success\" onClick={() => this.handleOpenEntryRegistry(data)} size=\"small\"><InputIcon></InputIcon></IconButton>}</TableCell>\n                                        </TableRow>\n                                    ))}\n                                </TableBody>\n                            </Table>\n                        </TableContainer>\n                        <TablePagination\n                            rowsPerPageOptions={[5, 10, 15]}\n                            component=\"div\"\n                            count={this.state.data.length}\n                            rowsPerPage={this.state.rowsPerPage}\n                            page={this.state.page}\n                            onPageChange={this.handleChangePage}\n                            onRowsPerPageChange={this.handleChangeRowsPerPage}\n                        />\n                    </Paper>\n                </Container>\n                <Modal\n                    open={this.state.open}\n                    onClose={this.handleClose}\n                    aria-labelledby=\"modal-modal-title\"\n                    aria-describedby=\"modal-modal-description\"\n                >\n                    <Box sx={style} component=\"form\"\n\n                        noValidate\n                        autoComplete=\"off\">\n                        <div>\n                            <Typography><PrecisionManufacturing /> EQUIPMENT REGISTRATION</Typography>\n                            <br />\n                            <TextField\n                                label=\"Name\"\n                                variant=\"filled\"\n                                name=\"name\"\n                                onChange={this.handleChangeForm}\n                            />\n                            {\"    \"}\n                            <TextField\n                                label=\"Width (m³)\"\n                                variant=\"filled\"\n                                name=\"width\"\n                                onChange={this.handleChangeForm}\n                                type=\"number\"\n                                InputProps={{\n                                    startAdornment: (\n                                        <InputAdornment position=\"start\">\n                                            #\n                                        </InputAdornment>\n                                    ),\n                                }}\n                            />\n                        </div>\n                        <br />\n                        <div>\n\n                            <TextField\n                                label=\"Equipment long (m³)\"\n                                variant=\"filled\"\n                                name=\"equipmentLong\"\n                                onChange={this.handleChangeForm}\n                                type=\"number\"\n                                InputProps={{\n                                    startAdornment: (\n                                        <InputAdornment position=\"start\">\n                                            #\n                                        </InputAdornment>\n                                    ),\n                                }}\n                            />\n                            {\"    \"}\n                            <TextField\n                                label=\"Height (m³)\"\n                                variant=\"filled\"\n                                name=\"height\"\n                                onChange={this.handleChangeForm}\n                                type=\"number\"\n                                InputProps={{\n                                    startAdornment: (\n                                        <InputAdornment position=\"start\">\n                                            #\n                                        </InputAdornment>\n                                    ),\n                                }}\n                            />\n                        </div>\n                        <br />\n                        <div>\n\n                            {\"    \"}\n                            <TextField\n                                label=\"Gross Weight\"\n                                variant=\"filled\"\n                                name=\"grossWeight\"\n                                onChange={this.handleChangeForm}\n                                InputProps={{\n                                    startAdornment: (\n                                        <InputAdornment position=\"start\">\n                                            #\n                                        </InputAdornment>\n                                    ),\n                                }}\n                            />\n                            {\"    \"}\n                            <TextField\n                                label=\"Net Weight\"\n                                variant=\"filled\"\n                                name=\"netWeight\"\n                                onChange={this.handleChangeForm}\n                                type=\"number\"\n                                InputProps={{\n                                    startAdornment: (\n                                        <InputAdornment position=\"start\">\n                                            #\n                                        </InputAdornment>\n                                    ),\n                                }}\n                            />\n                        </div>\n                        <br />\n                        <div>\n                            <TextField\n                                id=\"invoiceNumber\"\n                                label=\"Invoice number\"\n                                variant=\"filled\"\n                                disabled\n                            />\n                            {\"    \"}\n                            <TextField\n                                id=\"code\"\n                                label=\"Purchase order\"\n                                variant=\"filled\"\n                                name=\"code\"\n                                onChange={this.handleChangeFormInvoice}\n\n                            />\n                            {\"    \"}\n                            <Button color=\"primary\" onClick={this.searchInvoice}><Search></Search></Button>\n                        </div>\n                        <br />\n                        <div>\n                            <TextField\n                                id=\"dateInvoice\"\n                                label=\"Order Date\"\n                                variant=\"filled\"\n                                name=\"dateInvoice\"\n                                onChange={this.handleChangeFormInvoice}\n                                value={this.state.form.invoice.dateInvoice}\n                                disabled\n                            />\n                            {\"    \"}\n                            <TextField\n                                id=\"invoiceId\"\n                                label=\"Requisition Id\"\n                                variant=\"filled\"\n                                name=\"id\"\n                                onChange={this.handleChangeForm}\n                                disabled\n                                value={this.state.form.invoice.id}\n                                InputProps={{\n                                    startAdornment: (\n                                        <InputAdornment position=\"start\">\n                                            #\n                                        </InputAdornment>\n                                    ),\n                                }}\n                            />\n                        </div>\n                        <br />\n                        <Button type=\"button\" disabled={this.state.form.invoice.id == \"\"} color=\"success\" onClick={this.save}>save <SaveOutlined></SaveOutlined></Button>\n                    </Box>\n                </Modal>\n\n\n                <Modal\n                    open={this.state.openUpdate}\n                    onClose={this.handleCloseUpdate}\n                    aria-labelledby=\"modal-modal-title\"\n                    aria-describedby=\"modal-modal-description\"\n                >\n                    <Box sx={style} component=\"form\"\n\n                        noValidate\n                        autoComplete=\"off\">\n                        <div>\n                            <Typography><PrecisionManufacturing /> EQUIPMENT UPDATE <PrecisionManufacturing /></Typography>\n                            <br />\n                            <TextField\n                                label=\"Name\"\n                                variant=\"filled\"\n                                name=\"name\"\n                                onChange={this.handleChangeForm}\n                                value={this.state.form.name}\n                            />\n                            {\"    \"}\n                            <TextField\n                                label=\"Width (m³)\"\n                                variant=\"filled\"\n                                name=\"width\"\n                                onChange={this.handleChangeForm}\n                                value={this.state.form.width}\n                                type=\"number\"\n                                InputProps={{\n                                    startAdornment: (\n                                        <InputAdornment position=\"start\">\n                                            #\n                                        </InputAdornment>\n                                    ),\n                                }}\n                            />\n                        </div>\n                        <br />\n                        <div>\n\n                            <TextField\n                                label=\"Equipment Long (m³)\"\n                                variant=\"filled\"\n                                name=\"equipmentLong\"\n                                onChange={this.handleChangeForm}\n                                value={this.state.form.equipmentLong}\n                                type=\"number\"\n                                InputProps={{\n                                    startAdornment: (\n                                        <InputAdornment invoiceId=\"start\">\n                                            #\n                                        </InputAdornment>\n                                    ),\n                                }}\n                            />\n                            {\"    \"}\n                            <TextField\n                                label=\"Height (m³)\"\n                                variant=\"filled\"\n                                name=\"height\"\n                                onChange={this.handleChangeForm}\n                                value={this.state.form.height}\n                                type=\"number\"\n                                InputProps={{\n                                    startAdornment: (\n                                        <InputAdornment position=\"start\">\n                                            #\n                                        </InputAdornment>\n                                    ),\n                                }}\n                            />\n                        </div>\n                        <br />\n                        <div>\n\n                            {\"    \"}\n                            <TextField\n                                label=\"Gross Weight\"\n                                variant=\"filled\"\n                                name=\"grossWeight\"\n                                onChange={this.handleChangeForm}\n                                InputProps={{\n                                    startAdornment: (\n                                        <InputAdornment position=\"start\">\n                                            #\n                                        </InputAdornment>\n                                    ),\n                                }}\n                                value={this.state.form.grossWeight}\n                            />\n                            {\"    \"}\n                            <TextField\n                                id=\"netWeight\"\n                                label=\"Net Weight\"\n                                variant=\"filled\"\n                                name=\"netWeight\"\n                                onChange={this.handleChangeForm}\n                                value={this.state.form.netWeight}\n                                type=\"number\"\n                                InputProps={{\n                                    startAdornment: (\n                                        <InputAdornment position=\"start\">\n                                            #\n                                        </InputAdornment>\n                                    ),\n                                }}\n                            />\n                        </div>\n                        <br />\n                        <div>\n                            <TextField\n                                id=\"requisition\"\n                                label=\"Invoice Number\"\n                                variant=\"filled\"\n                                disabled\n                            />\n                            {\"    \"}\n                            <TextField\n                                disabled\n                                id=\"invoiceId\"\n                                label=\"Purchase Order Id\"\n                                variant=\"filled\"\n                                name=\"id\"\n                                onChange={this.handleChangeForm}\n                                InputProps={{\n                                    startAdornment: (\n                                        <InputAdornment position=\"start\">\n                                            #\n                                        </InputAdornment>\n                                    ),\n                                }}\n                                value={this.state.form.invoice.id}\n                            />\n\n\n                        </div>\n                        <br />\n                        <Button type=\"button\" color=\"success\" onClick={this.update}>save <SaveOutlined></SaveOutlined></Button>\n                    </Box>\n                </Modal>\n\n                <Modal\n                    open={this.state.openModalEntry}\n                    onClose={this.handleCloseUpdate}\n                    aria-labelledby=\"modal-modal-title\"\n                    aria-describedby=\"modal-modal-description\"\n                >\n                    <Box sx={styleModalEntry} component=\"form\"\n\n                        noValidate\n                        autoComplete=\"off\">\n                        <div>\n                            <Typography><CheckIcon /> ENTRY REGISTRATION</Typography>\n                            <br />\n                            <TextField\n                                label=\"Expect entry date\"\n                                variant=\"filled\"\n                                name=\"expectedEntryDate\"\n                                onChange={this.handleChangeEntry}\n                                type=\"date\"\n                                InputLabelProps={{\n                                    shrink: true,\n                                }}\n                            />\n                            {\"    \"}\n                            <TextField\n                                label=\"Expected departure date\"\n                                variant=\"filled\"\n                                name=\"expectedDepartureDate\"\n                                onChange={this.handleChangeEntry}\n                                type=\"date\"\n                                InputLabelProps={{\n                                    shrink: true,\n                                }}\n                            />\n                        </div>\n                        <br />\n                        <div>\n                            <TextField\n                                id=\"name\"\n                                label=\"Equipment\"\n                                variant=\"filled\"\n                                disabled\n                                name=\"name\"\n                                onChange={this.handleChangeForm}\n                                value={this.state.form.name}\n                            />\n                            {\"    \"}\n                            <FormControl variant=\"standard\" sx={{ m: 1, minWidth: 170 }}>\n                                <InputLabel id=\"height\">Location (m³)</InputLabel>\n                                <Select\n                                    labelId=\"location\"\n                                    id=\"location\"\n                                    value={this.state.entry.location.id}\n                                    onChange={this.handleChangeLocation}\n                                    label=\"Location\"\n                                    name=\"id\"\n                                    variant=\"standard\"\n                                >\n                                    <MenuItem value=\"\">\n                                        <em>None</em>\n                                    </MenuItem>\n                                    {this.state.dataLocations.map((dt) => (\n                                        <MenuItem value={dt.id}>{dt.locationName}</MenuItem>\n                                    )\n                                    )}\n                                </Select>\n                            </FormControl>\n                        </div>\n                        <div>\n                            <TextField\n                                id=\"requisition\"\n                                label=\"Invoice number\"\n                                variant=\"filled\"\n                                name=\"requisition\"\n                                onChange={this.handleChangeEquipment}\n                            />\n                        </div>\n                        <br />\n                        <Button type=\"button\" color=\"success\" onClick={this.registryEntry}>save<SaveOutlined></SaveOutlined></Button>\n                        {\"            \"}\n                        <Button type=\"button\" color=\"danger\" onClick={this.handleCloseEntryRegistry}>Close X</Button>\n                    </Box>\n                </Modal>\n\n                <Modal\n                    open={this.state.openModalMovement}\n                    onClose={this.handleCloseEntryMovement}\n                    aria-labelledby=\"modal-modal-title\"\n                    aria-describedby=\"modal-modal-description\"\n                >\n                    <Box sx={styleModalEntry} component=\"form\"\n\n                        noValidate\n                        autoComplete=\"off\">\n                        <div>\n                            <Typography><CheckIcon /> MOVEMENT REGISTRATION</Typography>\n                            <br />\n                            <TextField\n                                label=\"Expect entry date\"\n                                variant=\"filled\"\n                                name=\"expectedEntryDate\"\n                                onChange={this.handleChangeEntry}\n                                type=\"date\"\n                                InputLabelProps={{\n                                    shrink: true,\n                                }}\n                            />\n                            {\"    \"}\n                            <TextField\n                                label=\"Expected departure date\"\n                                variant=\"filled\"\n                                name=\"expectedDepartureDate\"\n                                onChange={this.handleChangeEntry}\n                                type=\"date\"\n                                InputLabelProps={{\n                                    shrink: true,\n                                }}\n                            />\n                        </div>\n                        <br />\n                        <div>\n                            <TextField\n                                id=\"name\"\n                                label=\"Equipment\"\n                                variant=\"filled\"\n                                disabled\n                                name=\"name\"\n                                onChange={this.handleChangeForm}\n                                value={this.state.form.name}\n                            />\n                            {\"    \"}\n                            <FormControl variant=\"standard\" sx={{ m: 1, minWidth: 170 }}>\n                                <InputLabel id=\"height\">Location (m³)</InputLabel>\n                                <Select\n                                    labelId=\"location\"\n                                    id=\"location\"\n                                    value={this.state.entry.location.id}\n                                    onChange={this.handleChangeLocation}\n                                    label=\"Location\"\n                                    name=\"id\"\n                                    variant=\"standard\"\n                                >\n                                    <MenuItem value=\"\">\n                                        <em>None</em>\n                                    </MenuItem>\n                                    {this.state.dataLocations.map((dt) => (\n                                        <MenuItem value={dt.id}>{dt.locationName}</MenuItem>\n                                    )\n                                    )}\n                                </Select>\n                            </FormControl>\n                        </div>\n                        <div>\n                            <TextField\n                                id=\"requisition\"\n                                label=\"Invoice number\"\n                                variant=\"filled\"\n                                name=\"requisition\"\n                                disabled\n                                onChange={this.handleChangeEquipment}\n                                value={this.state.form.requisition}\n                            />\n                        </div>\n                        <br />\n                        <Button type=\"button\" color=\"success\" onClick={this.getOutEntry}>save<SaveOutlined></SaveOutlined></Button>\n                        {\"            \"}\n                        <Button type=\"button\" color=\"danger\" onClick={this.handleCloseEntryMovement}>Close X</Button>\n                    </Box>\n                </Modal>\n\n            </div>\n        );\n    }\n\n}\n\nexport default Equipment;","import React from \"react\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport Cookies from \"universal-cookie/es6\";\nimport MenuNav from \"../menu/MenuNav\";\nimport { Box } from \"@mui/system\";\nimport { Icon, TextField } from \"@mui/material\";\nimport { Button } from \"reactstrap\";\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell from '@mui/material/TableCell';\nimport TableContainer from '@mui/material/TableContainer';\nimport TableHead from '@mui/material/TableHead';\nimport TableRow from '@mui/material/TableRow';\nimport { InputAdornment } from \"@mui/material\";\nimport Paper from '@mui/material/Paper';\nimport { Container } from \"reactstrap\";\nimport Typography from '@mui/material/Typography';\nimport { InputLabel } from \"@mui/material\";\nimport { Select } from \"@mui/material\";\nimport { FormControl } from \"@mui/material\";\nimport { MenuItem } from \"@mui/material\";\nimport Modal from '@mui/material/Modal';\nimport axios from 'axios';\nimport { Alert } from \"@mui/material\";\nimport CheckIcon from '@mui/icons-material/Check';\nimport { AddCircleRounded } from \"@material-ui/icons\";\nimport { Snackbar } from \"@material-ui/core\";\nimport PersonSearchIcon from '@mui/icons-material/PersonSearch';\nimport { SaveOutlined } from \"@material-ui/icons\";\nimport { WarningOutlined } from \"@material-ui/icons\";\nimport { InfoOutlined } from \"@material-ui/icons\";\nimport { FileCopy, PrecisionManufacturing } from \"@mui/icons-material\";\nimport { IconButton } from \"@mui/material\";\nimport { Delete } from \"@mui/icons-material\";\nimport { Edit } from \"@material-ui/icons\";\n\nvar DatePicker = require(\"reactstrap-date-picker\")\nconst data = [];\nconst dataRoles = [];\nconst dataCountries = [];\nconst categoryData = [{ code: 'CATEGORY A', name: 'categoria A' }, { code: 'CATEGORY B', name: 'categoria B' }];\nconst cookies = new Cookies();\nconst baseUrl = \"http://localhost:8080/api/invoice\";\nconst baseProviderUrl = \"http://localhost:8080/api/provider\";\nconst baseEquipmentUrl = \"http://localhost:8080/api/equipment\";\nconst style = {\n  position: 'absolute',\n  top: '50%',\n  left: '50%',\n  transform: 'translate(-50%, -50%)',\n  width: 600,\n  bgcolor: 'white',\n  border: '2px solid #000',\n  boxShadow: 24,\n  p: 8,\n  m: 2,\n};\nclass Invoice extends React.Component {\n\n  handleClose = () => this.setState({ open: false });\n  handleOpen = () => this.setState({ open: true });\n  handleCloseUpdate = () => this.setState({ openUpdate: false });\n  handleOpenUpdate = (data) => this.setState({ openUpdate: true, form: data, id: data.id });\n  handleOpenEquipment = (data) => this.setState({ openEquipment: true, id: data.id, form: data, equipment: { ...this.state.equipment, invoice: { ...this.state.equipment.invoice, id: data.id, code: data.code, dateInvoice: data.dataInvoice } } });\n  handleCloseEquipment = () => this.setState({ openEquipment: false });\n  constructor() {\n    super();\n    this.state = {\n      categoryData: categoryData,\n      data: data,\n      dataCountries: dataCountries,\n      dataRoles: dataRoles,\n      open: false,\n      openEquipment: false,\n      openUpdate: false,\n      showAlert: false,\n      showAlertDelete: false,\n      showAlertUpdate: false,\n      id: \"\",\n      form: {\n        dateInvoice: \"\",\n        price: \"\",\n        amount: \"\",\n        code: \"\",\n        provider: {\n          id: \"\",\n          providerName: \"\",\n          country: \"\"\n        }\n      },\n      equipment: {\n        name: \"\",\n        category: \"\",\n        netWeight: \"\",\n        grossWeight: \"\",\n        height: \"\",\n        width: \"\",\n        equipmentLong: \"\",\n        requisition: \"\",\n        invoice: {\n          id: \"\",\n          dateInvoice: \"\",\n          code: \"\"\n        }\n      }\n    };\n\n    this.handleInputChange = this.handleInputChange.bind(this);\n  }\n\n  getCountries = async () => {\n    await axios.get(baseProviderUrl + \"/countries\", {\n      headers: { Authorization: 'Bearer ' + cookies.get('token'), Cache: 'no-cache' }\n    }).then(response => {\n      return response.data\n    })\n      .then(response => {\n        var countries = this.state.dataCountries\n        countries = response\n        this.setState({ dataCountries: countries });\n      })\n      .catch(error => {\n        console.log(error);\n      });\n  }\n\n  getAll = async () => {\n    await axios.get(baseUrl + \"/all\", {\n      headers: { Authorization: 'Bearer ' + cookies.get('token'), Cache: 'no-cache' }\n    }).then(response => {\n      return response.data\n    })\n      .then(response => {\n        var invoice = this.state.data\n        invoice = response\n        invoice = response\n        this.setState({ data: invoice });\n      })\n      .catch(error => {\n        console.log(error);\n      });\n  }\n\n  saveEquipment = async (event) => {\n    event.preventDefault();\n    await axios.post(baseEquipmentUrl + \"/save\", this.state.equipment, { headers: { Authorization: 'Bearer ' + cookies.get('token') } })\n      .then(response => {\n        return response.data;\n      }).then(response => {\n        this.getAll();\n        this.setState({ showAlertUpdate: true, openEquipment: false })\n      }).catch(error => {\n        console.log(error);\n      });;\n  }\n\n  search = async () => {\n    await axios.get(baseUrl + \"/search\", { params: { code: this.state.form.code }, headers: { Authorization: 'Bearer ' + cookies.get('token') } })\n      .then(response => {\n        return response.data\n      })\n      .then(response => {\n        var invoice = this.state.data\n        invoice = response\n        this.setState({ data: invoice });\n      })\n      .catch(error => {\n        console.log(error);\n      });\n  }\n\n  delete = async (dato) => {\n    var opcion = window.confirm(\"You want to delete the invoice: \" + dato.code);\n    if (opcion) {\n      await axios.delete(baseUrl + \"/delete/\" + dato.id, {\n        headers: { Authorization: 'Bearer ' + cookies.get('token') }\n      })\n        .then(response => {\n          return response.data\n        }).then(response => {\n          var users = this.state.data\n          users = response\n          this.setState({ data: users, showAlertDelete: true });\n        }).catch(error => {\n          console.log(error);\n        });\n    }\n\n  }\n\n  save = async (event) => {\n    event.preventDefault();\n    await axios.post(baseUrl + \"/save\", this.state.form, { headers: { Authorization: 'Bearer ' + cookies.get('token') } })\n      .then(response => {\n        return response.data;\n      }).then(response => {\n        this.getAll();\n        this.setState({ showAlert: true, open: false })\n      }).catch(error => {\n        console.log(error);\n      });;\n  }\n\n  update = async (event) => {\n    event.preventDefault();\n    await axios.put(baseUrl + \"/update/\" + this.state.id, this.state.form, { headers: { Authorization: 'Bearer ' + cookies.get('token') } })\n      .then(response => {\n        return response.data;\n      }).then(response => {\n        this.getAll();\n        this.setState({ showAlertUpdate: true, openUpdate: false })\n      }).catch(error => {\n        console.log(error);\n      });;\n  }\n\n  handleInputChange(event) {\n    const target = event.target;\n    const value = target.value;\n    const name = target.name;\n\n    this.setState({\n      [name]: value\n    });\n  }\n\n  handleChangeForm = async e => {\n    await this.setState({\n      form: {\n        ...this.state.form,\n        [e.target.name]: e.target.value\n      }\n    });\n  }\n\n  handleChangeEquipment = async e => {\n    await this.setState({\n      equipment: {\n        ...this.state.equipment,\n        [e.target.name]: e.target.value\n      }\n    });\n  }\n\n  handleChangeEquipmentInvoice = async e => {\n    await this.setState({\n      equipment: {\n        ...this.state.equipment,\n        invoice: {\n          ...this.state.equipment.invoice,\n          [e.target.name]: e.target.value\n        }\n\n      }\n    });\n  }\n\n  handleChangeFormProvider = async e => {\n    await this.setState({\n      form: {\n        ...this.state.form,\n        provider: {\n          ...this.state.form.provider,\n          [e.target.name]: e.target.value\n        }\n\n      }\n    });\n  }\n\n  handleClick = async e => {\n    this.setState({ showAlert: !this.state.showAlert });\n  }\n\n  handleClickAlertDelete = async e => {\n    this.setState({ showAlertDelete: !this.state.showAlertDelete });\n  }\n\n  handleClickAlertUpdate = async e => {\n    this.setState({ showAlertUpdate: !this.state.showAlertUpdate });\n  }\n\n  componentDidMount = async () => {\n    await this.getCountries();\n    await this.getAll();\n    if (!cookies.get('token')) {\n      window.location.href = \"./\";\n    }\n  }\n\n  render() {\n    return (\n      <div>\n        <MenuNav />\n        <Container>\n          <br />\n          <h2>PURCHASE ORDER</h2>\n          <br />\n          <Snackbar open={this.state.showAlert}>\n            <Alert icon={<CheckIcon fontSize=\"inherit\" />} severity=\"success\" onClose={this.handleClick}>\n            Purchase Order was successfully created\n            </Alert>\n          </Snackbar>\n          <Snackbar open={this.state.showAlertDelete}>\n            <Alert icon={<WarningOutlined></WarningOutlined>} severity=\"warning\" onClose={this.handleClickAlertDelete}>\n            Purchase Order was successfully removed\n            </Alert>\n          </Snackbar>\n          <Snackbar open={this.state.showAlertUpdate}>\n            <Alert icon={<InfoOutlined></InfoOutlined>} severity=\"info\" onClose={this.handleClickAlertUpdate}>\n            Purchase Order was successfully updated\n            </Alert>\n          </Snackbar>\n          <Box component=\"form\"\n            sx={{\n              '& .MuiTextField-root': { m: 1, width: '25ch' },\n            }}\n            noValidate\n            autoComplete=\"off\">\n            <div>\n              <TextField\n                id=\"standard-required\"\n                label=\"Requisition number\"\n                variant=\"standard\"\n                name=\"code\"\n                onChange={this.handleChangeForm}\n              />\n              {\"  \"}\n              <Button color=\"primary\" onClick={this.search}><PersonSearchIcon></PersonSearchIcon></Button>\n\n            </div>\n\n          </Box>\n          <br />\n          <br />\n          <Button color=\"success\" onClick={this.handleOpen} ><AddCircleRounded></AddCircleRounded></Button>\n          <br />\n          <br />\n          <TableContainer component={Paper}>\n            <Table sx={{ minWidth: 650 }} aria-label=\"simple table\">\n              <TableHead>\n                <TableRow>\n                  <TableCell>Purchase Order Number</TableCell>\n                  <TableCell align=\"right\">Requisition Date</TableCell>\n                  <TableCell align=\"right\">Provider</TableCell>\n                  <TableCell align=\"right\">Provider country</TableCell>\n                  <TableCell align=\"right\">Amount</TableCell>\n                  <TableCell align=\"right\">Price</TableCell>\n                  <TableCell align=\"right\"></TableCell>\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                {this.state.data.map((data) => (\n                  <TableRow\n                    key={data.id}\n                    sx={{ '&:last-child td, &:last-child th': { border: 0 } }}\n                  >\n                    <TableCell component=\"th\" scope=\"data\">\n                      {data.code}\n                    </TableCell>\n                    <TableCell align=\"right\">{data.dateInvoice}</TableCell>\n                    <TableCell align=\"right\">{data.provider == null ? \"\" : data.provider.providerName}</TableCell>\n                    <TableCell align=\"right\">{data.provider == null ? \"\" : data.provider.country}</TableCell>\n                    <TableCell align=\"right\">{data.amount}</TableCell>\n                    <TableCell align=\"right\">{data.price}</TableCell>\n                    <TableCell align=\"right\">\n                      <IconButton color=\"primary\" onClick={() => this.handleOpenUpdate(data)}><Edit/></IconButton>{\" \"}\n                      <IconButton color=\"error\" onClick={() => this.delete(data)}><Delete/></IconButton>{\" \"}\n                      <IconButton color=\"success\" onClick={() => this.handleOpenEquipment(data)}><AddCircleRounded /></IconButton>\n                    </TableCell>\n                  </TableRow>\n                ))}\n              </TableBody>\n            </Table>\n          </TableContainer>\n        </Container>\n        <Modal\n          open={this.state.open}\n          onClose={this.handleClose}\n          aria-labelledby=\"modal-modal-title\"\n          aria-describedby=\"modal-modal-description\"\n        >\n          <Box sx={style} component=\"form\"\n\n            noValidate\n            autoComplete=\"off\">\n            <div>\n              <Typography><FileCopy /> PURCHASE ORDER REGISTRATION</Typography>\n              <br />\n              <TextField\n                label=\"Requisiton number\"\n                variant=\"filled\"\n                name=\"code\"\n                onChange={this.handleChangeForm}\n              />\n              {\"    \"}\n              <TextField\n                label=\"Requisition Date\"\n                variant=\"filled\"\n                name=\"dateInvoice\"\n                onChange={this.handleChangeForm}\n                type=\"date\"\n                InputLabelProps={{\n                  shrink: true,\n                }}\n              />\n            </div>\n            <br />\n            <div>\n\n              <TextField\n                id=\"amountid\"\n                label=\"Amount\"\n                variant=\"filled\"\n                name=\"amount\"\n                onChange={this.handleChangeForm}\n                type=\"number\"\n                InputProps={{\n                  startAdornment: (\n                    <InputAdornment position=\"start\">\n                      #\n                    </InputAdornment>\n                  ),\n                }}\n              />\n              {\"    \"}\n              <TextField\n                label=\"Price\"\n                variant=\"filled\"\n                name=\"price\"\n                onChange={this.handleChangeForm}\n                type=\"number\"\n                InputProps={{\n                  startAdornment: (\n                    <InputAdornment position=\"start\">\n                      #\n                    </InputAdornment>\n                  ),\n                }}\n              />\n            </div>\n            <br />\n            <div>\n              <h1>PROVIDER</h1>\n              <br />\n              <TextField\n                id=\"providerName\"\n                label=\"Provider Name\"\n                variant=\"filled\"\n                name=\"providerName\"\n                onChange={this.handleChangeFormProvider}\n                InputProps={{\n                  startAdornment: (\n                    <InputAdornment position=\"start\">\n                      #\n                    </InputAdornment>\n                  ),\n                }}\n              />\n              {\"    \"}\n              <FormControl variant=\"standard\" sx={{ m: 1, minWidth: 170 }}>\n                <InputLabel id=\"height\">Country</InputLabel>\n                <Select\n                  labelId=\"Country\"\n                  id=\"country\"\n                  value={this.state.form.provider.country}\n                  onChange={this.handleChangeFormProvider}\n                  label=\"country\"\n                  name=\"country\"\n                  variant=\"filled\"\n                  variant=\"standard\"\n                >\n                  <MenuItem value=\"\">\n                    <em>None</em>\n                  </MenuItem>\n                  {this.state.dataCountries.map((dt) => (\n                    <MenuItem value={dt.countryName}>{dt.countryName}</MenuItem>\n                  )\n                  )}\n                </Select>\n              </FormControl>\n            </div>\n            <br />\n            <Button type=\"button\" color=\"success\" onClick={this.save}>save <SaveOutlined></SaveOutlined></Button>\n          </Box>\n        </Modal>\n\n        <Modal\n          open={this.state.openUpdate}\n          onClose={this.handleCloseUpdate}\n          aria-labelledby=\"modal-modal-title\"\n          aria-describedby=\"modal-modal-description\"\n        >\n          <Box sx={style} component=\"form\"\n\n            noValidate\n            autoComplete=\"off\">\n            <div>\n              <Typography><FileCopy /> PURHCASE ORDER UPDATE</Typography>\n              <br />\n              <TextField\n                label=\"Order number\"\n                variant=\"filled\"\n                name=\"code\"\n                onChange={this.handleChangeForm}\n                value={this.state.form.code}\n              />\n              {\"    \"}\n              <TextField\n                label=\"Order Date\"\n                variant=\"filled\"\n                name=\"dateInvoice\"\n                onChange={this.handleChangeForm}\n                type=\"date\"\n                InputLabelProps={{\n                  shrink: true,\n                }}\n              />\n            </div>\n            <br />\n            <div>\n\n              <TextField\n                id=\"amountid\"\n                label=\"Amount\"\n                variant=\"filled\"\n                name=\"amount\"\n                onChange={this.handleChangeForm}\n                type=\"number\"\n                value={this.state.form.amount}\n                InputProps={{\n                  startAdornment: (\n                    <InputAdornment position=\"start\">\n                      #\n                    </InputAdornment>\n                  ),\n                }}\n              />\n              {\"    \"}\n              <TextField\n                label=\"Price\"\n                variant=\"filled\"\n                name=\"price\"\n                onChange={this.handleChangeForm}\n                type=\"number\"\n                value={this.state.form.price}\n                InputProps={{\n                  startAdornment: (\n                    <InputAdornment position=\"start\">\n                      #\n                    </InputAdornment>\n                  ),\n                }}\n              />\n            </div>\n            <br />\n            <div>\n              <h1>PROVIDER</h1>\n              <br />\n              <TextField\n                id=\"providerName\"\n                label=\"Provider Name\"\n                variant=\"filled\"\n                name=\"providerName\"\n                onChange={this.handleChangeFormProvider}\n                value={this.state.form.provider.providerName}\n                InputProps={{\n                  startAdornment: (\n                    <InputAdornment position=\"start\">\n                      #\n                    </InputAdornment>\n                  ),\n                }}\n              />\n              {\"    \"}\n              <FormControl variant=\"standard\" sx={{ m: 1, minWidth: 170 }}>\n                <InputLabel id=\"height\">Country</InputLabel>\n                <Select\n                  labelId=\"Country\"\n                  id=\"country\"\n                  value={this.state.form.provider.country}\n                  onChange={this.handleChangeFormProvider}\n                  label=\"country\"\n                  name=\"country\"\n                  variant=\"filled\"\n                  variant=\"standard\"\n                >\n                  <MenuItem value=\"\">\n                    <em>None</em>\n                  </MenuItem>\n                  {this.state.dataCountries.map((dt) => (\n                    <MenuItem value={dt.countryName}>{dt.countryName}</MenuItem>\n                  )\n                  )}\n                </Select>\n              </FormControl>\n            </div>\n            <br />\n            <Button type=\"button\" color=\"success\" onClick={this.update}>save <SaveOutlined></SaveOutlined></Button>\n          </Box>\n        </Modal>\n\n        <Modal\n          open={this.state.openEquipment}\n          onClose={this.handleClose}\n          aria-labelledby=\"modal-modal-title\"\n          aria-describedby=\"modal-modal-description\"\n        >\n          <Box sx={style} component=\"form\"\n\n            noValidate\n            autoComplete=\"off\">\n            <div>\n              <Typography><PrecisionManufacturing /> EQUIPMENT REGISTRATION</Typography>\n              <br />\n              <TextField\n                label=\"Name\"\n                variant=\"filled\"\n                name=\"name\"\n                onChange={this.handleChangeEquipment}\n              />\n              {\"    \"}\n              <TextField\n                label=\"width\"\n                variant=\"filled\"\n                name=\"width\"\n                onChange={this.handleChangeEquipment}\n                type=\"number\"\n                InputProps={{\n                  startAdornment: (\n                    <InputAdornment position=\"start\">\n                      #\n                    </InputAdornment>\n                  ),\n                }}\n              />\n            </div>\n            <br />\n            <div>\n\n              <TextField\n                id=\"standard-required\"\n                label=\"equipmentLong\"\n                variant=\"filled\"\n                name=\"equipmentLong\"\n                onChange={this.handleChangeEquipment}\n                type=\"number\"\n                InputProps={{\n                  startAdornment: (\n                    <InputAdornment position=\"start\">\n                      #\n                    </InputAdornment>\n                  ),\n                }}\n              />\n              {\"    \"}\n              <TextField\n                label=\"height\"\n                variant=\"filled\"\n                name=\"height\"\n                onChange={this.handleChangeEquipment}\n                type=\"number\"\n                InputProps={{\n                  startAdornment: (\n                    <InputAdornment position=\"start\">\n                      #\n                    </InputAdornment>\n                  ),\n                }}\n              />\n            </div>\n            <br />\n            <div>\n\n              {\"    \"}\n              <TextField\n                id=\"grossWeight\"\n                label=\"Gross Weight\"\n                variant=\"filled\"\n                name=\"grossWeight\"\n                onChange={this.handleChangeEquipment}\n                InputProps={{\n                  startAdornment: (\n                    <InputAdornment position=\"start\">\n                      #\n                    </InputAdornment>\n                  ),\n                }}\n              />\n              {\"    \"}\n              <TextField\n                id=\"netWeight\"\n                label=\"Net Weight\"\n                variant=\"filled\"\n                name=\"netWeight\"\n                onChange={this.handleChangeEquipment}\n                type=\"number\"\n                InputProps={{\n                  startAdornment: (\n                    <InputAdornment position=\"start\">\n                      #\n                    </InputAdornment>\n                  ),\n                }}\n              />\n            </div>\n            <br />\n            <div>\n              <TextField\n                id=\"requisition\"\n                label=\"Purchase Order\"\n                variant=\"filled\"\n                name=\"requisition\"\n                onChange={this.handleChangeEquipment}\n              />\n              {\"    \"}\n              <TextField\n                id=\"code\"\n                label=\"Invoice number\"\n                variant=\"filled\"\n                name=\"code\"\n                onChange={this.handleChangeEquipmentInvoice}\n                disabled\n                value={this.state.form.code}\n\n              />\n            </div>\n            <br />\n            <div>\n              <TextField\n                id=\"dateInvoice\"\n                label=\"Invoice Date\"\n                variant=\"filled\"\n                name=\"dateInvoice\"\n                onChange={this.handleChangeEquipmentInvoice}\n                value={this.state.form.dateInvoice}\n                disabled\n              />\n              {\"    \"}\n              <TextField\n                id=\"invoiceId\"\n                label=\"invoice Id\"\n                variant=\"filled\"\n                name=\"id\"\n                onChange={this.handleChangeEquipmentInvoice}\n                disabled\n                value={this.state.id}\n                InputProps={{\n                  startAdornment: (\n                    <InputAdornment position=\"start\">\n                      #\n                    </InputAdornment>\n                  ),\n                }}\n              />\n            </div>\n            <br />\n            <Button type=\"button\" color=\"success\" onClick={this.saveEquipment}>save <SaveOutlined></SaveOutlined></Button>\n            {\"            \"}\n            <Button type=\"button\" color=\"danger\" onClick={this.handleCloseEquipment}>Close </Button>\n          </Box>\n        </Modal>\n\n\n      </div>\n    );\n  }\n\n}\n\nexport default Invoice;","import React from \"react\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport Cookies from \"universal-cookie/es6\";\nimport MenuNav from \"../menu/MenuNav\";\nimport { Box } from \"@mui/system\";\nimport { Icon, TextField } from \"@mui/material\";\nimport { Button } from \"reactstrap\";\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell from '@mui/material/TableCell';\nimport TableContainer from '@mui/material/TableContainer';\nimport TableHead from '@mui/material/TableHead';\nimport TableRow from '@mui/material/TableRow';\nimport { InputAdornment } from \"@mui/material\";\nimport Paper from '@mui/material/Paper';\nimport { Container } from \"reactstrap\";\nimport Typography from '@mui/material/Typography';\nimport Modal from '@mui/material/Modal';\nimport axios from 'axios';\nimport { Alert } from \"@mui/material\";\nimport CheckIcon from '@mui/icons-material/Check';\nimport { AddCircleRounded } from \"@material-ui/icons\";\nimport { Snackbar } from \"@material-ui/core\";\nimport PersonSearchIcon from '@mui/icons-material/PersonSearch';\nimport { SaveOutlined } from \"@material-ui/icons\";\nimport { WarningOutlined } from \"@material-ui/icons\";\nimport { InfoOutlined } from \"@material-ui/icons\";\nimport { PrecisionManufacturing } from \"@mui/icons-material\";\nimport { IconButton } from \"@mui/material\";\nimport { Delete } from \"@mui/icons-material\";\nimport { Edit } from \"@material-ui/icons\";\n\nconst data = [];\nconst cookies = new Cookies();\nconst baseUrl = \"http://localhost:8080/api/location\";\nconst style = {\n    position: 'absolute',\n    top: '50%',\n    left: '50%',\n    transform: 'translate(-50%, -50%)',\n    width: 600,\n    bgcolor: 'white',\n    border: '2px solid #000',\n    boxShadow: 24,\n    p: 3,\n    m: 2,\n};\nclass Location extends React.Component {\n\n    handleClose = () => this.setState({ open: false });\n    handleOpen = () => this.setState({ open: true });\n    handleCloseUpdate = () => this.setState({ openUpdate: false });\n    handleOpenUpdate = (data) => this.setState({ openUpdate: true, form: data, id: data.id });\n    constructor() {\n        super();\n        this.state = {\n            data: data,\n            open: false,\n            openUpdate: false,\n            showAlert: false,\n            showAlertDelete: false,\n            showAlertUpdate: false,\n            id: \"\",\n            form: {\n                locationName: \"\",\n                latitude: \"\",\n                longitude: \"\",\n                localization: \"\",\n                realArea: \"\",\n                capacity: \"\"\n            }\n        };\n\n        this.handleInputChange = this.handleInputChange.bind(this);\n    }\n\n    getAll = async () => {\n        await axios.get(baseUrl + \"/all\", {\n            headers: { Authorization: 'Bearer ' + cookies.get('token'), Cache: 'no-cache'}\n        }).then(response => {\n            return response.data\n        })\n            .then(response => {\n                var users = this.state.data\n                users = response\n                this.setState({ data: users });\n            })\n            .catch(error => {\n                console.log(error);\n            });\n    }\n\n\n    search = async () => {\n        await axios.get(baseUrl + \"/search\", { params: { name: this.state.form.locationName}, headers: { Authorization: 'Bearer ' + cookies.get('token') } })\n            .then(response => {\n                return response.data\n            })\n            .then(response => {\n                var users = this.state.data\n                users = response\n                this.setState({ data: users });\n            })\n            .catch(error => {\n                console.log(error);\n            });\n    }\n\n    delete = async (dato) => {\n        var opcion = window.confirm(\"You want to delete the location: \" + dato.name);\n        if (opcion) {\n            await axios.delete(baseUrl + \"/delete/\" + dato.id, {\n                headers: { Authorization: 'Bearer ' + cookies.get('token') }\n            })\n                .then(response => {\n                    return response.data\n                }).then(response => {\n                    var users = this.state.data\n                    users = response\n                    this.setState({ data: users, showAlertDelete: true });\n                }).catch(error => {\n                    console.log(error);\n                });\n        }\n\n    }\n\n    save = async (event) => {\n        event.preventDefault();\n        await axios.post(baseUrl + \"/save\", this.state.form, { headers: { Authorization: 'Bearer ' + cookies.get('token') } })\n            .then(response => {\n                return response.data;\n            }).then(response => {\n                this.getAll();\n                this.setState({ showAlert: true, open: false })\n            }).catch(error => {\n                console.log(error);\n            });;\n    }\n\n    update = async (event) => {\n        event.preventDefault();\n        await axios.put(baseUrl + \"/update/\" + this.state.id, this.state.form, { headers: { Authorization: 'Bearer ' + cookies.get('token') } })\n            .then(response => {\n                return response.data;\n            }).then(response => {\n                this.getAll();\n                this.setState({ showAlertUpdate: true, openUpdate: false })\n            }).catch(error => {\n                console.log(error);\n            });;\n    }\n\n    handleInputChange(event) {\n        const target = event.target;\n        const value = target.value;\n        const name = target.name;\n\n        this.setState({\n            [name]: value\n        });\n    }\n\n    handleChangeForm = async e => {\n        await this.setState({\n            form: {\n                ...this.state.form,\n                [e.target.name]: e.target.value\n            }\n        });\n    }\n\n\n    handleClick = async e => {\n        this.setState({ showAlert: !this.state.showAlert });\n    }\n\n    handleClickAlertDelete = async e => {\n        this.setState({ showAlertDelete: !this.state.showAlertDelete });\n    }\n\n    handleClickAlertUpdate = async e => {\n        this.setState({ showAlertUpdate: !this.state.showAlertUpdate });\n    }\n\n    componentDidMount = async () => {\n        await this.getAll();\n        if (!cookies.get('token')) {\n            window.location.href = \"./\";\n        }\n    }\n\n    render() {\n        return (\n            <div>\n                <MenuNav />\n                <Container>\n                    <br />\n                    <h2>LOCATION</h2>\n                    <br />\n                    <Snackbar open={this.state.showAlert}>\n                        <Alert icon={<CheckIcon fontSize=\"inherit\" />} severity=\"success\" onClose={this.handleClick}>\n                            Location was successfully created\n                        </Alert>\n                    </Snackbar>\n                    <Snackbar open={this.state.showAlertDelete}>\n                        <Alert icon={<WarningOutlined></WarningOutlined>} severity=\"warning\" onClose={this.handleClickAlertDelete}>\n                            Location was successfully removed\n                        </Alert>\n                    </Snackbar>\n                    <Snackbar open={this.state.showAlertUpdate}>\n                        <Alert icon={<InfoOutlined></InfoOutlined>} severity=\"info\" onClose={this.handleClickAlertUpdate}>\n                            Location was successfully updated\n                        </Alert>\n                    </Snackbar>\n                    <Box component=\"form\"\n                        sx={{\n                            '& .MuiTextField-root': { m: 1, width: '25ch' },\n                        }}\n                        noValidate\n                        autoComplete=\"off\">\n                        <div>\n                            <TextField\n                                id=\"standard-required\"\n                                label=\"Location Name\"\n                                variant=\"standard\"\n                                name=\"locationName\"\n                                onChange={this.handleChangeForm}\n                            />\n                            {\"  \"}\n                            <Button color=\"primary\" onClick={this.search}><PersonSearchIcon></PersonSearchIcon></Button>\n\n                        </div>\n\n                    </Box>\n                    <br />\n                    <br />\n                    <Button color=\"success\" onClick={this.handleOpen} ><AddCircleRounded></AddCircleRounded></Button>\n                    <br />\n                    <br />\n                    <TableContainer component={Paper}>\n                        <Table sx={{ minWidth: 650 }} aria-label=\"simple table\">\n                            <TableHead>\n                                <TableRow>\n                                    <TableCell>Location Name</TableCell>\n                                    <TableCell align=\"right\">Latitude</TableCell>\n                                    <TableCell align=\"right\">Longitude</TableCell>\n                                    <TableCell align=\"right\">Localization</TableCell>\n                                    <TableCell align=\"right\">Area</TableCell>\n                                    <TableCell align=\"right\">Total Capacity (m³)</TableCell>\n                                    <TableCell align=\"right\">Actual Capacity (m³)</TableCell>\n                                    <TableCell align=\"right\"></TableCell>\n                                </TableRow>\n                            </TableHead>\n                            <TableBody>\n                                {this.state.data.map((data) => (\n                                    <TableRow\n                                        key={data.id}\n                                        sx={{ '&:last-child td, &:last-child th': { border: 0 } }}\n                                    >\n                                        <TableCell component=\"th\" scope=\"data\">\n                                            {data.locationName}\n                                        </TableCell>\n                                        <TableCell align=\"right\">{data.latitude}</TableCell>\n                                        <TableCell align=\"right\">{data.longitude}</TableCell>\n                                        <TableCell align=\"right\">{data.localization}</TableCell>\n                                        <TableCell align=\"right\">{data.realArea}</TableCell>\n                                        <TableCell align=\"right\">{data.capacityTotal}</TableCell>\n                                        <TableCell align=\"right\">{data.capacity}</TableCell>\n                                        <TableCell align=\"right\">\n                                            <IconButton color=\"primary\" onClick={() => this.handleOpenUpdate(data)}><Edit/></IconButton>{\" \"}\n                                            <IconButton color=\"error\" onClick={() => this.delete(data)}><Delete/></IconButton>{\" \"}</TableCell>\n                                    </TableRow>\n                                ))}\n                            </TableBody>\n                        </Table>\n                    </TableContainer>\n                </Container>\n                <Modal\n                    open={this.state.open}\n                    onClose={this.handleClose}\n                    aria-labelledby=\"modal-modal-title\"\n                    aria-describedby=\"modal-modal-description\"\n                >\n                    <Box sx={style} component=\"form\"\n\n                        noValidate\n                        autoComplete=\"off\">\n                        <div>\n                            <Typography><PrecisionManufacturing /> LOCATION REGISTRATION</Typography>\n                            <br />\n                            <TextField\n                                label=\"Location Name\"\n                                variant=\"filled\"\n                                name=\"locationName\"\n                                onChange={this.handleChangeForm}\n                            />\n                            {\"    \"}\n                            <TextField\n                                label=\"Latitude\"\n                                variant=\"filled\"\n                                name=\"latitude\"\n                                onChange={this.handleChangeForm}\n                            />\n                        </div>\n                        <br />\n                        <div>\n\n                            <TextField\n                                id=\"longitudeId\"\n                                label=\"Longitude\"\n                                variant=\"filled\"\n                                name=\"longitude\"\n                                onChange={this.handleChangeForm}\n                            />\n                            {\"    \"}\n                            <TextField\n                                label=\"Localization\"\n                                variant=\"filled\"\n                                name=\"localization\"\n                                onChange={this.handleChangeForm}\n                                \n                            />\n                        </div>\n                        <br />\n                        <div>\n\n                            {\"    \"}\n                            <TextField\n                                id=\"realAreaId\"\n                                label=\"Area\"\n                                variant=\"filled\"\n                                name=\"realArea\"\n                                onChange={this.handleChangeForm}\n                                InputProps={{\n                                    startAdornment: (\n                                        <InputAdornment position=\"start\">\n                                            #\n                                        </InputAdornment>\n                                    ),\n                                }}\n                            />\n                            {\"    \"}\n                            <TextField\n                                id=\"capacityId\"\n                                label=\"Capacity\"\n                                variant=\"filled\"\n                                name=\"capacity\"\n                                onChange={this.handleChangeForm}\n                                type=\"number\"\n                                InputProps={{\n                                    startAdornment: (\n                                        <InputAdornment position=\"start\">\n                                            #\n                                        </InputAdornment>\n                                    ),\n                                }}\n                            />\n                        </div>\n                        <br />\n                        <Button type=\"button\" color=\"success\" onClick={this.save}>save <SaveOutlined></SaveOutlined></Button>\n                    </Box>\n                </Modal>\n                <Modal\n                    open={this.state.openUpdate}\n                    onClose={this.handleClose}\n                    aria-labelledby=\"modal-modal-title\"\n                    aria-describedby=\"modal-modal-description\"\n                >\n                    <Box sx={style} component=\"form\"\n\n                        noValidate\n                        autoComplete=\"off\">\n                        <div>\n                            <Typography><PrecisionManufacturing /> LOCATION REGISTRATION</Typography>\n                            <br />\n                            <TextField\n                                label=\"Location Name\"\n                                variant=\"filled\"\n                                name=\"locationName\"\n                                onChange={this.handleChangeForm}\n                                value={this.state.form.locationName}\n                            />\n                            {\"    \"}\n                            <TextField\n                                label=\"Latitude\"\n                                variant=\"filled\"\n                                name=\"latitude\"\n                                onChange={this.handleChangeForm}\n                                value={this.state.form.latitude}\n                            />\n                        </div>\n                        <br />\n                        <div>\n\n                            <TextField\n                                id=\"longitudeId\"\n                                label=\"Longitude\"\n                                variant=\"filled\"\n                                name=\"longitude\"\n                                onChange={this.handleChangeForm}\n                                value={this.state.form.longitude}\n                            />\n                            {\"    \"}\n                            <TextField\n                                label=\"Localization\"\n                                variant=\"filled\"\n                                name=\"localization\"\n                                onChange={this.handleChangeForm}\n                                value={this.state.form.localization}\n                            />\n                        </div>\n                        <br />\n                        <div>\n\n                            {\"    \"}\n                            <TextField\n                                id=\"realAreaId\"\n                                label=\"Area\"\n                                variant=\"filled\"\n                                name=\"realArea\"\n                                onChange={this.handleChangeForm}\n                                value={this.state.form.realArea}\n                                InputProps={{\n                                    startAdornment: (\n                                        <InputAdornment position=\"start\">\n                                            #\n                                        </InputAdornment>\n                                    ),\n                                }}\n                            />\n                            {\"    \"}\n                            <TextField\n                                id=\"capacityId\"\n                                label=\"Capacity\"\n                                variant=\"filled\"\n                                name=\"capacity\"\n                                value={this.state.form.capacity}\n                                onChange={this.handleChangeForm}\n                                type=\"number\"\n                                InputProps={{\n                                    startAdornment: (\n                                        <InputAdornment position=\"start\">\n                                            #\n                                        </InputAdornment>\n                                    ),\n                                }}\n                            />\n                        </div>\n                        <br />\n                        <Button type=\"button\" color=\"success\" onClick={this.update}>save <SaveOutlined></SaveOutlined></Button>\n                        {\"            \"}\n                        <Button type=\"button\" color=\"danger\" onClick={this.handleCloseUpdate}>Close X</Button>\n                    </Box>\n                </Modal>\n\n            </div>\n        );\n    }\n\n}\n\nexport default Location;","import React from \"react\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport Cookies from \"universal-cookie/es6\";\nimport MenuNav from \"../menu/MenuNav\";\nimport { Box } from \"@mui/system\";\nimport { Icon, TextField } from \"@mui/material\";\nimport { Button } from \"reactstrap\";\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell from '@mui/material/TableCell';\nimport TableContainer from '@mui/material/TableContainer';\nimport TableHead from '@mui/material/TableHead';\nimport TableRow from '@mui/material/TableRow';\nimport { InputAdornment } from \"@mui/material\";\nimport Paper from '@mui/material/Paper';\nimport { Container } from \"reactstrap\";\nimport Typography from '@mui/material/Typography';\nimport Modal from '@mui/material/Modal';\nimport axios from 'axios';\nimport { Alert } from \"@mui/material\";\nimport CheckIcon from '@mui/icons-material/Check';\nimport { AddCircleRounded } from \"@material-ui/icons\";\nimport { Snackbar } from \"@material-ui/core\";\nimport PersonSearchIcon from '@mui/icons-material/PersonSearch';\nimport { SaveOutlined } from \"@material-ui/icons\";\nimport { WarningOutlined } from \"@material-ui/icons\";\nimport { InfoOutlined } from \"@material-ui/icons\";\nimport { PrecisionManufacturing } from \"@mui/icons-material\";\nimport { IconButton } from \"@mui/material\";\nimport { Delete } from \"@mui/icons-material\";\nimport { Edit } from \"@material-ui/icons\";\nimport {Moment} from 'moment';\n\nconst data = [];\nconst cookies = new Cookies();\nconst baseUrl = \"http://localhost:8080/api/entrada\";\nconst style = {\n    position: 'absolute',\n    top: '50%',\n    left: '50%',\n    transform: 'translate(-50%, -50%)',\n    width: 600,\n    bgcolor: 'white',\n    border: '2px solid #000',\n    boxShadow: 24,\n    p: 3,\n    m: 2,\n};\nclass Entry extends React.Component {\n\n    handleClose = () => this.setState({ open: false });\n    handleOpen = () => this.setState({ open: true });\n    handleCloseUpdate = () => this.setState({ openUpdate: false });\n    handleOpenUpdate = (data) => this.setState({ openUpdate: true, form: data, id: data.id });\n    constructor() {\n        super();\n        this.state = {\n            data: data,\n            open: false,\n            openUpdate: false,\n            showAlert: false,\n            showAlertDelete: false,\n            showAlertUpdate: false,\n            id: \"\",\n            form: {\n                expectedEntryDate: \"\",\n                latitude: \"\",\n                longitude: \"\",\n                localization: \"\",\n                realArea: \"\",\n                capacity: \"\"\n            }\n        };\n\n        this.handleInputChange = this.handleInputChange.bind(this);\n    }\n\n    getAll = async () => {\n        await axios.get(baseUrl + \"/all\", {\n            headers: { Authorization: 'Bearer ' + cookies.get('token'), Cache: 'no-cache'}\n        }).then(response => {\n            return response.data\n        })\n            .then(response => {\n                var users = this.state.data\n                users = response\n                console.log(response);\n                this.setState({ data: users });\n            })\n            .catch(error => {\n                console.log(error);\n            });\n    }\n\n\n    search = async () => {\n        await axios.get(baseUrl + \"/search\", { params: { name: this.state.form.locationName}, headers: { Authorization: 'Bearer ' + cookies.get('token') } })\n            .then(response => {\n                return response.data\n            })\n            .then(response => {\n                var users = this.state.data\n                users = response\n                this.setState({ data: users });\n            })\n            .catch(error => {\n                console.log(error);\n            });\n    }\n\n    delete = async (dato) => {\n        var opcion = window.confirm(\"You want to delete the location: \" + dato.name);\n        if (opcion) {\n            await axios.delete(baseUrl + \"/delete/\" + dato.id, {\n                headers: { Authorization: 'Bearer ' + cookies.get('token') }\n            })\n                .then(response => {\n                    return response.data\n                }).then(response => {\n                    var users = this.state.data\n                    users = response\n                    this.setState({ data: users, showAlertDelete: true });\n                }).catch(error => {\n                    console.log(error);\n                });\n        }\n\n    }\n\n    save = async (event) => {\n        event.preventDefault();\n        await axios.post(baseUrl + \"/save\", this.state.form, { headers: { Authorization: 'Bearer ' + cookies.get('token') } })\n            .then(response => {\n                return response.data;\n            }).then(response => {\n                this.getAll();\n                this.setState({ showAlert: true, open: false })\n            }).catch(error => {\n                console.log(error);\n            });;\n    }\n\n    update = async (event) => {\n        event.preventDefault();\n        await axios.put(baseUrl + \"/update/\" + this.state.id, this.state.form, { headers: { Authorization: 'Bearer ' + cookies.get('token') } })\n            .then(response => {\n                return response.data;\n            }).then(response => {\n                this.getAll();\n                this.setState({ showAlertUpdate: true, openUpdate: false })\n            }).catch(error => {\n                console.log(error);\n            });;\n    }\n\n    handleInputChange(event) {\n        const target = event.target;\n        const value = target.value;\n        const name = target.name;\n\n        this.setState({\n            [name]: value\n        });\n    }\n\n    handleChangeForm = async e => {\n        await this.setState({\n            form: {\n                ...this.state.form,\n                [e.target.name]: e.target.value\n            }\n        });\n    }\n\n\n    handleClick = async e => {\n        this.setState({ showAlert: !this.state.showAlert });\n    }\n\n    handleClickAlertDelete = async e => {\n        this.setState({ showAlertDelete: !this.state.showAlertDelete });\n    }\n\n    handleClickAlertUpdate = async e => {\n        this.setState({ showAlertUpdate: !this.state.showAlertUpdate });\n    }\n\n    componentDidMount = async () => {\n        await this.getAll();\n        if (!cookies.get('token')) {\n            window.location.href = \"./\";\n        }\n    }\n\n    render() {\n        return (\n            <div>\n                <MenuNav />\n                <Container>\n                    <br />\n                    <h2>MOVEMENT</h2>\n                    <br />\n                    <Snackbar open={this.state.showAlert}>\n                        <Alert icon={<CheckIcon fontSize=\"inherit\" />} severity=\"success\" onClose={this.handleClick}>\n                            Entry was successfully created\n                        </Alert>\n                    </Snackbar>\n                    <Snackbar open={this.state.showAlertDelete}>\n                        <Alert icon={<WarningOutlined></WarningOutlined>} severity=\"warning\" onClose={this.handleClickAlertDelete}>\n                            Entry was successfully removed\n                        </Alert>\n                    </Snackbar>\n                    <Snackbar open={this.state.showAlertUpdate}>\n                        <Alert icon={<InfoOutlined></InfoOutlined>} severity=\"info\" onClose={this.handleClickAlertUpdate}>\n                            Entry was successfully updated\n                        </Alert>\n                    </Snackbar>\n                    <Box component=\"form\"\n                        sx={{\n                            '& .MuiTextField-root': { m: 1, width: '25ch' },\n                        }}\n                        noValidate\n                        autoComplete=\"off\">\n                        <div>\n                            <TextField\n                                id=\"standard-required\"\n                                label=\"Equipment Name\"\n                                variant=\"standard\"\n                                name=\"name\"\n                                onChange={this.handleChangeForm}\n                            />\n                            {\"  \"}\n                            <Button color=\"primary\" onClick={this.search}><PersonSearchIcon></PersonSearchIcon></Button>\n\n                        </div>\n\n                    </Box>\n                    <br />\n                    <br />\n                    <Button color=\"success\" onClick={this.handleOpen} ><AddCircleRounded></AddCircleRounded></Button>\n                    <br />\n                    <br />\n                    <TableContainer component={Paper}>\n                        <Table sx={{ minWidth: 650 }} aria-label=\"simple table\">\n                            <TableHead>\n                                <TableRow>\n                                    <TableCell>Equipment</TableCell>\n                                    <TableCell align=\"right\">Location</TableCell>\n                                    <TableCell align=\"right\">Expected entry date</TableCell>\n                                    <TableCell align=\"right\">Real entry date</TableCell>\n                                    <TableCell align=\"right\">Expected departure date</TableCell>\n                                    <TableCell align=\"right\">real departure date</TableCell>\n                                    <TableCell align=\"right\">Movimiento actual</TableCell>\n                                </TableRow>\n                            </TableHead>\n                            <TableBody>\n                                {this.state.data.map((data) => (\n                                    <TableRow\n                                        key={data.id}\n                                        sx={{ '&:last-child td, &:last-child th': { border: 0 } }}\n                                    >\n                                        <TableCell component=\"th\" scope=\"data\">\n                                            {data.equipment.name}\n                                        </TableCell>\n                                        <TableCell align=\"right\">{data.location.locationName}</TableCell>\n                                        <TableCell align=\"right\">{data.expectedEntryDate == null? \"\" : new Date(data.expectedEntryDate).toLocaleDateString()}</TableCell>\n                                        <TableCell align=\"right\">{data.realEntryDate == null? \"\" : new Date(data.realEntryDate).toLocaleDateString()}</TableCell>\n                                        <TableCell align=\"right\">{data.ExpectedDepartureDate == null? \"\" : new Date(data.ExpectedDepartureDate).toLocaleDateString()}</TableCell>\n                                        <TableCell align=\"right\">{data.realDepartureDate == null? \"\" : new Date(data.realDepartureDate).toLocaleDateString()}</TableCell>\n                                        <TableCell align=\"right\">{data.currentVersion ? \"Actual\": \"\"}</TableCell>\n                                    </TableRow>\n                                ))}\n                            </TableBody>\n                        </Table>\n                    </TableContainer>\n                </Container>\n                <Modal\n                    open={this.state.open}\n                    onClose={this.handleClose}\n                    aria-labelledby=\"modal-modal-title\"\n                    aria-describedby=\"modal-modal-description\"\n                >\n                    <Box sx={style} component=\"form\"\n\n                        noValidate\n                        autoComplete=\"off\">\n                        <div>\n                            <Typography><PrecisionManufacturing /> LOCATION REGISTRATION</Typography>\n                            <br />\n                            <TextField\n                                label=\"Location Name\"\n                                variant=\"filled\"\n                                name=\"locationName\"\n                                onChange={this.handleChangeForm}\n                            />\n                            {\"    \"}\n                            <TextField\n                                label=\"Latitude\"\n                                variant=\"filled\"\n                                name=\"latitude\"\n                                onChange={this.handleChangeForm}\n                            />\n                        </div>\n                        <br />\n                        <div>\n\n                            <TextField\n                                id=\"longitudeId\"\n                                label=\"Longitude\"\n                                variant=\"filled\"\n                                name=\"longitude\"\n                                onChange={this.handleChangeForm}\n                            />\n                            {\"    \"}\n                            <TextField\n                                label=\"Localization\"\n                                variant=\"filled\"\n                                name=\"localization\"\n                                onChange={this.handleChangeForm}\n                                \n                            />\n                        </div>\n                        <br />\n                        <div>\n\n                            {\"    \"}\n                            <TextField\n                                id=\"realAreaId\"\n                                label=\"Area\"\n                                variant=\"filled\"\n                                name=\"realArea\"\n                                onChange={this.handleChangeForm}\n                                InputProps={{\n                                    startAdornment: (\n                                        <InputAdornment position=\"start\">\n                                            #\n                                        </InputAdornment>\n                                    ),\n                                }}\n                            />\n                            {\"    \"}\n                            <TextField\n                                id=\"capacityId\"\n                                label=\"Capacity\"\n                                variant=\"filled\"\n                                name=\"capacity\"\n                                onChange={this.handleChangeForm}\n                                type=\"number\"\n                                InputProps={{\n                                    startAdornment: (\n                                        <InputAdornment position=\"start\">\n                                            #\n                                        </InputAdornment>\n                                    ),\n                                }}\n                            />\n                        </div>\n                        <br />\n                        <Button type=\"button\" color=\"success\" onClick={this.save}>save <SaveOutlined></SaveOutlined></Button>\n                    </Box>\n                </Modal>\n                <Modal\n                    open={this.state.openUpdate}\n                    onClose={this.handleClose}\n                    aria-labelledby=\"modal-modal-title\"\n                    aria-describedby=\"modal-modal-description\"\n                >\n                    <Box sx={style} component=\"form\"\n\n                        noValidate\n                        autoComplete=\"off\">\n                        <div>\n                            <Typography><PrecisionManufacturing /> LOCATION REGISTRATION</Typography>\n                            <br />\n                            <TextField\n                                label=\"Location Name\"\n                                variant=\"filled\"\n                                name=\"locationName\"\n                                onChange={this.handleChangeForm}\n                                value={this.state.form.locationName}\n                            />\n                            {\"    \"}\n                            <TextField\n                                label=\"Latitude\"\n                                variant=\"filled\"\n                                name=\"latitude\"\n                                onChange={this.handleChangeForm}\n                                value={this.state.form.latitude}\n                            />\n                        </div>\n                        <br />\n                        <div>\n\n                            <TextField\n                                id=\"longitudeId\"\n                                label=\"Longitude\"\n                                variant=\"filled\"\n                                name=\"longitude\"\n                                onChange={this.handleChangeForm}\n                                value={this.state.form.longitude}\n                            />\n                            {\"    \"}\n                            <TextField\n                                label=\"Localization\"\n                                variant=\"filled\"\n                                name=\"localization\"\n                                onChange={this.handleChangeForm}\n                                value={this.state.form.localization}\n                            />\n                        </div>\n                        <br />\n                        <div>\n\n                            {\"    \"}\n                            <TextField\n                                id=\"realAreaId\"\n                                label=\"Area\"\n                                variant=\"filled\"\n                                name=\"realArea\"\n                                onChange={this.handleChangeForm}\n                                value={this.state.form.realArea}\n                                InputProps={{\n                                    startAdornment: (\n                                        <InputAdornment position=\"start\">\n                                            #\n                                        </InputAdornment>\n                                    ),\n                                }}\n                            />\n                            {\"    \"}\n                            <TextField\n                                id=\"capacityId\"\n                                label=\"Capacity\"\n                                variant=\"filled\"\n                                name=\"capacity\"\n                                value={this.state.form.capacity}\n                                onChange={this.handleChangeForm}\n                                type=\"number\"\n                                InputProps={{\n                                    startAdornment: (\n                                        <InputAdornment position=\"start\">\n                                            #\n                                        </InputAdornment>\n                                    ),\n                                }}\n                            />\n                        </div>\n                        <br />\n                        <Button type=\"button\" color=\"success\" onClick={this.update}>save <SaveOutlined></SaveOutlined></Button>\n                        {\"            \"}\n                        <Button type=\"button\" color=\"danger\" onClick={this.handleCloseUpdate}>Close X</Button>\n                    </Box>\n                </Modal>\n\n            </div>\n        );\n    }\n\n}\n\nexport default Entry;","import React from 'react';\nimport {BrowserRouter as Router, Routes,Route} from 'react-router-dom';\nimport Login from '../pages/login/Login';\nimport MenuNav from '../pages/menu/MenuNav';\nimport User from '../pages/user/User';\nimport Equipment from '../pages/equipment/Equipment';\nimport Invoice from '../pages/invoice/Invoice';\nimport Location from '../pages/location/Location';\nimport Entry from '../pages/entry/Entry';\n\nfunction RoutesPage(){\n    return (\n        <Router>\n            <Routes>\n                <Route exact path=\"/\" element={<Login/>}/>\n                <Route exact path=\"/user\" element={<User/>}/>\n                <Route exact path=\"/equipment\" element={<Equipment/>}/>\n                <Route exact path=\"/requisition\" element={<Invoice/>}/>\n                <Route exact path=\"/location\" element={<Location/>}/>\n                <Route exact path=\"/entry\" element={<Entry/>}/>\n            </Routes>\n        </Router>\n    );\n}\n\nexport default RoutesPage;","import { StrictMode } from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport RoutesPage from \"./routes/RoutesPage\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <StrictMode>\n    <RoutesPage />\n  </StrictMode>,\n  rootElement\n);\n"],"sourceRoot":""}